{
  "address": "0xf2bD4cBb66ddeBeA250ef4db2bcB401bff0CD60f",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "hackathonId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "url",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestampStart",
          "type": "uint256"
        }
      ],
      "name": "HackathonChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "hackathonId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "organizer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "url",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestampStart",
          "type": "uint256"
        }
      ],
      "name": "HackathonCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_hackathonId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_prizeId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_judge",
          "type": "address"
        }
      ],
      "name": "addJudge",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_hackathonId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        }
      ],
      "name": "addPrize",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "prizeId",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_timestampStart",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_timestampEnd",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_url",
          "type": "string"
        },
        {
          "internalType": "uint8",
          "name": "_judgingPeriod",
          "type": "uint8"
        }
      ],
      "name": "createHackathon",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "hackathonId",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "disableDemoMode",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "enableDemoMode",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_hackathonId",
          "type": "uint256"
        }
      ],
      "name": "getHackathonMetadata",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "organizer",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "timestampStart",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "timestampEnd",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "judgingPeriod",
              "type": "uint8"
            },
            {
              "internalType": "enum Hacka.HackathonStage",
              "name": "stage",
              "type": "uint8"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "url",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "balance",
              "type": "uint256"
            }
          ],
          "internalType": "struct Hacka.HackathonMetadata",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_hackathonId",
          "type": "uint256"
        }
      ],
      "name": "getHackathonPrizes",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "reward",
              "type": "uint256"
            },
            {
              "internalType": "address[]",
              "name": "judges",
              "type": "address[]"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "address[]",
              "name": "submissions",
              "type": "address[]"
            },
            {
              "internalType": "address",
              "name": "winner",
              "type": "address"
            }
          ],
          "internalType": "struct Hacka.HackathonPrize[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_organizer",
          "type": "address"
        }
      ],
      "name": "getHackathonsByOrganizer",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "s_hackathons",
      "outputs": [
        {
          "internalType": "address",
          "name": "organizer",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "timestampStart",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "timestampEnd",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "judgingPeriod",
          "type": "uint8"
        },
        {
          "internalType": "enum Hacka.HackathonStage",
          "name": "stage",
          "type": "uint8"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "url",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "s_organizerHackathons",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "s_prizes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "reward",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "winner",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_hackathonId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_timestampStart",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_timestampEnd",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_url",
          "type": "string"
        },
        {
          "internalType": "uint8",
          "name": "_judgingPeriod",
          "type": "uint8"
        }
      ],
      "name": "updateHackathonMetadata",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawLink",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xef43201446be9e1d64efe52be9fbc18b3963a01ebc79856bfc44d3720948375b",
  "receipt": {
    "to": null,
    "from": "0x6E51d5c51872f97caab78E8e3cA9a23C4945474A",
    "contractAddress": "0xf2bD4cBb66ddeBeA250ef4db2bcB401bff0CD60f",
    "transactionIndex": 3,
    "gasUsed": "3257986",
    "logsBloom": "0x
    "blockHash": "0xb11c5283d86d3bc6a515c5bd4fd8567f6c319e8a0591e044fc45440b0367af0b",
    "transactionHash": "0xef43201446be9e1d64efe52be9fbc18b3963a01ebc79856bfc44d3720948375b",
    "logs": [
      {
        "transactionIndex": 3,
        "blockNumber": 28511418,
        "transactionHash": "0xef43201446be9e1d64efe52be9fbc18b3963a01ebc79856bfc44d3720948375b",
        "address": "0xf2bD4cBb66ddeBeA250ef4db2bcB401bff0CD60f",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000006e51d5c51872f97caab78e8e3ca9a23c4945474a"
        ],
        "data": "0x",
        "logIndex": 11,
        "blockHash": "0xb11c5283d86d3bc6a515c5bd4fd8567f6c319e8a0591e044fc45440b0367af0b"
      }
    ],
    "blockNumber": 28511418,
    "cumulativeGasUsed": "3921406",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "d7645f2a205e18c1f94d88c4da3924cf",
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"hackathonId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"url\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestampStart\",\"type\":\"uint256\"}],\"name\":\"HackathonChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"hackathonId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"organizer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"url\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestampStart\",\"type\":\"uint256\"}],\"name\":\"HackathonCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_hackathonId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_prizeId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_judge\",\"type\":\"address\"}],\"name\":\"addJudge\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_hackathonId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_description\",\"type\":\"string\"}],\"name\":\"addPrize\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"prizeId\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_timestampStart\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_timestampEnd\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_url\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"_judgingPeriod\",\"type\":\"uint8\"}],\"name\":\"createHackathon\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"hackathonId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"disableDemoMode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enableDemoMode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_hackathonId\",\"type\":\"uint256\"}],\"name\":\"getHackathonMetadata\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"organizer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestampStart\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestampEnd\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"judgingPeriod\",\"type\":\"uint8\"},{\"internalType\":\"enum Hacka.HackathonStage\",\"name\":\"stage\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"url\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"internalType\":\"struct Hacka.HackathonMetadata\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_hackathonId\",\"type\":\"uint256\"}],\"name\":\"getHackathonPrizes\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"judges\",\"type\":\"address[]\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"address[]\",\"name\":\"submissions\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"}],\"internalType\":\"struct Hacka.HackathonPrize[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_organizer\",\"type\":\"address\"}],\"name\":\"getHackathonsByOrganizer\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"s_hackathons\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"organizer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestampStart\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestampEnd\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"judgingPeriod\",\"type\":\"uint8\"},{\"internalType\":\"enum Hacka.HackathonStage\",\"name\":\"stage\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"url\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"s_organizerHackathons\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"s_prizes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_hackathonId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_timestampStart\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_timestampEnd\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_url\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"_judgingPeriod\",\"type\":\"uint8\"}],\"name\":\"updateHackathonMetadata\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawLink\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"Deploy with the address of the LINK token@param _link The address of the LINK token\"},\"withdrawLink()\":{\"notice\":\"Allows the owner to withdraw any LINK balance on the contract\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Hacka.sol\":\"Hacka\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface LinkTokenInterface {\\n\\n  function allowance(\\n    address owner,\\n    address spender\\n  )\\n    external\\n    view\\n    returns (\\n      uint256 remaining\\n    );\\n\\n  function approve(\\n    address spender,\\n    uint256 value\\n  )\\n    external\\n    returns (\\n      bool success\\n    );\\n\\n  function balanceOf(\\n    address owner\\n  )\\n    external\\n    view\\n    returns (\\n      uint256 balance\\n    );\\n\\n  function decimals()\\n    external\\n    view\\n    returns (\\n      uint8 decimalPlaces\\n    );\\n\\n  function decreaseApproval(\\n    address spender,\\n    uint256 addedValue\\n  )\\n    external\\n    returns (\\n      bool success\\n    );\\n\\n  function increaseApproval(\\n    address spender,\\n    uint256 subtractedValue\\n  ) external;\\n\\n  function name()\\n    external\\n    view\\n    returns (\\n      string memory tokenName\\n    );\\n\\n  function symbol()\\n    external\\n    view\\n    returns (\\n      string memory tokenSymbol\\n    );\\n\\n  function totalSupply()\\n    external\\n    view\\n    returns (\\n      uint256 totalTokensIssued\\n    );\\n\\n  function transfer(\\n    address to,\\n    uint256 value\\n  )\\n    external\\n    returns (\\n      bool success\\n    );\\n\\n  function transferAndCall(\\n    address to,\\n    uint256 value,\\n    bytes calldata data\\n  )\\n    external\\n    returns (\\n      bool success\\n    );\\n\\n  function transferFrom(\\n    address from,\\n    address to,\\n    uint256 value\\n  )\\n    external\\n    returns (\\n      bool success\\n    );\\n\\n}\\n\",\"keccak256\":\"0x50528c237386c55ff122d047f91b32be7abe24e9dfdc609de21cd605aae83b9a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _setOwner(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _setOwner(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _setOwner(newOwner);\\n    }\\n\\n    function _setOwner(address newOwner) private {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x6bb804a310218875e89d12c053e94a13a4607cdf7cc2052f3e52bd32a0dc50a1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x90565a39ae45c80f0468dc96c7b20d0afc3055f344c8203a0c9258239f350b9f\",\"license\":\"MIT\"},\"contracts/Hacka.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.7;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol\\\";\\n\\ncontract Hacka is Ownable {\\n    bool private s_demoMode = false; // to be deleted\\n    uint private s_counter = 0;\\n    LinkTokenInterface internal LinkToken;\\n\\n    enum HackathonStage { NEW, STARTED, JUDGING, FINALIZED }\\n\\n    struct HackathonMetadata {\\n        address organizer;\\n        uint timestampStart;\\n        uint timestampEnd;\\n        uint8 judgingPeriod;\\n        HackathonStage stage;\\n        string name;\\n        string url;\\n        uint balance;\\n        // TODO cid for description\\n    }\\n\\n    struct HackathonPrize {\\n        uint reward;\\n        address[] judges;\\n        string name;\\n        string description;\\n        address[] submissions;\\n        address winner;\\n    }\\n\\n    mapping(uint => HackathonMetadata) public s_hackathons;\\n    mapping(uint => HackathonPrize[]) public s_prizes;\\n    mapping(address => uint[]) public s_organizerHackathons;\\n\\n    event HackathonCreated(uint indexed hackathonId, address indexed organizer, string name, string url, uint timestampStart);\\n    event HackathonChanged(uint indexed hackathonId, string name, string url, uint timestampStart);\\n\\n    /**\\n     * @notice Deploy with the address of the LINK token\\n     * @notice @param _link The address of the LINK token\\n     */\\n    constructor(/*address _link*/) {\\n        // LinkToken = LinkTokenInterface(_link);\\n        // TODO should not be hardcoded\\n        // TODO add hackathon ERC20 as well?\\n        LinkToken = LinkTokenInterface(0xa36085F69e2889c224210F603D836748e7dC0088);\\n    }\\n\\n    function createHackathon(\\n        uint _timestampStart,\\n        uint _timestampEnd,\\n        string calldata _name,\\n        string calldata _url,\\n        uint8 _judgingPeriod\\n    ) external returns (uint hackathonId) {\\n        if (s_demoMode == false) {\\n            validateMetadata(\\n                _timestampStart,\\n                _timestampEnd,\\n                _name,\\n                _judgingPeriod,\\n                block.timestamp\\n            );\\n        }\\n\\n        hackathonId = s_counter;\\n        s_counter = s_counter + 1;\\n\\n        s_hackathons[hackathonId].organizer = msg.sender;\\n        s_hackathons[hackathonId].timestampStart = _timestampStart;\\n        s_hackathons[hackathonId].timestampEnd = _timestampEnd;\\n        s_hackathons[hackathonId].judgingPeriod = _judgingPeriod;\\n        s_hackathons[hackathonId].stage = HackathonStage.NEW;\\n        s_hackathons[hackathonId].name = _name;\\n        s_hackathons[hackathonId].url = _url;\\n\\n        s_organizerHackathons[msg.sender].push(hackathonId);\\n\\n        emit HackathonCreated(hackathonId, msg.sender, _name, _url, _timestampStart);\\n\\n        return hackathonId;\\n    }\\n\\n    function updateHackathonMetadata(\\n        uint _hackathonId,\\n        uint _timestampStart,\\n        uint _timestampEnd,\\n        string calldata _name,\\n        string calldata _url,\\n        uint8 _judgingPeriod\\n    ) external {\\n        require(s_hackathons[_hackathonId].organizer == msg.sender, \\\"Only hackathon's organizer can change its metadata\\\");\\n        require(s_hackathons[_hackathonId].timestampStart - block.timestamp > 1 hours, \\\"Hackathon metadata can be changed up until 1 hour before start\\\");\\n        require(s_hackathons[_hackathonId].stage == HackathonStage.NEW, \\\"Hackathon metadata can't change after it has started\\\");\\n        validateMetadata(\\n            _timestampStart,\\n            _timestampEnd,\\n            _name,\\n            _judgingPeriod,\\n            block.timestamp\\n        );\\n\\n        s_hackathons[_hackathonId].timestampStart = _timestampStart;\\n        s_hackathons[_hackathonId].timestampEnd = _timestampEnd;\\n        s_hackathons[_hackathonId].name = _name;\\n        s_hackathons[_hackathonId].url = _url;\\n        s_hackathons[_hackathonId].judgingPeriod = _judgingPeriod;\\n\\n        emit HackathonChanged(_hackathonId, _name, _url, _timestampStart);\\n    }\\n\\n    // TODO method to transfer hackathon ownership to another address (change organizer)\\n\\n    function validateMetadata(\\n        uint _timestampStart,\\n        uint _timestampEnd,\\n        string calldata _name,\\n        uint8 _judgingPeriod,\\n        uint _currentTimestamp\\n    ) pure internal {\\n        require(_timestampEnd - _timestampStart > 1 days, \\\"Hackathon must be at least 1 day long\\\");\\n        require(_timestampStart - _currentTimestamp >= 1 days, \\\"Hackathon start date must be at least 1 day in the future\\\");\\n        require(_judgingPeriod >= 1, \\\"Judging period must be at least 1 day\\\");\\n        require(_judgingPeriod <= 31, \\\"Judging period must not be longer than 31 days\\\");\\n        require(bytes(_name).length >= 8, \\\"Hackathon name must be at least 8 characters\\\");\\n        require(bytes(_name).length <= 100, \\\"Hackathon name must be at most 100 characters\\\");\\n    }\\n\\n    // TODO should accept other tokens, or more specifically - \\\"Hackathon Token\\\" ERC20, for now just use ETH\\n    function addPrize(\\n        uint256 _amount,\\n        uint _hackathonId,\\n        string calldata _name,\\n        string calldata _description\\n    ) external payable returns (uint prizeId) {\\n        require(msg.value == _amount);\\n        require(s_hackathons[_hackathonId].stage == HackathonStage.NEW, \\\"Can't add a prize to an ongoing or finished hackathon\\\");\\n        require(s_hackathons[_hackathonId].organizer == msg.sender, \\\"Only hackathon's organizer can add a prize\\\");\\n        require(bytes(_name).length > 8, \\\"Prize name must be at least 8 characters\\\");\\n        require(msg.value >= 0.0001 ether, \\\"Minimum prize reward is 0.0001 ETH\\\");\\n\\n        s_hackathons[_hackathonId].balance += msg.value;\\n\\n        HackathonPrize memory prize;\\n        prize.reward = msg.value;\\n        prize.name = _name;\\n        prize.description = _description;\\n\\n        prizeId = s_prizes[_hackathonId].length;\\n        s_prizes[_hackathonId].push(prize);\\n\\n        // TODO emit event about prize being created\\n\\n        return prizeId;\\n    }\\n\\n    function addJudge(\\n        uint _hackathonId,\\n        uint _prizeId,\\n        address _judge\\n    ) external {\\n        require(s_hackathons[_hackathonId].organizer == msg.sender, \\\"Only hackathon's organizer can add a judge\\\");\\n        require(s_prizes[_hackathonId][_prizeId].reward > 0, \\\"Prize not found\\\");\\n\\n        s_prizes[_hackathonId][_prizeId].judges.push(_judge);\\n        // TODO emit event about judge being added\\n    }\\n\\n    function getHackathonsByOrganizer(\\n        address _organizer\\n    ) external view returns (uint[] memory) {\\n        return s_organizerHackathons[_organizer];\\n    }\\n\\n    function getHackathonMetadata(uint _hackathonId) external view returns (HackathonMetadata memory) {\\n        return s_hackathons[_hackathonId];\\n    }\\n\\n    function getHackathonPrizes(uint _hackathonId) external view returns (HackathonPrize[] memory) {\\n        return s_prizes[_hackathonId];\\n    }\\n\\n    /**\\n     * @notice Allows the owner to withdraw any LINK balance on the contract\\n     */\\n    function withdrawLink() public onlyOwner {\\n        require(LinkToken.transfer(msg.sender, LinkToken.balanceOf(address(this))), \\\"Unable to transfer\\\");\\n    }\\n\\n    // TODO delete for actual use! demo mode is to be able to skip date checks to create a demo hackathon\\n    function enableDemoMode() public onlyOwner {\\n        s_demoMode = true;\\n    }\\n\\n    // TODO delete for actual use! demo mode is to be able to skip date checks to create a demo hackathon\\n    function disableDemoMode() public onlyOwner {\\n        s_demoMode = false;\\n    }\\n}\\n\",\"keccak256\":\"0x41bb08bd5c3cc7f4f0de26453de2e3199dd77d79f49ad070f56353e2a55bc2cb\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x6080604052600436106100f35760003560e01c80638dc654a21161008a578063dad39e7b11610059578063dad39e7b14610322578063dc499a0214610339578063f2fde38b14610376578063fb39df8e1461039f576100f3565b80638dc654a21461028e578063adb622db146102a5578063c0384621146102bc578063d738c38f146102f9576100f3565b8063715018a6116100c6578063715018a6146101e65780637dc0cae4146101fd57806389e1037c1461023a5780638da5cb5b14610263576100f3565b8063042054f4146100f857806333705779146101355780634651efb514610165578063492c7c0d146101a2575b600080fd5b34801561010457600080fd5b5061011f600480360381019061011a91906122a2565b6103df565b60405161012c9190612fb5565b60405180910390f35b61014f600480360381019061014a919061238f565b6105fd565b60405161015c9190612fd7565b60405180910390f35b34801561017157600080fd5b5061018c60048036038101906101879190612436565b6109c9565b6040516101999190612fd7565b60405180910390f35b3480156101ae57600080fd5b506101c960048036038101906101c491906122a2565b610c1b565b6040516101dd989796959493929190612c5c565b60405180910390f35b3480156101f257600080fd5b506101fb610dad565b005b34801561020957600080fd5b50610224600480360381019061021f9190612235565b610e35565b6040516102319190612fd7565b60405180910390f35b34801561024657600080fd5b50610261600480360381019061025c919061233c565b610e66565b005b34801561026f57600080fd5b5061027861101f565b6040516102859190612c18565b60405180910390f35b34801561029a57600080fd5b506102a3611048565b005b3480156102b157600080fd5b506102ba61125e565b005b3480156102c857600080fd5b506102e360048036038101906102de9190612208565b6112f7565b6040516102f09190612d0a565b60405180910390f35b34801561030557600080fd5b50610320600480360381019061031b91906124f2565b61138e565b005b34801561032e57600080fd5b5061033761162a565b005b34801561034557600080fd5b50610360600480360381019061035b91906122a2565b6116c2565b60405161036d9190612ce8565b60405180910390f35b34801561038257600080fd5b5061039d60048036038101906103989190612208565b6119d4565b005b3480156103ab57600080fd5b506103c660048036038101906103c191906122fc565b611acc565b6040516103d69493929190612ff2565b60405180910390f35b6103e7611eda565b60036000838152602001908152602001600020604051806101000160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201548152602001600282015481526020016003820160009054906101000a900460ff1660ff1660ff1681526020016003820160019054906101000a900460ff1660038111156104b2576104b16132c4565b5b60038111156104c4576104c36132c4565b5b81526020016004820180546104d890613263565b80601f016020809104026020016040519081016040528092919081815260200182805461050490613263565b80156105515780601f1061052657610100808354040283529160200191610551565b820191906000526020600020905b81548152906001019060200180831161053457829003601f168201915b5050505050815260200160058201805461056a90613263565b80601f016020809104026020016040519081016040528092919081815260200182805461059690613263565b80156105e35780601f106105b8576101008083540402835291602001916105e3565b820191906000526020600020905b8154815290600101906020018083116105c657829003601f168201915b505050505081526020016006820154815250509050919050565b600086341461060b57600080fd5b6000600381111561061f5761061e6132c4565b5b6003600088815260200190815260200160002060030160019054906101000a900460ff166003811115610655576106546132c4565b5b14610695576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161068c90612f35565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166003600088815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610739576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161073090612db5565b60405180910390fd5b6008858590501161077f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161077690612f95565b60405180910390fd5b655af3107a40003410156107c8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107bf90612e35565b60405180910390fd5b346003600088815260200190815260200160002060060160008282546107ee919061311d565b925050819055506107fd611f4a565b3481600001818152505085858080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050816040018190525083838080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050508160600181905250600460008881526020019081526020016000208054905091506004600088815260200190815260200160002081908060018154018082558091505060019003906000526020600020906006020160009091909190915060008201518160000155602082015181600101908051906020019061091d929190611f96565b50604082015181600201908051906020019061093a929190612020565b506060820151816003019080519060200190610957929190612020565b506080820151816004019080519060200190610974929190611f96565b5060a08201518160050160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050509695505050505050565b6000801515600060149054906101000a900460ff16151514156109f5576109f4888888888642611c49565b5b600154905060018054610a08919061311d565b600181905550336003600083815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550876003600083815260200190815260200160002060010181905550866003600083815260200190815260200160002060020181905550816003600083815260200190815260200160002060030160006101000a81548160ff021916908360ff16021790555060006003600083815260200190815260200160002060030160016101000a81548160ff02191690836003811115610b0257610b016132c4565b5b02179055508585600360008481526020019081526020016000206004019190610b2c9291906120a6565b508383600360008481526020019081526020016000206005019190610b529291906120a6565b50600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150506001900390600052602060002001600090919091909150553373ffffffffffffffffffffffffffffffffffffffff16817faf8a61bb02f5ea4ba781ab6746e3e7ab13b29d17e89e2233e4819934813ac167888888888e604051610c08959493929190612d2c565b60405180910390a3979650505050505050565b60036020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020154908060030160009054906101000a900460ff16908060030160019054906101000a900460ff1690806004018054610c9690613263565b80601f0160208091040260200160405190810160405280929190818152602001828054610cc290613263565b8015610d0f5780601f10610ce457610100808354040283529160200191610d0f565b820191906000526020600020905b815481529060010190602001808311610cf257829003601f168201915b505050505090806005018054610d2490613263565b80601f0160208091040260200160405190810160405280929190818152602001828054610d5090613263565b8015610d9d5780601f10610d7257610100808354040283529160200191610d9d565b820191906000526020600020905b815481529060010190602001808311610d8057829003601f168201915b5050505050908060060154905088565b610db5611e0e565b73ffffffffffffffffffffffffffffffffffffffff16610dd361101f565b73ffffffffffffffffffffffffffffffffffffffff1614610e29576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e2090612eb5565b60405180910390fd5b610e336000611e16565b565b60056020528160005260406000208181548110610e5157600080fd5b90600052602060002001600091509150505481565b3373ffffffffffffffffffffffffffffffffffffffff166003600085815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610f0a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f0190612dd5565b60405180910390fd5b6000600460008581526020019081526020016000208381548110610f3157610f30613322565b5b90600052602060002090600602016000015411610f83576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f7a90612e15565b60405180910390fd5b600460008481526020019081526020016000208281548110610fa857610fa7613322565b5b9060005260206000209060060201600101819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b611050611e0e565b73ffffffffffffffffffffffffffffffffffffffff1661106e61101f565b73ffffffffffffffffffffffffffffffffffffffff16146110c4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110bb90612eb5565b60405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161115e9190612c18565b60206040518083038186803b15801561117657600080fd5b505afa15801561118a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111ae91906122cf565b6040518363ffffffff1660e01b81526004016111cb929190612c33565b602060405180830381600087803b1580156111e557600080fd5b505af11580156111f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061121d9190612275565b61125c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161125390612e75565b60405180910390fd5b565b611266611e0e565b73ffffffffffffffffffffffffffffffffffffffff1661128461101f565b73ffffffffffffffffffffffffffffffffffffffff16146112da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112d190612eb5565b60405180910390fd5b6001600060146101000a81548160ff021916908315150217905550565b6060600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080548060200260200160405190810160405280929190818152602001828054801561138257602002820191906000526020600020905b81548152602001906001019080831161136e575b50505050509050919050565b3373ffffffffffffffffffffffffffffffffffffffff16600360008a815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611432576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161142990612e95565b60405180910390fd5b610e1042600360008b8152602001908152602001600020600101546114579190613173565b11611497576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161148e90612ef5565b60405180910390fd5b600060038111156114ab576114aa6132c4565b5b600360008a815260200190815260200160002060030160019054906101000a900460ff1660038111156114e1576114e06132c4565b5b14611521576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161151890612df5565b60405180910390fd5b61152f878787878542611c49565b86600360008a81526020019081526020016000206001018190555085600360008a8152602001908152602001600020600201819055508484600360008b8152602001908152602001600020600401919061158a9291906120a6565b508282600360008b815260200190815260200160002060050191906115b09291906120a6565b5080600360008a815260200190815260200160002060030160006101000a81548160ff021916908360ff160217905550877f86057f7ef3d6af6158e18db712016e366a45ff9ab04ba3df426a087d63262cf2868686868c604051611618959493929190612d2c565b60405180910390a25050505050505050565b611632611e0e565b73ffffffffffffffffffffffffffffffffffffffff1661165061101f565b73ffffffffffffffffffffffffffffffffffffffff16146116a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161169d90612eb5565b60405180910390fd5b60008060146101000a81548160ff021916908315150217905550565b606060046000838152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b828210156119c957838290600052602060002090600602016040518060c001604052908160008201548152602001600182018054806020026020016040519081016040528092919081815260200182805480156117a957602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161175f575b505050505081526020016002820180546117c290613263565b80601f01602080910402602001604051908101604052809291908181526020018280546117ee90613263565b801561183b5780601f106118105761010080835404028352916020019161183b565b820191906000526020600020905b81548152906001019060200180831161181e57829003601f168201915b5050505050815260200160038201805461185490613263565b80601f016020809104026020016040519081016040528092919081815260200182805461188090613263565b80156118cd5780601f106118a2576101008083540402835291602001916118cd565b820191906000526020600020905b8154815290600101906020018083116118b057829003601f168201915b505050505081526020016004820180548060200260200160405190810160405280929190818152602001828054801561195b57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611911575b505050505081526020016005820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681525050815260200190600101906116f7565b505050509050919050565b6119dc611e0e565b73ffffffffffffffffffffffffffffffffffffffff166119fa61101f565b73ffffffffffffffffffffffffffffffffffffffff1614611a50576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a4790612eb5565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611ac0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611ab790612d95565b60405180910390fd5b611ac981611e16565b50565b60046020528160005260406000208181548110611ae857600080fd5b906000526020600020906006020160009150915050806000015490806002018054611b1290613263565b80601f0160208091040260200160405190810160405280929190818152602001828054611b3e90613263565b8015611b8b5780601f10611b6057610100808354040283529160200191611b8b565b820191906000526020600020905b815481529060010190602001808311611b6e57829003601f168201915b505050505090806003018054611ba090613263565b80601f0160208091040260200160405190810160405280929190818152602001828054611bcc90613263565b8015611c195780601f10611bee57610100808354040283529160200191611c19565b820191906000526020600020905b815481529060010190602001808311611bfc57829003601f168201915b5050505050908060050160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905084565b620151808686611c599190613173565b11611c99576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c9090612ed5565b60405180910390fd5b620151808187611ca99190613173565b1015611cea576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611ce190612f55565b60405180910390fd5b60018260ff161015611d31576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d2890612f15565b60405180910390fd5b601f8260ff161115611d78576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d6f90612d75565b60405180910390fd5b6008848490501015611dbf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611db690612f75565b60405180910390fd5b6064848490501115611e06576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611dfd90612e55565b60405180910390fd5b505050505050565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b604051806101000160405280600073ffffffffffffffffffffffffffffffffffffffff1681526020016000815260200160008152602001600060ff16815260200160006003811115611f2f57611f2e6132c4565b5b81526020016060815260200160608152602001600081525090565b6040518060c001604052806000815260200160608152602001606081526020016060815260200160608152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b82805482825590600052602060002090810192821561200f579160200282015b8281111561200e5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190611fb6565b5b50905061201c919061212c565b5090565b82805461202c90613263565b90600052602060002090601f01602090048101928261204e5760008555612095565b82601f1061206757805160ff1916838001178555612095565b82800160010185558215612095579182015b82811115612094578251825591602001919060010190612079565b5b5090506120a2919061212c565b5090565b8280546120b290613263565b90600052602060002090601f0160209004810192826120d4576000855561211b565b82601f106120ed57803560ff191683800117855561211b565b8280016001018555821561211b579182015b8281111561211a5782358255916020019190600101906120ff565b5b509050612128919061212c565b5090565b5b8082111561214557600081600090555060010161212d565b5090565b600081359050612158816138ab565b92915050565b60008151905061216d816138c2565b92915050565b60008083601f84011261218957612188613356565b5b8235905067ffffffffffffffff8111156121a6576121a5613351565b5b6020830191508360018202830111156121c2576121c161335b565b5b9250929050565b6000813590506121d8816138d9565b92915050565b6000815190506121ed816138d9565b92915050565b600081359050612202816138f0565b92915050565b60006020828403121561221e5761221d613365565b5b600061222c84828501612149565b91505092915050565b6000806040838503121561224c5761224b613365565b5b600061225a85828601612149565b925050602061226b858286016121c9565b9150509250929050565b60006020828403121561228b5761228a613365565b5b60006122998482850161215e565b91505092915050565b6000602082840312156122b8576122b7613365565b5b60006122c6848285016121c9565b91505092915050565b6000602082840312156122e5576122e4613365565b5b60006122f3848285016121de565b91505092915050565b6000806040838503121561231357612312613365565b5b6000612321858286016121c9565b9250506020612332858286016121c9565b9150509250929050565b60008060006060848603121561235557612354613365565b5b6000612363868287016121c9565b9350506020612374868287016121c9565b925050604061238586828701612149565b9150509250925092565b600080600080600080608087890312156123ac576123ab613365565b5b60006123ba89828a016121c9565b96505060206123cb89828a016121c9565b955050604087013567ffffffffffffffff8111156123ec576123eb613360565b5b6123f889828a01612173565b9450945050606087013567ffffffffffffffff81111561241b5761241a613360565b5b61242789828a01612173565b92509250509295509295509295565b600080600080600080600060a0888a03121561245557612454613365565b5b60006124638a828b016121c9565b97505060206124748a828b016121c9565b965050604088013567ffffffffffffffff81111561249557612494613360565b5b6124a18a828b01612173565b9550955050606088013567ffffffffffffffff8111156124c4576124c3613360565b5b6124d08a828b01612173565b935093505060806124e38a828b016121f3565b91505092959891949750929550565b60008060008060008060008060c0898b03121561251257612511613365565b5b60006125208b828c016121c9565b98505060206125318b828c016121c9565b97505060406125428b828c016121c9565b965050606089013567ffffffffffffffff81111561256357612562613360565b5b61256f8b828c01612173565b9550955050608089013567ffffffffffffffff81111561259257612591613360565b5b61259e8b828c01612173565b935093505060a06125b18b828c016121f3565b9150509295985092959890939650565b60006125cd8383612605565b60208301905092915050565b60006125e58383612b3e565b905092915050565b60006125f98383612bdc565b60208301905092915050565b61260e816131a7565b82525050565b61261d816131a7565b82525050565b600061262e82613075565b61263881856130c8565b935061264383613045565b8060005b8381101561267457815161265b88826125c1565b9750612666836130a1565b925050600181019050612647565b5085935050505092915050565b600061268c82613080565b61269681856130d9565b9350836020820285016126a885613055565b8060005b858110156126e457848403895281516126c585826125d9565b94506126d0836130ae565b925060208a019950506001810190506126ac565b50829750879550505050505092915050565b60006127018261308b565b61270b81856130ea565b935061271683613065565b8060005b8381101561274757815161272e88826125ed565b9750612739836130bb565b92505060018101905061271a565b5085935050505092915050565b61275d8161320f565b82525050565b61276c8161320f565b82525050565b600061277e838561310c565b935061278b838584613221565b6127948361336a565b840190509392505050565b60006127aa82613096565b6127b481856130fb565b93506127c4818560208601613230565b6127cd8161336a565b840191505092915050565b60006127e382613096565b6127ed818561310c565b93506127fd818560208601613230565b6128068161336a565b840191505092915050565b600061281e602e8361310c565b91506128298261337b565b604082019050919050565b600061284160268361310c565b915061284c826133ca565b604082019050919050565b6000612864602a8361310c565b915061286f82613419565b604082019050919050565b6000612887602a8361310c565b915061289282613468565b604082019050919050565b60006128aa60348361310c565b91506128b5826134b7565b604082019050919050565b60006128cd600f8361310c565b91506128d882613506565b602082019050919050565b60006128f060228361310c565b91506128fb8261352f565b604082019050919050565b6000612913602d8361310c565b915061291e8261357e565b604082019050919050565b600061293660128361310c565b9150612941826135cd565b602082019050919050565b600061295960328361310c565b9150612964826135f6565b604082019050919050565b600061297c60208361310c565b915061298782613645565b602082019050919050565b600061299f60258361310c565b91506129aa8261366e565b604082019050919050565b60006129c2603e8361310c565b91506129cd826136bd565b604082019050919050565b60006129e560258361310c565b91506129f08261370c565b604082019050919050565b6000612a0860358361310c565b9150612a138261375b565b604082019050919050565b6000612a2b60398361310c565b9150612a36826137aa565b604082019050919050565b6000612a4e602c8361310c565b9150612a59826137f9565b604082019050919050565b6000612a7160288361310c565b9150612a7c82613848565b604082019050919050565b600061010083016000830151612aa06000860182612605565b506020830151612ab36020860182612bdc565b506040830151612ac66040860182612bdc565b506060830151612ad96060860182612bfa565b506080830151612aec6080860182612754565b5060a083015184820360a0860152612b04828261279f565b91505060c083015184820360c0860152612b1e828261279f565b91505060e0830151612b3360e0860182612bdc565b508091505092915050565b600060c083016000830151612b566000860182612bdc565b5060208301518482036020860152612b6e8282612623565b91505060408301518482036040860152612b88828261279f565b91505060608301518482036060860152612ba2828261279f565b91505060808301518482036080860152612bbc8282612623565b91505060a0830151612bd160a0860182612605565b508091505092915050565b612be5816131f8565b82525050565b612bf4816131f8565b82525050565b612c0381613202565b82525050565b612c1281613202565b82525050565b6000602082019050612c2d6000830184612614565b92915050565b6000604082019050612c486000830185612614565b612c556020830184612beb565b9392505050565b600061010082019050612c72600083018b612614565b612c7f602083018a612beb565b612c8c6040830189612beb565b612c996060830188612c09565b612ca66080830187612763565b81810360a0830152612cb881866127d8565b905081810360c0830152612ccc81856127d8565b9050612cdb60e0830184612beb565b9998505050505050505050565b60006020820190508181036000830152612d028184612681565b905092915050565b60006020820190508181036000830152612d2481846126f6565b905092915050565b60006060820190508181036000830152612d47818789612772565b90508181036020830152612d5c818587612772565b9050612d6b6040830184612beb565b9695505050505050565b60006020820190508181036000830152612d8e81612811565b9050919050565b60006020820190508181036000830152612dae81612834565b9050919050565b60006020820190508181036000830152612dce81612857565b9050919050565b60006020820190508181036000830152612dee8161287a565b9050919050565b60006020820190508181036000830152612e0e8161289d565b9050919050565b60006020820190508181036000830152612e2e816128c0565b9050919050565b60006020820190508181036000830152612e4e816128e3565b9050919050565b60006020820190508181036000830152612e6e81612906565b9050919050565b60006020820190508181036000830152612e8e81612929565b9050919050565b60006020820190508181036000830152612eae8161294c565b9050919050565b60006020820190508181036000830152612ece8161296f565b9050919050565b60006020820190508181036000830152612eee81612992565b9050919050565b60006020820190508181036000830152612f0e816129b5565b9050919050565b60006020820190508181036000830152612f2e816129d8565b9050919050565b60006020820190508181036000830152612f4e816129fb565b9050919050565b60006020820190508181036000830152612f6e81612a1e565b9050919050565b60006020820190508181036000830152612f8e81612a41565b9050919050565b60006020820190508181036000830152612fae81612a64565b9050919050565b60006020820190508181036000830152612fcf8184612a87565b905092915050565b6000602082019050612fec6000830184612beb565b92915050565b60006080820190506130076000830187612beb565b818103602083015261301981866127d8565b9050818103604083015261302d81856127d8565b905061303c6060830184612614565b95945050505050565b6000819050602082019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b6000613128826131f8565b9150613133836131f8565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561316857613167613295565b5b828201905092915050565b600061317e826131f8565b9150613189836131f8565b92508282101561319c5761319b613295565b5b828203905092915050565b60006131b2826131d8565b9050919050565b60008115159050919050565b60008190506131d382613897565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b600061321a826131c5565b9050919050565b82818337600083830152505050565b60005b8381101561324e578082015181840152602081019050613233565b8381111561325d576000848401525b50505050565b6000600282049050600182168061327b57607f821691505b6020821081141561328f5761328e6132f3565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4a756467696e6720706572696f64206d757374206e6f74206265206c6f6e676560008201527f72207468616e2033312064617973000000000000000000000000000000000000602082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4f6e6c79206861636b6174686f6e2773206f7267616e697a65722063616e206160008201527f64642061207072697a6500000000000000000000000000000000000000000000602082015250565b7f4f6e6c79206861636b6174686f6e2773206f7267616e697a65722063616e206160008201527f64642061206a7564676500000000000000000000000000000000000000000000602082015250565b7f4861636b6174686f6e206d657461646174612063616e2774206368616e67652060008201527f6166746572206974206861732073746172746564000000000000000000000000602082015250565b7f5072697a65206e6f7420666f756e640000000000000000000000000000000000600082015250565b7f4d696e696d756d207072697a652072657761726420697320302e30303031204560008201527f5448000000000000000000000000000000000000000000000000000000000000602082015250565b7f4861636b6174686f6e206e616d65206d757374206265206174206d6f7374203160008201527f3030206368617261637465727300000000000000000000000000000000000000602082015250565b7f556e61626c6520746f207472616e736665720000000000000000000000000000600082015250565b7f4f6e6c79206861636b6174686f6e2773206f7267616e697a65722063616e206360008201527f68616e676520697473206d657461646174610000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f4861636b6174686f6e206d757374206265206174206c6561737420312064617960008201527f206c6f6e67000000000000000000000000000000000000000000000000000000602082015250565b7f4861636b6174686f6e206d657461646174612063616e206265206368616e676560008201527f6420757020756e74696c203120686f7572206265666f72652073746172740000602082015250565b7f4a756467696e6720706572696f64206d757374206265206174206c656173742060008201527f3120646179000000000000000000000000000000000000000000000000000000602082015250565b7f43616e2774206164642061207072697a6520746f20616e206f6e676f696e672060008201527f6f722066696e6973686564206861636b6174686f6e0000000000000000000000602082015250565b7f4861636b6174686f6e2073746172742064617465206d7573742062652061742060008201527f6c6561737420312064617920696e207468652066757475726500000000000000602082015250565b7f4861636b6174686f6e206e616d65206d757374206265206174206c656173742060008201527f3820636861726163746572730000000000000000000000000000000000000000602082015250565b7f5072697a65206e616d65206d757374206265206174206c65617374203820636860008201527f6172616374657273000000000000000000000000000000000000000000000000602082015250565b600481106138a8576138a76132c4565b5b50565b6138b4816131a7565b81146138bf57600080fd5b50565b6138cb816131b9565b81146138d657600080fd5b50565b6138e2816131f8565b81146138ed57600080fd5b50565b6138f981613202565b811461390457600080fd5b5056fea2646970667358221220a9951ffc03d26cca124fa3bb934f4288e5af7ca08b598bbdc59447d96e3e5c0664736f6c63430008070033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "constructor": {
        "notice": "Deploy with the address of the LINK token@param _link The address of the LINK token"
      },
      "withdrawLink()": {
        "notice": "Allows the owner to withdraw any LINK balance on the contract"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 102,
        "contract": "contracts/Hacka.sol:Hacka",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 229,
        "contract": "contracts/Hacka.sol:Hacka",
        "label": "s_demoMode",
        "offset": 20,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 232,
        "contract": "contracts/Hacka.sol:Hacka",
        "label": "s_counter",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 235,
        "contract": "contracts/Hacka.sol:Hacka",
        "label": "LinkToken",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(LinkTokenInterface)94"
      },
      {
        "astId": 278,
        "contract": "contracts/Hacka.sol:Hacka",
        "label": "s_hackathons",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_uint256,t_struct(HackathonMetadata)258_storage)"
      },
      {
        "astId": 284,
        "contract": "contracts/Hacka.sol:Hacka",
        "label": "s_prizes",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_uint256,t_array(t_struct(HackathonPrize)273_storage)dyn_storage)"
      },
      {
        "astId": 289,
        "contract": "contracts/Hacka.sol:Hacka",
        "label": "s_organizerHackathons",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_array(t_struct(HackathonPrize)273_storage)dyn_storage": {
        "base": "t_struct(HackathonPrize)273_storage",
        "encoding": "dynamic_array",
        "label": "struct Hacka.HackathonPrize[]",
        "numberOfBytes": "32"
      },
      "t_array(t_uint256)dyn_storage": {
        "base": "t_uint256",
        "encoding": "dynamic_array",
        "label": "uint256[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(LinkTokenInterface)94": {
        "encoding": "inplace",
        "label": "contract LinkTokenInterface",
        "numberOfBytes": "20"
      },
      "t_enum(HackathonStage)240": {
        "encoding": "inplace",
        "label": "enum Hacka.HackathonStage",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256[])",
        "numberOfBytes": "32",
        "value": "t_array(t_uint256)dyn_storage"
      },
      "t_mapping(t_uint256,t_array(t_struct(HackathonPrize)273_storage)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct Hacka.HackathonPrize[])",
        "numberOfBytes": "32",
        "value": "t_array(t_struct(HackathonPrize)273_storage)dyn_storage"
      },
      "t_mapping(t_uint256,t_struct(HackathonMetadata)258_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct Hacka.HackathonMetadata)",
        "numberOfBytes": "32",
        "value": "t_struct(HackathonMetadata)258_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(HackathonMetadata)258_storage": {
        "encoding": "inplace",
        "label": "struct Hacka.HackathonMetadata",
        "members": [
          {
            "astId": 242,
            "contract": "contracts/Hacka.sol:Hacka",
            "label": "organizer",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 244,
            "contract": "contracts/Hacka.sol:Hacka",
            "label": "timestampStart",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 246,
            "contract": "contracts/Hacka.sol:Hacka",
            "label": "timestampEnd",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 248,
            "contract": "contracts/Hacka.sol:Hacka",
            "label": "judgingPeriod",
            "offset": 0,
            "slot": "3",
            "type": "t_uint8"
          },
          {
            "astId": 251,
            "contract": "contracts/Hacka.sol:Hacka",
            "label": "stage",
            "offset": 1,
            "slot": "3",
            "type": "t_enum(HackathonStage)240"
          },
          {
            "astId": 253,
            "contract": "contracts/Hacka.sol:Hacka",
            "label": "name",
            "offset": 0,
            "slot": "4",
            "type": "t_string_storage"
          },
          {
            "astId": 255,
            "contract": "contracts/Hacka.sol:Hacka",
            "label": "url",
            "offset": 0,
            "slot": "5",
            "type": "t_string_storage"
          },
          {
            "astId": 257,
            "contract": "contracts/Hacka.sol:Hacka",
            "label": "balance",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "224"
      },
      "t_struct(HackathonPrize)273_storage": {
        "encoding": "inplace",
        "label": "struct Hacka.HackathonPrize",
        "members": [
          {
            "astId": 260,
            "contract": "contracts/Hacka.sol:Hacka",
            "label": "reward",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 263,
            "contract": "contracts/Hacka.sol:Hacka",
            "label": "judges",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_address)dyn_storage"
          },
          {
            "astId": 265,
            "contract": "contracts/Hacka.sol:Hacka",
            "label": "name",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          },
          {
            "astId": 267,
            "contract": "contracts/Hacka.sol:Hacka",
            "label": "description",
            "offset": 0,
            "slot": "3",
            "type": "t_string_storage"
          },
          {
            "astId": 270,
            "contract": "contracts/Hacka.sol:Hacka",
            "label": "submissions",
            "offset": 0,
            "slot": "4",
            "type": "t_array(t_address)dyn_storage"
          },
          {
            "astId": 272,
            "contract": "contracts/Hacka.sol:Hacka",
            "label": "winner",
            "offset": 0,
            "slot": "5",
            "type": "t_address"
          }
        ],
        "numberOfBytes": "192"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  }
}