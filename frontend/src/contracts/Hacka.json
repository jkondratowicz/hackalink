{
  "address": "0xf8Ce0e33b306B64A3e039DACC28346A88aDC42DB",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "hackathonId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "url",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestampStart",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestampEnd",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "judgingPeriod",
          "type": "uint8"
        }
      ],
      "name": "HackathonChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "hackathonId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "organizer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "url",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestampStart",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestampEnd",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "judgingPeriod",
          "type": "uint8"
        }
      ],
      "name": "HackathonCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "hackathonId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "prizeId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "reward",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "description",
          "type": "string"
        }
      ],
      "name": "HackathonPrizeCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "hackathonId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "prizeId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "judge",
          "type": "address"
        }
      ],
      "name": "HackathonPrizeJudgeAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "hackathonId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "enum Hacka.HackathonStage",
          "name": "previousStage",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "enum Hacka.HackathonStage",
          "name": "newStage",
          "type": "uint8"
        }
      ],
      "name": "HackathonStageChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "submissionId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "hackathonId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "participant",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "prizes",
          "type": "uint256[]"
        }
      ],
      "name": "HackathonSubmissionCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_hackathonId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_prizeId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_judge",
          "type": "address"
        }
      ],
      "name": "addJudge",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_hackathonId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        }
      ],
      "name": "addPrize",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "prizeId",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "checkUpkeep",
      "outputs": [
        {
          "internalType": "bool",
          "name": "upkeepNeeded",
          "type": "bool"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_timestampStart",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_timestampEnd",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_url",
          "type": "string"
        },
        {
          "internalType": "uint8",
          "name": "_judgingPeriod",
          "type": "uint8"
        }
      ],
      "name": "createHackathon",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "hackathonId",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "disableDemoMode",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "enableDemoMode",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_hackathonId",
          "type": "uint256"
        }
      ],
      "name": "getHackathonMetadata",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "organizer",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "timestampStart",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "timestampEnd",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "judgingPeriod",
              "type": "uint8"
            },
            {
              "internalType": "enum Hacka.HackathonStage",
              "name": "stage",
              "type": "uint8"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "url",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "balance",
              "type": "uint256"
            }
          ],
          "internalType": "struct Hacka.HackathonMetadata",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_organizer",
          "type": "address"
        }
      ],
      "name": "getHackathonsByOrganizer",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "performUpkeep",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "s_hackathons",
      "outputs": [
        {
          "internalType": "address",
          "name": "organizer",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "timestampStart",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "timestampEnd",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "judgingPeriod",
          "type": "uint8"
        },
        {
          "internalType": "enum Hacka.HackathonStage",
          "name": "stage",
          "type": "uint8"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "url",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "s_interval",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "s_lastTimeStamp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "s_organizerHackathons",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "s_prizes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "reward",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "winner",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "finalized",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "s_submissions",
      "outputs": [
        {
          "internalType": "address",
          "name": "participant",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "hackathonId",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_hackathonId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "uint256[]",
          "name": "_prizes",
          "type": "uint256[]"
        }
      ],
      "name": "submitProject",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_hackathonId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_timestampStart",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_timestampEnd",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_url",
          "type": "string"
        },
        {
          "internalType": "uint8",
          "name": "_judgingPeriod",
          "type": "uint8"
        }
      ],
      "name": "updateHackathonMetadata",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x3d578cd5b76055ad78d24f342de653160a1ba6016a3e9c2640006056d17c3767",
  "receipt": {
    "to": null,
    "from": "0x6E51d5c51872f97caab78E8e3cA9a23C4945474A",
    "contractAddress": "0xf8Ce0e33b306B64A3e039DACC28346A88aDC42DB",
    "transactionIndex": 3,
    "gasUsed": "3625972",
    "logsBloom": "0x
    "blockHash": "0x4186f75aea806199d916575db35b915a0b0c93775bc18529ef60d50b1b04b969",
    "transactionHash": "0x3d578cd5b76055ad78d24f342de653160a1ba6016a3e9c2640006056d17c3767",
    "logs": [
      {
        "transactionIndex": 3,
        "blockNumber": 28553695,
        "transactionHash": "0x3d578cd5b76055ad78d24f342de653160a1ba6016a3e9c2640006056d17c3767",
        "address": "0xf8Ce0e33b306B64A3e039DACC28346A88aDC42DB",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000006e51d5c51872f97caab78e8e3ca9a23c4945474a"
        ],
        "data": "0x",
        "logIndex": 15,
        "blockHash": "0x4186f75aea806199d916575db35b915a0b0c93775bc18529ef60d50b1b04b969"
      }
    ],
    "blockNumber": 28553695,
    "cumulativeGasUsed": "4242711",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "5606275212e10f08faa7a3ab2ef2f454",
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"hackathonId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"url\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestampStart\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestampEnd\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"judgingPeriod\",\"type\":\"uint8\"}],\"name\":\"HackathonChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"hackathonId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"organizer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"url\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestampStart\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestampEnd\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"judgingPeriod\",\"type\":\"uint8\"}],\"name\":\"HackathonCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"hackathonId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"prizeId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"name\":\"HackathonPrizeCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"hackathonId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"prizeId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"judge\",\"type\":\"address\"}],\"name\":\"HackathonPrizeJudgeAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"hackathonId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"enum Hacka.HackathonStage\",\"name\":\"previousStage\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"enum Hacka.HackathonStage\",\"name\":\"newStage\",\"type\":\"uint8\"}],\"name\":\"HackathonStageChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"submissionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"hackathonId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"participant\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"prizes\",\"type\":\"uint256[]\"}],\"name\":\"HackathonSubmissionCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_hackathonId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_prizeId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_judge\",\"type\":\"address\"}],\"name\":\"addJudge\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_hackathonId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_description\",\"type\":\"string\"}],\"name\":\"addPrize\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"prizeId\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"checkUpkeep\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"upkeepNeeded\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_timestampStart\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_timestampEnd\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_url\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"_judgingPeriod\",\"type\":\"uint8\"}],\"name\":\"createHackathon\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"hackathonId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"disableDemoMode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enableDemoMode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_hackathonId\",\"type\":\"uint256\"}],\"name\":\"getHackathonMetadata\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"organizer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestampStart\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestampEnd\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"judgingPeriod\",\"type\":\"uint8\"},{\"internalType\":\"enum Hacka.HackathonStage\",\"name\":\"stage\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"url\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"internalType\":\"struct Hacka.HackathonMetadata\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_organizer\",\"type\":\"address\"}],\"name\":\"getHackathonsByOrganizer\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"performUpkeep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"s_hackathons\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"organizer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestampStart\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestampEnd\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"judgingPeriod\",\"type\":\"uint8\"},{\"internalType\":\"enum Hacka.HackathonStage\",\"name\":\"stage\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"url\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_interval\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_lastTimeStamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"s_organizerHackathons\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"s_prizes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"finalized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"s_submissions\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"participant\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"hackathonId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_hackathonId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"uint256[]\",\"name\":\"_prizes\",\"type\":\"uint256[]\"}],\"name\":\"submitProject\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_hackathonId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_timestampStart\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_timestampEnd\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_url\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"_judgingPeriod\",\"type\":\"uint8\"}],\"name\":\"updateHackathonMetadata\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Hacka.sol\":\"Hacka\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _setOwner(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _setOwner(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _setOwner(newOwner);\\n    }\\n\\n    function _setOwner(address newOwner) private {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x6bb804a310218875e89d12c053e94a13a4607cdf7cc2052f3e52bd32a0dc50a1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x90565a39ae45c80f0468dc96c7b20d0afc3055f344c8203a0c9258239f350b9f\",\"license\":\"MIT\"},\"contracts/Hacka.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.7;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\ninterface KeeperCompatibleInterface {\\n    function checkUpkeep(bytes calldata checkData) external returns (bool upkeepNeeded, bytes memory performData);\\n\\n    function performUpkeep(bytes calldata performData) external;\\n}\\n\\ncontract Hacka is Ownable, KeeperCompatibleInterface {\\n    bool private s_demoMode = false; // to be deleted\\n    uint private s_counter = 0;\\n\\n    enum HackathonStage {NEW, STARTED, JUDGING, FINALIZED}\\n\\n    struct HackathonMetadata {\\n        address organizer;\\n        uint timestampStart;\\n        uint timestampEnd;\\n        uint8 judgingPeriod;\\n        HackathonStage stage;\\n        string name;\\n        string url;\\n        uint balance;\\n        // TODO cid for description\\n    }\\n\\n    struct HackathonSubmission {\\n        address participant;\\n        string name;\\n        // TODO cid for description\\n        uint hackathonId;\\n        uint[] prizes;\\n    }\\n\\n    struct HackathonPrize {\\n        uint reward;\\n        address[] judges;\\n        string name;\\n        string description;\\n        uint[] submissions;\\n        mapping(uint => uint8) submissionScores;\\n        mapping(address => bool) judgesVoted;\\n        address winner;\\n        bool finalized;\\n    }\\n\\n    mapping(uint => HackathonMetadata) public s_hackathons;\\n    mapping(uint => HackathonPrize[]) public s_prizes;\\n    mapping(uint => HackathonSubmission[]) public s_submissions;\\n    mapping(address => uint[]) public s_organizerHackathons;\\n\\n    event HackathonCreated(uint indexed hackathonId, address indexed organizer, string name, string url, uint timestampStart, uint timestampEnd, uint8 judgingPeriod);\\n    event HackathonChanged(uint indexed hackathonId, string name, string url, uint timestampStart, uint timestampEnd, uint8 judgingPeriod);\\n    event HackathonStageChanged(uint indexed hackathonId, HackathonStage previousStage, HackathonStage newStage);\\n    event HackathonSubmissionCreated(uint indexed submissionId, uint indexed hackathonId, address indexed participant, string name, uint[] prizes);\\n    event HackathonPrizeCreated(uint indexed hackathonId, uint indexed prizeId, uint reward, string name, string description);\\n    event HackathonPrizeJudgeAdded(uint indexed hackathonId, uint indexed prizeId, address judge);\\n\\n    uint public immutable s_interval = 1 hours;\\n    uint public s_lastTimeStamp;\\n\\n    function createHackathon(\\n        uint _timestampStart,\\n        uint _timestampEnd,\\n        string calldata _name,\\n        string calldata _url,\\n        uint8 _judgingPeriod\\n    ) external returns (uint hackathonId) {\\n        if (s_demoMode == false) {\\n            validateMetadata(\\n                _timestampStart,\\n                _timestampEnd,\\n                _name,\\n                _judgingPeriod,\\n                block.timestamp\\n            );\\n        }\\n\\n        hackathonId = s_counter;\\n        s_counter = s_counter + 1;\\n\\n        s_hackathons[hackathonId].organizer = msg.sender;\\n        s_hackathons[hackathonId].timestampStart = _timestampStart;\\n        s_hackathons[hackathonId].timestampEnd = _timestampEnd;\\n        s_hackathons[hackathonId].judgingPeriod = _judgingPeriod;\\n        s_hackathons[hackathonId].stage = HackathonStage.NEW;\\n        s_hackathons[hackathonId].name = _name;\\n        s_hackathons[hackathonId].url = _url;\\n\\n        s_organizerHackathons[msg.sender].push(hackathonId);\\n\\n        emit HackathonCreated(hackathonId, msg.sender, _name, _url, _timestampStart, _timestampEnd, _judgingPeriod);\\n\\n        return hackathonId;\\n    }\\n\\n    function updateHackathonMetadata(\\n        uint _hackathonId,\\n        uint _timestampStart,\\n        uint _timestampEnd,\\n        string calldata _name,\\n        string calldata _url,\\n        uint8 _judgingPeriod\\n    ) external {\\n        require(s_hackathons[_hackathonId].organizer == msg.sender, \\\"Only hackathon's organizer can change its metadata\\\");\\n        require(s_hackathons[_hackathonId].timestampStart - block.timestamp > 1 hours, \\\"Hackathon metadata can be changed up until 1 hour before start\\\");\\n        require(s_hackathons[_hackathonId].stage == HackathonStage.NEW, \\\"Hackathon metadata can't change after it has started\\\");\\n        validateMetadata(\\n            _timestampStart,\\n            _timestampEnd,\\n            _name,\\n            _judgingPeriod,\\n            block.timestamp\\n        );\\n\\n        s_hackathons[_hackathonId].timestampStart = _timestampStart;\\n        s_hackathons[_hackathonId].timestampEnd = _timestampEnd;\\n        s_hackathons[_hackathonId].name = _name;\\n        s_hackathons[_hackathonId].url = _url;\\n        s_hackathons[_hackathonId].judgingPeriod = _judgingPeriod;\\n\\n        emit HackathonChanged(_hackathonId, _name, _url, _timestampStart, _timestampStart, _judgingPeriod);\\n    }\\n\\n    function updateHackathonStage(\\n        uint _hackathonId,\\n        HackathonStage _newStage\\n    ) internal {\\n        emit HackathonStageChanged(_hackathonId, s_hackathons[_hackathonId].stage, _newStage);\\n        s_hackathons[_hackathonId].stage = _newStage;\\n    }\\n\\n    // TODO method to transfer hackathon ownership to another address (change organizer)\\n\\n    function validateMetadata(\\n        uint _timestampStart,\\n        uint _timestampEnd,\\n        string calldata _name,\\n        uint8 _judgingPeriod,\\n        uint _currentTimestamp\\n    ) pure internal {\\n        require(_timestampEnd - _timestampStart > 1 days, \\\"Hackathon must be at least 1 day long\\\");\\n        require(_timestampStart - _currentTimestamp >= 1 days, \\\"Hackathon start date must be at least 1 day in the future\\\");\\n        require(_judgingPeriod >= 1, \\\"Judging period must be at least 1 day\\\");\\n        require(_judgingPeriod <= 31, \\\"Judging period must not be longer than 31 days\\\");\\n        require(bytes(_name).length >= 8, \\\"Hackathon name must be at least 8 characters\\\");\\n        require(bytes(_name).length <= 100, \\\"Hackathon name must be at most 100 characters\\\");\\n    }\\n\\n    // TODO should accept other tokens, or more specifically - \\\"Hackathon Token\\\" ERC20, for now just use ETH\\n    function addPrize(\\n        uint256 _amount,\\n        uint _hackathonId,\\n        string calldata _name,\\n        string calldata _description\\n    ) external payable returns (uint prizeId) {\\n        require(msg.value == _amount);\\n        require(s_hackathons[_hackathonId].stage == HackathonStage.NEW, \\\"Can't add a prize to an ongoing or finished hackathon\\\");\\n        require(s_hackathons[_hackathonId].organizer == msg.sender, \\\"Only hackathon's organizer can add a prize\\\");\\n        require(bytes(_name).length > 8, \\\"Prize name must be at least 8 characters\\\");\\n        require(msg.value >= 0.0001 ether, \\\"Minimum prize reward is 0.0001 ETH\\\");\\n\\n        s_hackathons[_hackathonId].balance += msg.value;\\n\\n        uint prizeIdx = s_prizes[_hackathonId].length;\\n        s_prizes[_hackathonId].push();\\n\\n        HackathonPrize storage prize = s_prizes[_hackathonId][prizeIdx];\\n        prize.reward = msg.value;\\n        prize.name = _name;\\n        prize.description = _description;\\n\\n        emit HackathonPrizeCreated(_hackathonId, prizeIdx, _amount, _name, _description);\\n\\n        return prizeIdx;\\n    }\\n\\n    function addJudge(\\n        uint _hackathonId,\\n        uint _prizeId,\\n        address _judge\\n    ) external {\\n        require(s_hackathons[_hackathonId].organizer == msg.sender, \\\"Only hackathon's organizer can add a judge\\\");\\n        require(s_prizes[_hackathonId][_prizeId].reward > 0, \\\"Prize not found\\\");\\n\\n        s_prizes[_hackathonId][_prizeId].judges.push(_judge);\\n        emit HackathonPrizeJudgeAdded(_hackathonId, _prizeId, _judge);\\n    }\\n\\n    function getHackathonsByOrganizer(\\n        address _organizer\\n    ) external view returns (uint[] memory) {\\n        return s_organizerHackathons[_organizer];\\n    }\\n\\n    function getHackathonMetadata(uint _hackathonId) external view returns (HackathonMetadata memory) {\\n        return s_hackathons[_hackathonId];\\n    }\\n\\n    // TODO delete for actual use! demo mode is to be able to skip date checks to create a demo hackathon\\n    function enableDemoMode() public onlyOwner {\\n        s_demoMode = true;\\n    }\\n\\n    // TODO delete for actual use! demo mode is to be able to skip date checks to create a demo hackathon\\n    function disableDemoMode() public onlyOwner {\\n        s_demoMode = false;\\n    }\\n\\n    function checkUpkeep(bytes calldata /* checkData */) external view override returns (bool upkeepNeeded, bytes memory /* performData */) {\\n        bool intervalPassed = s_demoMode || (block.timestamp - s_lastTimeStamp) > s_interval;\\n        bool hasHackathons = s_counter > 0;\\n\\n        // TODO optimize - return IDs of hackathons that need to have their status changed! this way performUpkeep won't have to iterate all hackathons\\n        bool hasHackathonsPendingChange = false;\\n        for (uint id = 0; id < s_counter; id++) {\\n            if (s_hackathons[id].stage == HackathonStage.FINALIZED) {\\n                continue;\\n            }\\n\\n            if (s_hackathons[id].stage == HackathonStage.NEW && block.timestamp > s_hackathons[id].timestampStart) {\\n                hasHackathonsPendingChange = true;\\n                break;\\n            }\\n\\n            if (s_hackathons[id].stage == HackathonStage.STARTED && block.timestamp > s_hackathons[id].timestampEnd) {\\n                hasHackathonsPendingChange = true;\\n                break;\\n            }\\n\\n            if (s_hackathons[id].stage == HackathonStage.JUDGING && block.timestamp > s_hackathons[id].timestampEnd + (s_hackathons[id].judgingPeriod * 1 days)) {\\n                hasHackathonsPendingChange = true;\\n                break;\\n            }\\n        }\\n\\n        upkeepNeeded = intervalPassed && hasHackathons && hasHackathonsPendingChange;\\n    }\\n\\n    function performUpkeep(bytes calldata /* performData */) external override {\\n        s_lastTimeStamp = block.timestamp;\\n        for (uint id = 0; id < s_counter; id++) {\\n            if (s_hackathons[id].stage == HackathonStage.NEW && block.timestamp > s_hackathons[id].timestampStart) {\\n                updateHackathonStage(id, HackathonStage.STARTED);\\n                continue;\\n            }\\n\\n            if (s_hackathons[id].stage == HackathonStage.STARTED && block.timestamp > s_hackathons[id].timestampEnd) {\\n                updateHackathonStage(id, HackathonStage.JUDGING);\\n                continue;\\n            }\\n\\n            if (s_hackathons[id].stage == HackathonStage.JUDGING && block.timestamp > s_hackathons[id].timestampEnd + (s_hackathons[id].judgingPeriod * 1 days)) {\\n                updateHackathonStage(id, HackathonStage.FINALIZED);\\n                // TODO finalize = payout\\n            }\\n        }\\n    }\\n\\n    function submitProject(\\n        uint _hackathonId,\\n        string calldata _name,\\n        uint[] calldata _prizes // add cid\\n    ) external {\\n        require(s_hackathons[_hackathonId].stage == HackathonStage.STARTED, \\\"Hackathon doesn't accept submissions at this stage\\\");\\n        require(bytes(_name).length >= 4, \\\"Submission name must be at least 4 characters\\\");\\n        require(_prizes.length >= 1, \\\"You must apply for at least one prize\\\");\\n        for (uint prizeIdx = 0; prizeIdx < _prizes.length; prizeIdx++) {\\n            require(_prizes[prizeIdx] < s_prizes[_hackathonId].length, \\\"One of the prizes you applied for does not exist\\\");\\n        }\\n\\n        uint submissionId = s_submissions[_hackathonId].length;\\n        s_submissions[_hackathonId].push();\\n\\n        HackathonSubmission storage submission = s_submissions[_hackathonId][submissionId];\\n        submission.participant = msg.sender;\\n        submission.name = _name;\\n        submission.hackathonId = _hackathonId;\\n        for (uint prizeIdx = 0; prizeIdx < _prizes.length; prizeIdx++) {\\n            submission.prizes.push(_prizes[prizeIdx]);\\n            s_prizes[_hackathonId][_prizes[prizeIdx]].submissions.push(submissionId);\\n        }\\n\\n        emit HackathonSubmissionCreated(submissionId, _hackathonId, msg.sender, _name, _prizes);\\n    }\\n}\\n\",\"keccak256\":\"0xd0b52f207d730b5fe4ec34a45f24acd97b40f3a5381bafe77cc583fe892c04e2\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x60806040526004361061011f5760003560e01c806389e1037c116100a0578063cc9b2ea311610064578063cc9b2ea314610408578063d738c38f14610433578063dad39e7b1461045c578063f2fde38b14610473578063fb39df8e1461049c5761011f565b806389e1037c146103215780638da5cb5b1461034a57806395c9331514610375578063adb622db146103b4578063c0384621146103cb5761011f565b80634651efb5116100e75780634651efb51461020e578063492c7c0d1461024b5780636e04ff0d1461028f578063715018a6146102cd5780637dc0cae4146102e45761011f565b8063042054f41461012457806323bd645414610161578063337057791461018a57806334854043146101ba5780634585e33b146101e5575b600080fd5b34801561013057600080fd5b5061014b6004803603810190610146919061274e565b6104dd565b604051610158919061353c565b60405180910390f35b34801561016d57600080fd5b506101886004803603810190610183919061277b565b6106fb565b005b6101a4600480360381019061019f91906128a3565b610ac2565b6040516101b1919061355e565b60405180910390f35b3480156101c657600080fd5b506101cf610dbc565b6040516101dc919061355e565b60405180910390f35b3480156101f157600080fd5b5061020c60048036038101906102079190612701565b610dc2565b005b34801561021a57600080fd5b506102356004803603810190610230919061294a565b610fb2565b604051610242919061355e565b60405180910390f35b34801561025757600080fd5b50610272600480360381019061026d919061274e565b611208565b6040516102869897969594939291906130f5565b60405180910390f35b34801561029b57600080fd5b506102b660048036038101906102b19190612701565b61139a565b6040516102c49291906131a3565b60405180910390f35b3480156102d957600080fd5b506102e2611639565b005b3480156102f057600080fd5b5061030b600480360381019061030691906126c1565b6116c1565b604051610318919061355e565b60405180910390f35b34801561032d57600080fd5b5061034860048036038101906103439190612850565b6116f2565b005b34801561035657600080fd5b5061035f6118e4565b60405161036c919061309c565b60405180910390f35b34801561038157600080fd5b5061039c60048036038101906103979190612810565b61190d565b6040516103ab939291906130b7565b60405180910390f35b3480156103c057600080fd5b506103c96119fc565b005b3480156103d757600080fd5b506103f260048036038101906103ed9190612694565b611a95565b6040516103ff9190613181565b60405180910390f35b34801561041457600080fd5b5061041d611b2c565b60405161042a919061355e565b60405180910390f35b34801561043f57600080fd5b5061045a60048036038101906104559190612a06565b611b50565b005b34801561046857600080fd5b50610471611df0565b005b34801561047f57600080fd5b5061049a60048036038101906104959190612694565b611e88565b005b3480156104a857600080fd5b506104c360048036038101906104be9190612810565b611f80565b6040516104d49594939291906135c2565b60405180910390f35b6104e5612440565b60026000838152602001908152602001600020604051806101000160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201548152602001600282015481526020016003820160009054906101000a900460ff1660ff1660ff1681526020016003820160019054906101000a900460ff1660038111156105b0576105af6138e1565b5b60038111156105c2576105c16138e1565b5b81526020016004820180546105d690613837565b80601f016020809104026020016040519081016040528092919081815260200182805461060290613837565b801561064f5780601f106106245761010080835404028352916020019161064f565b820191906000526020600020905b81548152906001019060200180831161063257829003601f168201915b5050505050815260200160058201805461066890613837565b80601f016020809104026020016040519081016040528092919081815260200182805461069490613837565b80156106e15780601f106106b6576101008083540402835291602001916106e1565b820191906000526020600020905b8154815290600101906020018083116106c457829003601f168201915b505050505081526020016006820154815250509050919050565b6001600381111561070f5761070e6138e1565b5b6002600087815260200190815260200160002060030160019054906101000a900460ff166003811115610745576107446138e1565b5b14610785576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161077c9061343c565b60405180910390fd5b60048484905010156107cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107c39061337c565b60405180910390fd5b6001828290501015610813576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161080a906132bc565b60405180910390fd5b60005b828290508110156108a557600360008781526020019081526020016000208054905083838381811061084b5761084a61393f565b5b9050602002013510610892576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108899061333c565b60405180910390fd5b808061089d90613869565b915050610816565b50600060046000878152602001908152602001600020805490509050600460008781526020019081526020016000206001816001815401808255809150500390600052602060002090505060006004600088815260200190815260200160002082815481106109175761091661393f565b5b90600052602060002090600402019050338160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550858582600101919061097d9291906124b0565b5086816002018190555060005b84849050811015610a6257816003018585838181106109ac576109ab61393f565b5b905060200201359080600181540180825580915050600190039060005260206000200160009091909190915055600360008981526020019081526020016000208585838181106109ff576109fe61393f565b5b9050602002013581548110610a1757610a1661393f565b5b90600052602060002090600802016004018390806001815401808255809150506001900390600052602060002001600090919091909150558080610a5a90613869565b91505061098a565b503373ffffffffffffffffffffffffffffffffffffffff1687837f86549ec55a3ee5caa8221662b6cc15e16a7f5924b42313e6c9b8c4debc69edbb89898989604051610ab194939291906131fc565b60405180910390a450505050505050565b6000863414610ad057600080fd5b60006003811115610ae457610ae36138e1565b5b6002600088815260200190815260200160002060030160019054906101000a900460ff166003811115610b1a57610b196138e1565b5b14610b5a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b51906134bc565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166002600088815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610bfe576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bf5906132fc565b60405180910390fd5b60088585905011610c44576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c3b9061351c565b60405180910390fd5b655af3107a4000341015610c8d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c84906133bc565b60405180910390fd5b34600260008881526020019081526020016000206006016000828254610cb391906136a5565b9250508190555060006003600088815260200190815260200160002080549050905060036000888152602001908152602001600020600181600181540180825580915050039060005260206000209050506000600360008981526020019081526020016000208281548110610d2b57610d2a61393f565b5b906000526020600020906008020190503481600001819055508686826002019190610d579291906124b0565b508484826003019190610d6b9291906124b0565b5081887ff3590b1eedb9734b62503d4e241e43be9bf993459c4bc40f22bd1c54df07ee068b8a8a8a8a604051610da5959493929190613579565b60405180910390a381925050509695505050505050565b60065481565b4260068190555060005b600154811015610fad5760006003811115610dea57610de96138e1565b5b6002600083815260200190815260200160002060030160019054906101000a900460ff166003811115610e2057610e1f6138e1565b5b148015610e425750600260008281526020019081526020016000206001015442115b15610e5757610e52816001612110565b610f9a565b60016003811115610e6b57610e6a6138e1565b5b6002600083815260200190815260200160002060030160019054906101000a900460ff166003811115610ea157610ea06138e1565b5b148015610ec35750600260008281526020019081526020016000206002015442115b15610ed857610ed3816002612110565b610f9a565b60026003811115610eec57610eeb6138e1565b5b6002600083815260200190815260200160002060030160019054906101000a900460ff166003811115610f2257610f216138e1565b5b148015610f885750620151806002600083815260200190815260200160002060030160009054906101000a900460ff1660ff16610f5f91906136fb565b62ffffff166002600083815260200190815260200160002060020154610f8591906136a5565b42115b15610f9957610f98816003612110565b5b5b8080610fa590613869565b915050610dcc565b505050565b6000801515600060149054906101000a900460ff1615151415610fde57610fdd8888888886426121af565b5b600154905060018054610ff191906136a5565b600181905550336002600083815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550876002600083815260200190815260200160002060010181905550866002600083815260200190815260200160002060020181905550816002600083815260200190815260200160002060030160006101000a81548160ff021916908360ff16021790555060006002600083815260200190815260200160002060030160016101000a81548160ff021916908360038111156110eb576110ea6138e1565b5b021790555085856002600084815260200190815260200160002060040191906111159291906124b0565b50838360026000848152602001908152602001600020600501919061113b9291906124b0565b50600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150506001900390600052602060002001600090919091909150553373ffffffffffffffffffffffffffffffffffffffff16817ff7c823cc2845ab92ea0ff85b83d01c97d1d94c431bd5608443620134b45f6ddb888888888e8e8a6040516111f59796959493929190613237565b60405180910390a3979650505050505050565b60026020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020154908060030160009054906101000a900460ff16908060030160019054906101000a900460ff169080600401805461128390613837565b80601f01602080910402602001604051908101604052809291908181526020018280546112af90613837565b80156112fc5780601f106112d1576101008083540402835291602001916112fc565b820191906000526020600020905b8154815290600101906020018083116112df57829003601f168201915b50505050509080600501805461131190613837565b80601f016020809104026020016040519081016040528092919081815260200182805461133d90613837565b801561138a5780601f1061135f5761010080835404028352916020019161138a565b820191906000526020600020905b81548152906001019060200180831161136d57829003601f168201915b5050505050908060060154905088565b6000606060008060149054906101000a900460ff16806113e657507f0000000000000000000000000000000000000000000000000000000000000000600654426113e49190613738565b115b90506000806001541190506000805b60015481101561161957600380811115611412576114116138e1565b5b6002600083815260200190815260200160002060030160019054906101000a900460ff166003811115611448576114476138e1565b5b141561145357611606565b60006003811115611467576114666138e1565b5b6002600083815260200190815260200160002060030160019054906101000a900460ff16600381111561149d5761149c6138e1565b5b1480156114bf5750600260008281526020019081526020016000206001015442115b156114cd5760019150611619565b600160038111156114e1576114e06138e1565b5b6002600083815260200190815260200160002060030160019054906101000a900460ff166003811115611517576115166138e1565b5b1480156115395750600260008281526020019081526020016000206002015442115b156115475760019150611619565b6002600381111561155b5761155a6138e1565b5b6002600083815260200190815260200160002060030160019054906101000a900460ff166003811115611591576115906138e1565b5b1480156115f75750620151806002600083815260200190815260200160002060030160009054906101000a900460ff1660ff166115ce91906136fb565b62ffffff1660026000838152602001908152602001600020600201546115f491906136a5565b42115b156116055760019150611619565b5b808061161190613869565b9150506113f5565b508280156116245750815b801561162d5750805b94505050509250929050565b611641612374565b73ffffffffffffffffffffffffffffffffffffffff1661165f6118e4565b73ffffffffffffffffffffffffffffffffffffffff16146116b5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116ac9061341c565b60405180910390fd5b6116bf600061237c565b565b600560205281600052604060002081815481106116dd57600080fd5b90600052602060002001600091509150505481565b3373ffffffffffffffffffffffffffffffffffffffff166002600085815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611796576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161178d9061331c565b60405180910390fd5b60006003600085815260200190815260200160002083815481106117bd576117bc61393f565b5b9060005260206000209060080201600001541161180f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118069061339c565b60405180910390fd5b6003600084815260200190815260200160002082815481106118345761183361393f565b5b9060005260206000209060080201600101819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081837f3efe798b21f0ba8d336dc0c9c4aac4d267f311b19e336e8ee8a7ee49629d51a7836040516118d7919061309c565b60405180910390a3505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6004602052816000526040600020818154811061192957600080fd5b9060005260206000209060040201600091509150508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169080600101805461197390613837565b80601f016020809104026020016040519081016040528092919081815260200182805461199f90613837565b80156119ec5780601f106119c1576101008083540402835291602001916119ec565b820191906000526020600020905b8154815290600101906020018083116119cf57829003601f168201915b5050505050908060020154905083565b611a04612374565b73ffffffffffffffffffffffffffffffffffffffff16611a226118e4565b73ffffffffffffffffffffffffffffffffffffffff1614611a78576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a6f9061341c565b60405180910390fd5b6001600060146101000a81548160ff021916908315150217905550565b6060600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020018280548015611b2057602002820191906000526020600020905b815481526020019060010190808311611b0c575b50505050509050919050565b7f000000000000000000000000000000000000000000000000000000000000000081565b3373ffffffffffffffffffffffffffffffffffffffff16600260008a815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611bf4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611beb906133fc565b60405180910390fd5b610e1042600260008b815260200190815260200160002060010154611c199190613738565b11611c59576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c509061347c565b60405180910390fd5b60006003811115611c6d57611c6c6138e1565b5b600260008a815260200190815260200160002060030160019054906101000a900460ff166003811115611ca357611ca26138e1565b5b14611ce3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611cda9061335c565b60405180910390fd5b611cf18787878785426121af565b86600260008a81526020019081526020016000206001018190555085600260008a8152602001908152602001600020600201819055508484600260008b81526020019081526020016000206004019190611d4c9291906124b0565b508282600260008b81526020019081526020016000206005019190611d729291906124b0565b5080600260008a815260200190815260200160002060030160006101000a81548160ff021916908360ff160217905550877f2406bb451705c8be83194cf2d0a2dd0e3647d9ea2308183dbbd3b66ffe271e6b868686868c8d88604051611dde9796959493929190613237565b60405180910390a25050505050505050565b611df8612374565b73ffffffffffffffffffffffffffffffffffffffff16611e166118e4565b73ffffffffffffffffffffffffffffffffffffffff1614611e6c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e639061341c565b60405180910390fd5b60008060146101000a81548160ff021916908315150217905550565b611e90612374565b73ffffffffffffffffffffffffffffffffffffffff16611eae6118e4565b73ffffffffffffffffffffffffffffffffffffffff1614611f04576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611efb9061341c565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611f74576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611f6b906132dc565b60405180910390fd5b611f7d8161237c565b50565b60036020528160005260406000208181548110611f9c57600080fd5b906000526020600020906008020160009150915050806000015490806002018054611fc690613837565b80601f0160208091040260200160405190810160405280929190818152602001828054611ff290613837565b801561203f5780601f106120145761010080835404028352916020019161203f565b820191906000526020600020905b81548152906001019060200180831161202257829003601f168201915b50505050509080600301805461205490613837565b80601f016020809104026020016040519081016040528092919081815260200182805461208090613837565b80156120cd5780601f106120a2576101008083540402835291602001916120cd565b820191906000526020600020905b8154815290600101906020018083116120b057829003601f168201915b5050505050908060070160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060070160149054906101000a900460ff16905085565b817f0e84e0666f369b5893de172e41bbc8d6e160ab211eb9765214e1939732144f066002600085815260200190815260200160002060030160019054906101000a900460ff16836040516121659291906131d3565b60405180910390a2806002600084815260200190815260200160002060030160016101000a81548160ff021916908360038111156121a6576121a56138e1565b5b02179055505050565b6201518086866121bf9190613738565b116121ff576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016121f69061345c565b60405180910390fd5b62015180818761220f9190613738565b1015612250576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612247906134dc565b60405180910390fd5b60018260ff161015612297576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161228e9061349c565b60405180910390fd5b601f8260ff1611156122de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016122d59061329c565b60405180910390fd5b6008848490501015612325576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161231c906134fc565b60405180910390fd5b606484849050111561236c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612363906133dc565b60405180910390fd5b505050505050565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b604051806101000160405280600073ffffffffffffffffffffffffffffffffffffffff1681526020016000815260200160008152602001600060ff16815260200160006003811115612495576124946138e1565b5b81526020016060815260200160608152602001600081525090565b8280546124bc90613837565b90600052602060002090601f0160209004810192826124de5760008555612525565b82601f106124f757803560ff1916838001178555612525565b82800160010185558215612525579182015b82811115612524578235825591602001919060010190612509565b5b5090506125329190612536565b5090565b5b8082111561254f576000816000905550600101612537565b5090565b60008135905061256281613fe0565b92915050565b60008083601f84011261257e5761257d613973565b5b8235905067ffffffffffffffff81111561259b5761259a61396e565b5b6020830191508360208202830111156125b7576125b6613978565b5b9250929050565b60008083601f8401126125d4576125d3613973565b5b8235905067ffffffffffffffff8111156125f1576125f061396e565b5b60208301915083600182028301111561260d5761260c613978565b5b9250929050565b60008083601f84011261262a57612629613973565b5b8235905067ffffffffffffffff8111156126475761264661396e565b5b60208301915083600182028301111561266357612662613978565b5b9250929050565b60008135905061267981613ff7565b92915050565b60008135905061268e8161400e565b92915050565b6000602082840312156126aa576126a9613987565b5b60006126b884828501612553565b91505092915050565b600080604083850312156126d8576126d7613987565b5b60006126e685828601612553565b92505060206126f78582860161266a565b9150509250929050565b6000806020838503121561271857612717613987565b5b600083013567ffffffffffffffff8111156127365761273561397d565b5b612742858286016125be565b92509250509250929050565b60006020828403121561276457612763613987565b5b60006127728482850161266a565b91505092915050565b60008060008060006060868803121561279757612796613987565b5b60006127a58882890161266a565b955050602086013567ffffffffffffffff8111156127c6576127c561397d565b5b6127d288828901612614565b9450945050604086013567ffffffffffffffff8111156127f5576127f461397d565b5b61280188828901612568565b92509250509295509295909350565b6000806040838503121561282757612826613987565b5b60006128358582860161266a565b92505060206128468582860161266a565b9150509250929050565b60008060006060848603121561286957612868613987565b5b60006128778682870161266a565b93505060206128888682870161266a565b925050604061289986828701612553565b9150509250925092565b600080600080600080608087890312156128c0576128bf613987565b5b60006128ce89828a0161266a565b96505060206128df89828a0161266a565b955050604087013567ffffffffffffffff811115612900576128ff61397d565b5b61290c89828a01612614565b9450945050606087013567ffffffffffffffff81111561292f5761292e61397d565b5b61293b89828a01612614565b92509250509295509295509295565b600080600080600080600060a0888a03121561296957612968613987565b5b60006129778a828b0161266a565b97505060206129888a828b0161266a565b965050604088013567ffffffffffffffff8111156129a9576129a861397d565b5b6129b58a828b01612614565b9550955050606088013567ffffffffffffffff8111156129d8576129d761397d565b5b6129e48a828b01612614565b935093505060806129f78a828b0161267f565b91505092959891949750929550565b60008060008060008060008060c0898b031215612a2657612a25613987565b5b6000612a348b828c0161266a565b9850506020612a458b828c0161266a565b9750506040612a568b828c0161266a565b965050606089013567ffffffffffffffff811115612a7757612a7661397d565b5b612a838b828c01612614565b9550955050608089013567ffffffffffffffff811115612aa657612aa561397d565b5b612ab28b828c01612614565b935093505060a0612ac58b828c0161267f565b9150509295985092959890939650565b6000612ae18383613060565b60208301905092915050565b612af68161376c565b82525050565b612b058161376c565b82525050565b6000612b178385613661565b93507f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff831115612b4a57612b49613982565b5b602083029250612b5b8385846137f5565b82840190509392505050565b6000612b7282613633565b612b7c8185613661565b9350612b8783613623565b8060005b83811015612bb8578151612b9f8882612ad5565b9750612baa83613654565b925050600181019050612b8b565b5085935050505092915050565b612bce8161377e565b82525050565b6000612bdf8261363e565b612be98185613672565b9350612bf9818560208601613804565b612c028161398c565b840191505092915050565b612c16816137e3565b82525050565b612c25816137e3565b82525050565b6000612c378385613694565b9350612c448385846137f5565b612c4d8361398c565b840190509392505050565b6000612c6382613649565b612c6d8185613683565b9350612c7d818560208601613804565b612c868161398c565b840191505092915050565b6000612c9c82613649565b612ca68185613694565b9350612cb6818560208601613804565b612cbf8161398c565b840191505092915050565b6000612cd7602e83613694565b9150612ce28261399d565b604082019050919050565b6000612cfa602583613694565b9150612d05826139ec565b604082019050919050565b6000612d1d602683613694565b9150612d2882613a3b565b604082019050919050565b6000612d40602a83613694565b9150612d4b82613a8a565b604082019050919050565b6000612d63602a83613694565b9150612d6e82613ad9565b604082019050919050565b6000612d86603083613694565b9150612d9182613b28565b604082019050919050565b6000612da9603483613694565b9150612db482613b77565b604082019050919050565b6000612dcc602d83613694565b9150612dd782613bc6565b604082019050919050565b6000612def600f83613694565b9150612dfa82613c15565b602082019050919050565b6000612e12602283613694565b9150612e1d82613c3e565b604082019050919050565b6000612e35602d83613694565b9150612e4082613c8d565b604082019050919050565b6000612e58603283613694565b9150612e6382613cdc565b604082019050919050565b6000612e7b602083613694565b9150612e8682613d2b565b602082019050919050565b6000612e9e603283613694565b9150612ea982613d54565b604082019050919050565b6000612ec1602583613694565b9150612ecc82613da3565b604082019050919050565b6000612ee4603e83613694565b9150612eef82613df2565b604082019050919050565b6000612f07602583613694565b9150612f1282613e41565b604082019050919050565b6000612f2a603583613694565b9150612f3582613e90565b604082019050919050565b6000612f4d603983613694565b9150612f5882613edf565b604082019050919050565b6000612f70602c83613694565b9150612f7b82613f2e565b604082019050919050565b6000612f93602883613694565b9150612f9e82613f7d565b604082019050919050565b600061010083016000830151612fc26000860182612aed565b506020830151612fd56020860182613060565b506040830151612fe86040860182613060565b506060830151612ffb606086018261307e565b50608083015161300e6080860182612c0d565b5060a083015184820360a08601526130268282612c58565b91505060c083015184820360c08601526130408282612c58565b91505060e083015161305560e0860182613060565b508091505092915050565b613069816137cc565b82525050565b613078816137cc565b82525050565b613087816137d6565b82525050565b613096816137d6565b82525050565b60006020820190506130b16000830184612afc565b92915050565b60006060820190506130cc6000830186612afc565b81810360208301526130de8185612c91565b90506130ed604083018461306f565b949350505050565b60006101008201905061310b600083018b612afc565b613118602083018a61306f565b613125604083018961306f565b613132606083018861308d565b61313f6080830187612c1c565b81810360a08301526131518186612c91565b905081810360c08301526131658185612c91565b905061317460e083018461306f565b9998505050505050505050565b6000602082019050818103600083015261319b8184612b67565b905092915050565b60006040820190506131b86000830185612bc5565b81810360208301526131ca8184612bd4565b90509392505050565b60006040820190506131e86000830185612c1c565b6131f56020830184612c1c565b9392505050565b60006040820190508181036000830152613217818688612c2b565b9050818103602083015261322c818486612b0b565b905095945050505050565b600060a082019050818103600083015261325281898b612c2b565b90508181036020830152613267818789612c2b565b9050613276604083018661306f565b613283606083018561306f565b613290608083018461308d565b98975050505050505050565b600060208201905081810360008301526132b581612cca565b9050919050565b600060208201905081810360008301526132d581612ced565b9050919050565b600060208201905081810360008301526132f581612d10565b9050919050565b6000602082019050818103600083015261331581612d33565b9050919050565b6000602082019050818103600083015261333581612d56565b9050919050565b6000602082019050818103600083015261335581612d79565b9050919050565b6000602082019050818103600083015261337581612d9c565b9050919050565b6000602082019050818103600083015261339581612dbf565b9050919050565b600060208201905081810360008301526133b581612de2565b9050919050565b600060208201905081810360008301526133d581612e05565b9050919050565b600060208201905081810360008301526133f581612e28565b9050919050565b6000602082019050818103600083015261341581612e4b565b9050919050565b6000602082019050818103600083015261343581612e6e565b9050919050565b6000602082019050818103600083015261345581612e91565b9050919050565b6000602082019050818103600083015261347581612eb4565b9050919050565b6000602082019050818103600083015261349581612ed7565b9050919050565b600060208201905081810360008301526134b581612efa565b9050919050565b600060208201905081810360008301526134d581612f1d565b9050919050565b600060208201905081810360008301526134f581612f40565b9050919050565b6000602082019050818103600083015261351581612f63565b9050919050565b6000602082019050818103600083015261353581612f86565b9050919050565b600060208201905081810360008301526135568184612fa9565b905092915050565b6000602082019050613573600083018461306f565b92915050565b600060608201905061358e600083018861306f565b81810360208301526135a1818688612c2b565b905081810360408301526135b6818486612c2b565b90509695505050505050565b600060a0820190506135d7600083018861306f565b81810360208301526135e98187612c91565b905081810360408301526135fd8186612c91565b905061360c6060830185612afc565b6136196080830184612bc5565b9695505050505050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b60006136b0826137cc565b91506136bb836137cc565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156136f0576136ef6138b2565b5b828201905092915050565b6000613706826137bd565b9150613711836137bd565b92508162ffffff048311821515161561372d5761372c6138b2565b5b828202905092915050565b6000613743826137cc565b915061374e836137cc565b925082821015613761576137606138b2565b5b828203905092915050565b60006137778261379d565b9050919050565b60008115159050919050565b600081905061379882613fcc565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062ffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60006137ee8261378a565b9050919050565b82818337600083830152505050565b60005b83811015613822578082015181840152602081019050613807565b83811115613831576000848401525b50505050565b6000600282049050600182168061384f57607f821691505b6020821081141561386357613862613910565b5b50919050565b6000613874826137cc565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156138a7576138a66138b2565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4a756467696e6720706572696f64206d757374206e6f74206265206c6f6e676560008201527f72207468616e2033312064617973000000000000000000000000000000000000602082015250565b7f596f75206d757374206170706c7920666f72206174206c65617374206f6e652060008201527f7072697a65000000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4f6e6c79206861636b6174686f6e2773206f7267616e697a65722063616e206160008201527f64642061207072697a6500000000000000000000000000000000000000000000602082015250565b7f4f6e6c79206861636b6174686f6e2773206f7267616e697a65722063616e206160008201527f64642061206a7564676500000000000000000000000000000000000000000000602082015250565b7f4f6e65206f6620746865207072697a657320796f75206170706c69656420666f60008201527f7220646f6573206e6f7420657869737400000000000000000000000000000000602082015250565b7f4861636b6174686f6e206d657461646174612063616e2774206368616e67652060008201527f6166746572206974206861732073746172746564000000000000000000000000602082015250565b7f5375626d697373696f6e206e616d65206d757374206265206174206c6561737460008201527f2034206368617261637465727300000000000000000000000000000000000000602082015250565b7f5072697a65206e6f7420666f756e640000000000000000000000000000000000600082015250565b7f4d696e696d756d207072697a652072657761726420697320302e30303031204560008201527f5448000000000000000000000000000000000000000000000000000000000000602082015250565b7f4861636b6174686f6e206e616d65206d757374206265206174206d6f7374203160008201527f3030206368617261637465727300000000000000000000000000000000000000602082015250565b7f4f6e6c79206861636b6174686f6e2773206f7267616e697a65722063616e206360008201527f68616e676520697473206d657461646174610000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f4861636b6174686f6e20646f65736e277420616363657074207375626d69737360008201527f696f6e7320617420746869732073746167650000000000000000000000000000602082015250565b7f4861636b6174686f6e206d757374206265206174206c6561737420312064617960008201527f206c6f6e67000000000000000000000000000000000000000000000000000000602082015250565b7f4861636b6174686f6e206d657461646174612063616e206265206368616e676560008201527f6420757020756e74696c203120686f7572206265666f72652073746172740000602082015250565b7f4a756467696e6720706572696f64206d757374206265206174206c656173742060008201527f3120646179000000000000000000000000000000000000000000000000000000602082015250565b7f43616e2774206164642061207072697a6520746f20616e206f6e676f696e672060008201527f6f722066696e6973686564206861636b6174686f6e0000000000000000000000602082015250565b7f4861636b6174686f6e2073746172742064617465206d7573742062652061742060008201527f6c6561737420312064617920696e207468652066757475726500000000000000602082015250565b7f4861636b6174686f6e206e616d65206d757374206265206174206c656173742060008201527f3820636861726163746572730000000000000000000000000000000000000000602082015250565b7f5072697a65206e616d65206d757374206265206174206c65617374203820636860008201527f6172616374657273000000000000000000000000000000000000000000000000602082015250565b60048110613fdd57613fdc6138e1565b5b50565b613fe98161376c565b8114613ff457600080fd5b50565b614000816137cc565b811461400b57600080fd5b50565b614017816137d6565b811461402257600080fd5b5056fea2646970667358221220c8746e107297b27294d31fbe124affdb0eabeb56e0bb1cd4aa50e84638805adb64736f6c63430008070033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7,
        "contract": "contracts/Hacka.sol:Hacka",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 150,
        "contract": "contracts/Hacka.sol:Hacka",
        "label": "s_demoMode",
        "offset": 20,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 153,
        "contract": "contracts/Hacka.sol:Hacka",
        "label": "s_counter",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 216,
        "contract": "contracts/Hacka.sol:Hacka",
        "label": "s_hackathons",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_uint256,t_struct(HackathonMetadata)176_storage)"
      },
      {
        "astId": 222,
        "contract": "contracts/Hacka.sol:Hacka",
        "label": "s_prizes",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_uint256,t_array(t_struct(HackathonPrize)211_storage)dyn_storage)"
      },
      {
        "astId": 228,
        "contract": "contracts/Hacka.sol:Hacka",
        "label": "s_submissions",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_uint256,t_array(t_struct(HackathonSubmission)186_storage)dyn_storage)"
      },
      {
        "astId": 233,
        "contract": "contracts/Hacka.sol:Hacka",
        "label": "s_organizerHackathons",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)"
      },
      {
        "astId": 311,
        "contract": "contracts/Hacka.sol:Hacka",
        "label": "s_lastTimeStamp",
        "offset": 0,
        "slot": "6",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_array(t_struct(HackathonPrize)211_storage)dyn_storage": {
        "base": "t_struct(HackathonPrize)211_storage",
        "encoding": "dynamic_array",
        "label": "struct Hacka.HackathonPrize[]",
        "numberOfBytes": "32"
      },
      "t_array(t_struct(HackathonSubmission)186_storage)dyn_storage": {
        "base": "t_struct(HackathonSubmission)186_storage",
        "encoding": "dynamic_array",
        "label": "struct Hacka.HackathonSubmission[]",
        "numberOfBytes": "32"
      },
      "t_array(t_uint256)dyn_storage": {
        "base": "t_uint256",
        "encoding": "dynamic_array",
        "label": "uint256[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_enum(HackathonStage)158": {
        "encoding": "inplace",
        "label": "enum Hacka.HackathonStage",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256[])",
        "numberOfBytes": "32",
        "value": "t_array(t_uint256)dyn_storage"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_uint256,t_array(t_struct(HackathonPrize)211_storage)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct Hacka.HackathonPrize[])",
        "numberOfBytes": "32",
        "value": "t_array(t_struct(HackathonPrize)211_storage)dyn_storage"
      },
      "t_mapping(t_uint256,t_array(t_struct(HackathonSubmission)186_storage)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct Hacka.HackathonSubmission[])",
        "numberOfBytes": "32",
        "value": "t_array(t_struct(HackathonSubmission)186_storage)dyn_storage"
      },
      "t_mapping(t_uint256,t_struct(HackathonMetadata)176_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct Hacka.HackathonMetadata)",
        "numberOfBytes": "32",
        "value": "t_struct(HackathonMetadata)176_storage"
      },
      "t_mapping(t_uint256,t_uint8)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => uint8)",
        "numberOfBytes": "32",
        "value": "t_uint8"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(HackathonMetadata)176_storage": {
        "encoding": "inplace",
        "label": "struct Hacka.HackathonMetadata",
        "members": [
          {
            "astId": 160,
            "contract": "contracts/Hacka.sol:Hacka",
            "label": "organizer",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 162,
            "contract": "contracts/Hacka.sol:Hacka",
            "label": "timestampStart",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 164,
            "contract": "contracts/Hacka.sol:Hacka",
            "label": "timestampEnd",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 166,
            "contract": "contracts/Hacka.sol:Hacka",
            "label": "judgingPeriod",
            "offset": 0,
            "slot": "3",
            "type": "t_uint8"
          },
          {
            "astId": 169,
            "contract": "contracts/Hacka.sol:Hacka",
            "label": "stage",
            "offset": 1,
            "slot": "3",
            "type": "t_enum(HackathonStage)158"
          },
          {
            "astId": 171,
            "contract": "contracts/Hacka.sol:Hacka",
            "label": "name",
            "offset": 0,
            "slot": "4",
            "type": "t_string_storage"
          },
          {
            "astId": 173,
            "contract": "contracts/Hacka.sol:Hacka",
            "label": "url",
            "offset": 0,
            "slot": "5",
            "type": "t_string_storage"
          },
          {
            "astId": 175,
            "contract": "contracts/Hacka.sol:Hacka",
            "label": "balance",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "224"
      },
      "t_struct(HackathonPrize)211_storage": {
        "encoding": "inplace",
        "label": "struct Hacka.HackathonPrize",
        "members": [
          {
            "astId": 188,
            "contract": "contracts/Hacka.sol:Hacka",
            "label": "reward",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 191,
            "contract": "contracts/Hacka.sol:Hacka",
            "label": "judges",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_address)dyn_storage"
          },
          {
            "astId": 193,
            "contract": "contracts/Hacka.sol:Hacka",
            "label": "name",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          },
          {
            "astId": 195,
            "contract": "contracts/Hacka.sol:Hacka",
            "label": "description",
            "offset": 0,
            "slot": "3",
            "type": "t_string_storage"
          },
          {
            "astId": 198,
            "contract": "contracts/Hacka.sol:Hacka",
            "label": "submissions",
            "offset": 0,
            "slot": "4",
            "type": "t_array(t_uint256)dyn_storage"
          },
          {
            "astId": 202,
            "contract": "contracts/Hacka.sol:Hacka",
            "label": "submissionScores",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_uint256,t_uint8)"
          },
          {
            "astId": 206,
            "contract": "contracts/Hacka.sol:Hacka",
            "label": "judgesVoted",
            "offset": 0,
            "slot": "6",
            "type": "t_mapping(t_address,t_bool)"
          },
          {
            "astId": 208,
            "contract": "contracts/Hacka.sol:Hacka",
            "label": "winner",
            "offset": 0,
            "slot": "7",
            "type": "t_address"
          },
          {
            "astId": 210,
            "contract": "contracts/Hacka.sol:Hacka",
            "label": "finalized",
            "offset": 20,
            "slot": "7",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "256"
      },
      "t_struct(HackathonSubmission)186_storage": {
        "encoding": "inplace",
        "label": "struct Hacka.HackathonSubmission",
        "members": [
          {
            "astId": 178,
            "contract": "contracts/Hacka.sol:Hacka",
            "label": "participant",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 180,
            "contract": "contracts/Hacka.sol:Hacka",
            "label": "name",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 182,
            "contract": "contracts/Hacka.sol:Hacka",
            "label": "hackathonId",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 185,
            "contract": "contracts/Hacka.sol:Hacka",
            "label": "prizes",
            "offset": 0,
            "slot": "3",
            "type": "t_array(t_uint256)dyn_storage"
          }
        ],
        "numberOfBytes": "128"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  }
}