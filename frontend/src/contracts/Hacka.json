{
  "address": "0xAEe9E86efB3e3B1Db636A488817f4d85f69d41B8",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "hackathonId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "url",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestampStart",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestampEnd",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "judgingPeriod",
          "type": "uint8"
        }
      ],
      "name": "HackathonChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "hackathonId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "organizer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "url",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestampStart",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestampEnd",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "judgingPeriod",
          "type": "uint8"
        }
      ],
      "name": "HackathonCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "hackathonId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "enum Hacka.HackathonStage",
          "name": "previousStage",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "enum Hacka.HackathonStage",
          "name": "newStage",
          "type": "uint8"
        }
      ],
      "name": "HackathonStageChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "submissionId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "hackathonId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "participant",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "prizes",
          "type": "uint256[]"
        }
      ],
      "name": "HackathonSubmissionCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_hackathonId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_prizeId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_judge",
          "type": "address"
        }
      ],
      "name": "addJudge",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_hackathonId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        }
      ],
      "name": "addPrize",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "prizeId",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "checkUpkeep",
      "outputs": [
        {
          "internalType": "bool",
          "name": "upkeepNeeded",
          "type": "bool"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_timestampStart",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_timestampEnd",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_url",
          "type": "string"
        },
        {
          "internalType": "uint8",
          "name": "_judgingPeriod",
          "type": "uint8"
        }
      ],
      "name": "createHackathon",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "hackathonId",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "disableDemoMode",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "enableDemoMode",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_hackathonId",
          "type": "uint256"
        }
      ],
      "name": "getHackathonMetadata",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "organizer",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "timestampStart",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "timestampEnd",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "judgingPeriod",
              "type": "uint8"
            },
            {
              "internalType": "enum Hacka.HackathonStage",
              "name": "stage",
              "type": "uint8"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "url",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "balance",
              "type": "uint256"
            }
          ],
          "internalType": "struct Hacka.HackathonMetadata",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_hackathonId",
          "type": "uint256"
        }
      ],
      "name": "getHackathonPrizes",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "reward",
              "type": "uint256"
            },
            {
              "internalType": "address[]",
              "name": "judges",
              "type": "address[]"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "address[]",
              "name": "submissions",
              "type": "address[]"
            },
            {
              "internalType": "address",
              "name": "winner",
              "type": "address"
            }
          ],
          "internalType": "struct Hacka.HackathonPrize[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_organizer",
          "type": "address"
        }
      ],
      "name": "getHackathonsByOrganizer",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "performUpkeep",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "s_hackathons",
      "outputs": [
        {
          "internalType": "address",
          "name": "organizer",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "timestampStart",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "timestampEnd",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "judgingPeriod",
          "type": "uint8"
        },
        {
          "internalType": "enum Hacka.HackathonStage",
          "name": "stage",
          "type": "uint8"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "url",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "s_interval",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "s_lastTimeStamp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "s_organizerHackathons",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "s_prizes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "reward",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "winner",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_hackathonId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_timestampStart",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_timestampEnd",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_url",
          "type": "string"
        },
        {
          "internalType": "uint8",
          "name": "_judgingPeriod",
          "type": "uint8"
        }
      ],
      "name": "updateHackathonMetadata",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawLink",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x08c73691165ea0df31a346f042fbbd9a3b160a685c8ea2468bc904441cd2b88c",
  "receipt": {
    "to": null,
    "from": "0x6E51d5c51872f97caab78E8e3cA9a23C4945474A",
    "contractAddress": "0xAEe9E86efB3e3B1Db636A488817f4d85f69d41B8",
    "transactionIndex": 2,
    "gasUsed": "3714487",
    "logsBloom": "0x
    "blockHash": "0x1130efc5be14ada0daaf08b35bbb3dcf9e3f3a991579253eca12b0d092a8999a",
    "transactionHash": "0x08c73691165ea0df31a346f042fbbd9a3b160a685c8ea2468bc904441cd2b88c",
    "logs": [
      {
        "transactionIndex": 2,
        "blockNumber": 28540058,
        "transactionHash": "0x08c73691165ea0df31a346f042fbbd9a3b160a685c8ea2468bc904441cd2b88c",
        "address": "0xAEe9E86efB3e3B1Db636A488817f4d85f69d41B8",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000006e51d5c51872f97caab78e8e3ca9a23c4945474a"
        ],
        "data": "0x",
        "logIndex": 1,
        "blockHash": "0x1130efc5be14ada0daaf08b35bbb3dcf9e3f3a991579253eca12b0d092a8999a"
      }
    ],
    "blockNumber": 28540058,
    "cumulativeGasUsed": "3781943",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "d22cf659bd9c059ad166ba601e9b451d",
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"hackathonId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"url\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestampStart\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestampEnd\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"judgingPeriod\",\"type\":\"uint8\"}],\"name\":\"HackathonChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"hackathonId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"organizer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"url\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestampStart\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestampEnd\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"judgingPeriod\",\"type\":\"uint8\"}],\"name\":\"HackathonCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"hackathonId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"enum Hacka.HackathonStage\",\"name\":\"previousStage\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"enum Hacka.HackathonStage\",\"name\":\"newStage\",\"type\":\"uint8\"}],\"name\":\"HackathonStageChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"submissionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"hackathonId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"participant\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"prizes\",\"type\":\"uint256[]\"}],\"name\":\"HackathonSubmissionCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_hackathonId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_prizeId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_judge\",\"type\":\"address\"}],\"name\":\"addJudge\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_hackathonId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_description\",\"type\":\"string\"}],\"name\":\"addPrize\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"prizeId\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"checkUpkeep\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"upkeepNeeded\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_timestampStart\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_timestampEnd\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_url\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"_judgingPeriod\",\"type\":\"uint8\"}],\"name\":\"createHackathon\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"hackathonId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"disableDemoMode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enableDemoMode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_hackathonId\",\"type\":\"uint256\"}],\"name\":\"getHackathonMetadata\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"organizer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestampStart\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestampEnd\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"judgingPeriod\",\"type\":\"uint8\"},{\"internalType\":\"enum Hacka.HackathonStage\",\"name\":\"stage\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"url\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"internalType\":\"struct Hacka.HackathonMetadata\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_hackathonId\",\"type\":\"uint256\"}],\"name\":\"getHackathonPrizes\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"judges\",\"type\":\"address[]\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"address[]\",\"name\":\"submissions\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"}],\"internalType\":\"struct Hacka.HackathonPrize[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_organizer\",\"type\":\"address\"}],\"name\":\"getHackathonsByOrganizer\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"performUpkeep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"s_hackathons\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"organizer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestampStart\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestampEnd\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"judgingPeriod\",\"type\":\"uint8\"},{\"internalType\":\"enum Hacka.HackathonStage\",\"name\":\"stage\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"url\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_interval\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_lastTimeStamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"s_organizerHackathons\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"s_prizes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_hackathonId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_timestampStart\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_timestampEnd\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_url\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"_judgingPeriod\",\"type\":\"uint8\"}],\"name\":\"updateHackathonMetadata\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawLink\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"Deploy with the address of the LINK token@param _link The address of the LINK token\"},\"withdrawLink()\":{\"notice\":\"Allows the owner to withdraw any LINK balance on the contract\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Hacka.sol\":\"Hacka\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface LinkTokenInterface {\\n\\n  function allowance(\\n    address owner,\\n    address spender\\n  )\\n    external\\n    view\\n    returns (\\n      uint256 remaining\\n    );\\n\\n  function approve(\\n    address spender,\\n    uint256 value\\n  )\\n    external\\n    returns (\\n      bool success\\n    );\\n\\n  function balanceOf(\\n    address owner\\n  )\\n    external\\n    view\\n    returns (\\n      uint256 balance\\n    );\\n\\n  function decimals()\\n    external\\n    view\\n    returns (\\n      uint8 decimalPlaces\\n    );\\n\\n  function decreaseApproval(\\n    address spender,\\n    uint256 addedValue\\n  )\\n    external\\n    returns (\\n      bool success\\n    );\\n\\n  function increaseApproval(\\n    address spender,\\n    uint256 subtractedValue\\n  ) external;\\n\\n  function name()\\n    external\\n    view\\n    returns (\\n      string memory tokenName\\n    );\\n\\n  function symbol()\\n    external\\n    view\\n    returns (\\n      string memory tokenSymbol\\n    );\\n\\n  function totalSupply()\\n    external\\n    view\\n    returns (\\n      uint256 totalTokensIssued\\n    );\\n\\n  function transfer(\\n    address to,\\n    uint256 value\\n  )\\n    external\\n    returns (\\n      bool success\\n    );\\n\\n  function transferAndCall(\\n    address to,\\n    uint256 value,\\n    bytes calldata data\\n  )\\n    external\\n    returns (\\n      bool success\\n    );\\n\\n  function transferFrom(\\n    address from,\\n    address to,\\n    uint256 value\\n  )\\n    external\\n    returns (\\n      bool success\\n    );\\n\\n}\\n\",\"keccak256\":\"0x50528c237386c55ff122d047f91b32be7abe24e9dfdc609de21cd605aae83b9a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _setOwner(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _setOwner(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _setOwner(newOwner);\\n    }\\n\\n    function _setOwner(address newOwner) private {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x6bb804a310218875e89d12c053e94a13a4607cdf7cc2052f3e52bd32a0dc50a1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x90565a39ae45c80f0468dc96c7b20d0afc3055f344c8203a0c9258239f350b9f\",\"license\":\"MIT\"},\"contracts/Hacka.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.7;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol\\\";\\n\\ninterface KeeperCompatibleInterface {\\n    function checkUpkeep(bytes calldata checkData) external returns (bool upkeepNeeded, bytes memory performData);\\n\\n    function performUpkeep(bytes calldata performData) external;\\n}\\n\\ncontract Hacka is Ownable, KeeperCompatibleInterface {\\n    bool private s_demoMode = false; // to be deleted\\n    uint private s_counter = 0;\\n    LinkTokenInterface internal LinkToken;\\n\\n    enum HackathonStage {NEW, STARTED, JUDGING, FINALIZED}\\n\\n    struct HackathonMetadata {\\n        address organizer;\\n        uint timestampStart;\\n        uint timestampEnd;\\n        uint8 judgingPeriod;\\n        HackathonStage stage;\\n        string name;\\n        string url;\\n        uint balance;\\n        // TODO cid for description\\n    }\\n\\n    struct HackathonSubmission {\\n        address participant;\\n        string name;\\n        // TODO cid for description\\n        uint hackathonId;\\n        uint[] prizes;\\n    }\\n\\n    struct HackathonPrize {\\n        uint reward;\\n        address[] judges;\\n        string name;\\n        string description;\\n        address[] submissions;\\n        address winner;\\n    }\\n\\n    mapping(uint => HackathonMetadata) public s_hackathons;\\n    mapping(uint => HackathonPrize[]) public s_prizes;\\n    mapping(address => uint[]) public s_organizerHackathons;\\n\\n    // todo emit rest of metadata on create,changed\\n    event HackathonCreated(uint indexed hackathonId, address indexed organizer, string name, string url, uint timestampStart, uint timestampEnd, uint8 judgingPeriod);\\n    event HackathonChanged(uint indexed hackathonId, string name, string url, uint timestampStart, uint timestampEnd, uint8 judgingPeriod);\\n    event HackathonStageChanged(uint indexed hackathonId, HackathonStage previousStage, HackathonStage newStage);\\n    event HackathonSubmissionCreated(uint indexed submissionId, uint indexed hackathonId, address indexed participant, string name, uint[] prizes);\\n\\n    uint public immutable s_interval = 1 hours;\\n    uint public s_lastTimeStamp;\\n\\n    /**\\n     * @notice Deploy with the address of the LINK token\\n     * @notice @param _link The address of the LINK token\\n     */\\n    constructor(/*address _link*/) {\\n        // LinkToken = LinkTokenInterface(_link);\\n        // TODO should not be hardcoded\\n        // TODO add hackathon ERC20 as well?\\n        LinkToken = LinkTokenInterface(0xa36085F69e2889c224210F603D836748e7dC0088);\\n    }\\n\\n    function createHackathon(\\n        uint _timestampStart,\\n        uint _timestampEnd,\\n        string calldata _name,\\n        string calldata _url,\\n        uint8 _judgingPeriod\\n    ) external returns (uint hackathonId) {\\n        if (s_demoMode == false) {\\n            validateMetadata(\\n                _timestampStart,\\n                _timestampEnd,\\n                _name,\\n                _judgingPeriod,\\n                block.timestamp\\n            );\\n        }\\n\\n        hackathonId = s_counter;\\n        s_counter = s_counter + 1;\\n\\n        s_hackathons[hackathonId].organizer = msg.sender;\\n        s_hackathons[hackathonId].timestampStart = _timestampStart;\\n        s_hackathons[hackathonId].timestampEnd = _timestampEnd;\\n        s_hackathons[hackathonId].judgingPeriod = _judgingPeriod;\\n        s_hackathons[hackathonId].stage = HackathonStage.NEW;\\n        s_hackathons[hackathonId].name = _name;\\n        s_hackathons[hackathonId].url = _url;\\n\\n        s_organizerHackathons[msg.sender].push(hackathonId);\\n\\n        emit HackathonCreated(hackathonId, msg.sender, _name, _url, _timestampStart, _timestampEnd, _judgingPeriod);\\n\\n        return hackathonId;\\n    }\\n\\n    function updateHackathonMetadata(\\n        uint _hackathonId,\\n        uint _timestampStart,\\n        uint _timestampEnd,\\n        string calldata _name,\\n        string calldata _url,\\n        uint8 _judgingPeriod\\n    ) external {\\n        require(s_hackathons[_hackathonId].organizer == msg.sender, \\\"Only hackathon's organizer can change its metadata\\\");\\n        require(s_hackathons[_hackathonId].timestampStart - block.timestamp > 1 hours, \\\"Hackathon metadata can be changed up until 1 hour before start\\\");\\n        require(s_hackathons[_hackathonId].stage == HackathonStage.NEW, \\\"Hackathon metadata can't change after it has started\\\");\\n        validateMetadata(\\n            _timestampStart,\\n            _timestampEnd,\\n            _name,\\n            _judgingPeriod,\\n            block.timestamp\\n        );\\n\\n        s_hackathons[_hackathonId].timestampStart = _timestampStart;\\n        s_hackathons[_hackathonId].timestampEnd = _timestampEnd;\\n        s_hackathons[_hackathonId].name = _name;\\n        s_hackathons[_hackathonId].url = _url;\\n        s_hackathons[_hackathonId].judgingPeriod = _judgingPeriod;\\n\\n        emit HackathonChanged(_hackathonId, _name, _url, _timestampStart, _timestampStart, _judgingPeriod);\\n    }\\n\\n    function updateHackathonMetadata(\\n        uint _hackathonId,\\n        HackathonStage _newStage\\n    ) internal {\\n        emit HackathonStageChanged(_hackathonId, s_hackathons[_hackathonId].stage, _newStage);\\n        s_hackathons[_hackathonId].stage = _newStage;\\n    }\\n\\n    // TODO method to transfer hackathon ownership to another address (change organizer)\\n\\n    function validateMetadata(\\n        uint _timestampStart,\\n        uint _timestampEnd,\\n        string calldata _name,\\n        uint8 _judgingPeriod,\\n        uint _currentTimestamp\\n    ) pure internal {\\n        require(_timestampEnd - _timestampStart > 1 days, \\\"Hackathon must be at least 1 day long\\\");\\n        require(_timestampStart - _currentTimestamp >= 1 days, \\\"Hackathon start date must be at least 1 day in the future\\\");\\n        require(_judgingPeriod >= 1, \\\"Judging period must be at least 1 day\\\");\\n        require(_judgingPeriod <= 31, \\\"Judging period must not be longer than 31 days\\\");\\n        require(bytes(_name).length >= 8, \\\"Hackathon name must be at least 8 characters\\\");\\n        require(bytes(_name).length <= 100, \\\"Hackathon name must be at most 100 characters\\\");\\n    }\\n\\n    // TODO should accept other tokens, or more specifically - \\\"Hackathon Token\\\" ERC20, for now just use ETH\\n    function addPrize(\\n        uint256 _amount,\\n        uint _hackathonId,\\n        string calldata _name,\\n        string calldata _description\\n    ) external payable returns (uint prizeId) {\\n        require(msg.value == _amount);\\n        require(s_hackathons[_hackathonId].stage == HackathonStage.NEW, \\\"Can't add a prize to an ongoing or finished hackathon\\\");\\n        require(s_hackathons[_hackathonId].organizer == msg.sender, \\\"Only hackathon's organizer can add a prize\\\");\\n        require(bytes(_name).length > 8, \\\"Prize name must be at least 8 characters\\\");\\n        require(msg.value >= 0.0001 ether, \\\"Minimum prize reward is 0.0001 ETH\\\");\\n\\n        s_hackathons[_hackathonId].balance += msg.value;\\n\\n        HackathonPrize memory prize;\\n        prize.reward = msg.value;\\n        prize.name = _name;\\n        prize.description = _description;\\n\\n        prizeId = s_prizes[_hackathonId].length;\\n        s_prizes[_hackathonId].push(prize);\\n\\n        // TODO emit event about prize being created\\n\\n        return prizeId;\\n    }\\n\\n    function addJudge(\\n        uint _hackathonId,\\n        uint _prizeId,\\n        address _judge\\n    ) external {\\n        require(s_hackathons[_hackathonId].organizer == msg.sender, \\\"Only hackathon's organizer can add a judge\\\");\\n        require(s_prizes[_hackathonId][_prizeId].reward > 0, \\\"Prize not found\\\");\\n\\n        s_prizes[_hackathonId][_prizeId].judges.push(_judge);\\n        // TODO emit event about judge being added\\n    }\\n\\n    function getHackathonsByOrganizer(\\n        address _organizer\\n    ) external view returns (uint[] memory) {\\n        return s_organizerHackathons[_organizer];\\n    }\\n\\n    function getHackathonMetadata(uint _hackathonId) external view returns (HackathonMetadata memory) {\\n        return s_hackathons[_hackathonId];\\n    }\\n\\n    function getHackathonPrizes(uint _hackathonId) external view returns (HackathonPrize[] memory) {\\n        return s_prizes[_hackathonId];\\n    }\\n\\n    /**\\n     * @notice Allows the owner to withdraw any LINK balance on the contract\\n     */\\n    function withdrawLink() public onlyOwner {\\n        require(LinkToken.transfer(msg.sender, LinkToken.balanceOf(address(this))), \\\"Unable to transfer\\\");\\n    }\\n\\n    // TODO delete for actual use! demo mode is to be able to skip date checks to create a demo hackathon\\n    function enableDemoMode() public onlyOwner {\\n        s_demoMode = true;\\n    }\\n\\n    // TODO delete for actual use! demo mode is to be able to skip date checks to create a demo hackathon\\n    function disableDemoMode() public onlyOwner {\\n        s_demoMode = false;\\n    }\\n\\n    function checkUpkeep(bytes calldata /* checkData */) external view override returns (bool upkeepNeeded, bytes memory /* performData */) {\\n        bool intervalPassed = (block.timestamp - s_lastTimeStamp) > s_interval;\\n        bool hasHackathons = s_counter > 0;\\n\\n        // TODO optimize - return IDs of hackathons that need to have their status changed\\n        bool hasHackathonsPendingChange = false;\\n        for (uint id = 0; id < s_counter; id++) {\\n            if (s_hackathons[id].stage == HackathonStage.FINALIZED) {\\n                continue;\\n            }\\n\\n            if (s_hackathons[id].stage == HackathonStage.NEW && block.timestamp > s_hackathons[id].timestampStart) {\\n                hasHackathonsPendingChange = true;\\n                break;\\n            }\\n\\n            if (s_hackathons[id].stage == HackathonStage.STARTED && block.timestamp > s_hackathons[id].timestampEnd) {\\n                hasHackathonsPendingChange = true;\\n                break;\\n            }\\n\\n            if (s_hackathons[id].stage == HackathonStage.JUDGING && block.timestamp > s_hackathons[id].timestampEnd + (s_hackathons[id].judgingPeriod * 1 days)) {\\n                hasHackathonsPendingChange = true;\\n                break;\\n            }\\n        }\\n\\n        upkeepNeeded = intervalPassed && hasHackathons && hasHackathonsPendingChange;\\n    }\\n\\n    function performUpkeep(bytes calldata /* performData */) external override {\\n        s_lastTimeStamp = block.timestamp;\\n        for (uint id = 0; id < s_counter; id++) {\\n            if (s_hackathons[id].stage == HackathonStage.NEW && block.timestamp > s_hackathons[id].timestampStart) {\\n                updateHackathonMetadata(id, HackathonStage.STARTED);\\n                continue;\\n            }\\n\\n            if (s_hackathons[id].stage == HackathonStage.STARTED && block.timestamp > s_hackathons[id].timestampEnd) {\\n                updateHackathonMetadata(id, HackathonStage.JUDGING);\\n                continue;\\n            }\\n\\n            if (s_hackathons[id].stage == HackathonStage.JUDGING && block.timestamp > s_hackathons[id].timestampEnd + (s_hackathons[id].judgingPeriod * 1 days)) {\\n                updateHackathonMetadata(id, HackathonStage.FINALIZED);\\n                // TODO finalize = payout\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x8b28cad8b43df7d27df9d6d2f4a151b5a433a51e25197ff0130a44467080fc95\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a060405260008060146101000a81548160ff0219169083151502179055506000600155610e106080908152503480156200003957600080fd5b506200005a6200004e620000b560201b60201c565b620000bd60201b60201c565b73a36085f69e2889c224210f603d836748e7dc0088600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555062000181565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b608051614181620001a46000396000818161109801526118fc01526141816000f3fe60806040526004361061011f5760003560e01c80638da5cb5b116100a0578063d738c38f11610064578063d738c38f146103e2578063dad39e7b1461040b578063dc499a0214610422578063f2fde38b1461045f578063fb39df8e146104885761011f565b80638da5cb5b146103215780638dc654a21461034c578063adb622db14610363578063c03846211461037a578063cc9b2ea3146103b75761011f565b8063492c7c0d116100e7578063492c7c0d146102225780636e04ff0d14610266578063715018a6146102a45780637dc0cae4146102bb57806389e1037c146102f85761011f565b8063042054f414610124578063337057791461016157806334854043146101915780634585e33b146101bc5780634651efb5146101e5575b600080fd5b34801561013057600080fd5b5061014b60048036038101906101469190612978565b6104c8565b6040516101589190613748565b60405180910390f35b61017b60048036038101906101769190612a65565b6106e6565b604051610188919061376a565b60405180910390f35b34801561019d57600080fd5b506101a6610ab2565b6040516101b3919061376a565b60405180910390f35b3480156101c857600080fd5b506101e360048036038101906101de919061292b565b610ab8565b005b3480156101f157600080fd5b5061020c60048036038101906102079190612b0c565b610ca8565b604051610219919061376a565b60405180910390f35b34801561022e57600080fd5b5061024960048036038101906102449190612978565b610efe565b60405161025d98979695949392919061337a565b60405180910390f35b34801561027257600080fd5b5061028d6004803603810190610288919061292b565b611090565b60405161029b92919061344a565b60405180910390f35b3480156102b057600080fd5b506102b9611319565b005b3480156102c757600080fd5b506102e260048036038101906102dd91906128be565b6113a1565b6040516102ef919061376a565b60405180910390f35b34801561030457600080fd5b5061031f600480360381019061031a9190612a12565b6113d2565b005b34801561032d57600080fd5b5061033661158b565b6040516103439190613336565b60405180910390f35b34801561035857600080fd5b506103616115b4565b005b34801561036f57600080fd5b506103786117ca565b005b34801561038657600080fd5b506103a1600480360381019061039c9190612891565b611863565b6040516103ae9190613428565b60405180910390f35b3480156103c357600080fd5b506103cc6118fa565b6040516103d9919061376a565b60405180910390f35b3480156103ee57600080fd5b5061040960048036038101906104049190612bc8565b61191e565b005b34801561041757600080fd5b50610420611bbe565b005b34801561042e57600080fd5b5061044960048036038101906104449190612978565b611c56565b6040516104569190613406565b60405180910390f35b34801561046b57600080fd5b5061048660048036038101906104819190612891565b611f68565b005b34801561049457600080fd5b506104af60048036038101906104aa91906129d2565b612060565b6040516104bf9493929190613785565b60405180910390f35b6104d061250d565b60036000838152602001908152602001600020604051806101000160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201548152602001600282015481526020016003820160009054906101000a900460ff1660ff1660ff1681526020016003820160019054906101000a900460ff16600381111561059b5761059a613b08565b5b60038111156105ad576105ac613b08565b5b81526020016004820180546105c190613a5e565b80601f01602080910402602001604051908101604052809291908181526020018280546105ed90613a5e565b801561063a5780601f1061060f5761010080835404028352916020019161063a565b820191906000526020600020905b81548152906001019060200180831161061d57829003601f168201915b5050505050815260200160058201805461065390613a5e565b80601f016020809104026020016040519081016040528092919081815260200182805461067f90613a5e565b80156106cc5780601f106106a1576101008083540402835291602001916106cc565b820191906000526020600020905b8154815290600101906020018083116106af57829003601f168201915b505050505081526020016006820154815250509050919050565b60008634146106f457600080fd5b6000600381111561070857610707613b08565b5b6003600088815260200190815260200160002060030160019054906101000a900460ff16600381111561073e5761073d613b08565b5b1461077e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610775906136c8565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166003600088815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610822576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161081990613548565b60405180910390fd5b60088585905011610868576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161085f90613728565b60405180910390fd5b655af3107a40003410156108b1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108a8906135c8565b60405180910390fd5b346003600088815260200190815260200160002060060160008282546108d791906138cc565b925050819055506108e661257d565b3481600001818152505085858080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050816040018190525083838080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505081606001819052506004600088815260200190815260200160002080549050915060046000888152602001908152602001600020819080600181540180825580915050600190039060005260206000209060060201600090919091909150600082015181600001556020820151816001019080519060200190610a069291906125c9565b506040820151816002019080519060200190610a23929190612653565b506060820151816003019080519060200190610a40929190612653565b506080820151816004019080519060200190610a5d9291906125c9565b5060a08201518160050160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050509695505050505050565b60065481565b4260068190555060005b600154811015610ca35760006003811115610ae057610adf613b08565b5b6003600083815260200190815260200160002060030160019054906101000a900460ff166003811115610b1657610b15613b08565b5b148015610b385750600360008281526020019081526020016000206001015442115b15610b4d57610b488160016121dd565b610c90565b60016003811115610b6157610b60613b08565b5b6003600083815260200190815260200160002060030160019054906101000a900460ff166003811115610b9757610b96613b08565b5b148015610bb95750600360008281526020019081526020016000206002015442115b15610bce57610bc98160026121dd565b610c90565b60026003811115610be257610be1613b08565b5b6003600083815260200190815260200160002060030160019054906101000a900460ff166003811115610c1857610c17613b08565b5b148015610c7e5750620151806003600083815260200190815260200160002060030160009054906101000a900460ff1660ff16610c559190613922565b62ffffff166003600083815260200190815260200160002060020154610c7b91906138cc565b42115b15610c8f57610c8e8160036121dd565b5b5b8080610c9b90613a90565b915050610ac2565b505050565b6000801515600060149054906101000a900460ff1615151415610cd457610cd388888888864261227c565b5b600154905060018054610ce791906138cc565b600181905550336003600083815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550876003600083815260200190815260200160002060010181905550866003600083815260200190815260200160002060020181905550816003600083815260200190815260200160002060030160006101000a81548160ff021916908360ff16021790555060006003600083815260200190815260200160002060030160016101000a81548160ff02191690836003811115610de157610de0613b08565b5b02179055508585600360008481526020019081526020016000206004019190610e0b9291906126d9565b508383600360008481526020019081526020016000206005019190610e319291906126d9565b50600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150506001900390600052602060002001600090919091909150553373ffffffffffffffffffffffffffffffffffffffff16817ff7c823cc2845ab92ea0ff85b83d01c97d1d94c431bd5608443620134b45f6ddb888888888e8e8a604051610eeb97969594939291906134a3565b60405180910390a3979650505050505050565b60036020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020154908060030160009054906101000a900460ff16908060030160019054906101000a900460ff1690806004018054610f7990613a5e565b80601f0160208091040260200160405190810160405280929190818152602001828054610fa590613a5e565b8015610ff25780601f10610fc757610100808354040283529160200191610ff2565b820191906000526020600020905b815481529060010190602001808311610fd557829003601f168201915b50505050509080600501805461100790613a5e565b80601f016020809104026020016040519081016040528092919081815260200182805461103390613a5e565b80156110805780601f1061105557610100808354040283529160200191611080565b820191906000526020600020905b81548152906001019060200180831161106357829003601f168201915b5050505050908060060154905088565b6000606060007f0000000000000000000000000000000000000000000000000000000000000000600654426110c5919061395f565b1190506000806001541190506000805b6001548110156112f9576003808111156110f2576110f1613b08565b5b6003600083815260200190815260200160002060030160019054906101000a900460ff16600381111561112857611127613b08565b5b1415611133576112e6565b6000600381111561114757611146613b08565b5b6003600083815260200190815260200160002060030160019054906101000a900460ff16600381111561117d5761117c613b08565b5b14801561119f5750600360008281526020019081526020016000206001015442115b156111ad57600191506112f9565b600160038111156111c1576111c0613b08565b5b6003600083815260200190815260200160002060030160019054906101000a900460ff1660038111156111f7576111f6613b08565b5b1480156112195750600360008281526020019081526020016000206002015442115b1561122757600191506112f9565b6002600381111561123b5761123a613b08565b5b6003600083815260200190815260200160002060030160019054906101000a900460ff16600381111561127157611270613b08565b5b1480156112d75750620151806003600083815260200190815260200160002060030160009054906101000a900460ff1660ff166112ae9190613922565b62ffffff1660036000838152602001908152602001600020600201546112d491906138cc565b42115b156112e557600191506112f9565b5b80806112f190613a90565b9150506110d5565b508280156113045750815b801561130d5750805b94505050509250929050565b611321612441565b73ffffffffffffffffffffffffffffffffffffffff1661133f61158b565b73ffffffffffffffffffffffffffffffffffffffff1614611395576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161138c90613648565b60405180910390fd5b61139f6000612449565b565b600560205281600052604060002081815481106113bd57600080fd5b90600052602060002001600091509150505481565b3373ffffffffffffffffffffffffffffffffffffffff166003600085815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611476576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161146d90613568565b60405180910390fd5b600060046000858152602001908152602001600020838154811061149d5761149c613b66565b5b906000526020600020906006020160000154116114ef576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114e6906135a8565b60405180910390fd5b60046000848152602001908152602001600020828154811061151457611513613b66565b5b9060005260206000209060060201600101819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6115bc612441565b73ffffffffffffffffffffffffffffffffffffffff166115da61158b565b73ffffffffffffffffffffffffffffffffffffffff1614611630576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161162790613648565b60405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016116ca9190613336565b60206040518083038186803b1580156116e257600080fd5b505afa1580156116f6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061171a91906129a5565b6040518363ffffffff1660e01b8152600401611737929190613351565b602060405180830381600087803b15801561175157600080fd5b505af1158015611765573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061178991906128fe565b6117c8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117bf90613608565b60405180910390fd5b565b6117d2612441565b73ffffffffffffffffffffffffffffffffffffffff166117f061158b565b73ffffffffffffffffffffffffffffffffffffffff1614611846576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161183d90613648565b60405180910390fd5b6001600060146101000a81548160ff021916908315150217905550565b6060600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054806020026020016040519081016040528092919081815260200182805480156118ee57602002820191906000526020600020905b8154815260200190600101908083116118da575b50505050509050919050565b7f000000000000000000000000000000000000000000000000000000000000000081565b3373ffffffffffffffffffffffffffffffffffffffff16600360008a815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146119c2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119b990613628565b60405180910390fd5b610e1042600360008b8152602001908152602001600020600101546119e7919061395f565b11611a27576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a1e90613688565b60405180910390fd5b60006003811115611a3b57611a3a613b08565b5b600360008a815260200190815260200160002060030160019054906101000a900460ff166003811115611a7157611a70613b08565b5b14611ab1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611aa890613588565b60405180910390fd5b611abf87878787854261227c565b86600360008a81526020019081526020016000206001018190555085600360008a8152602001908152602001600020600201819055508484600360008b81526020019081526020016000206004019190611b1a9291906126d9565b508282600360008b81526020019081526020016000206005019190611b409291906126d9565b5080600360008a815260200190815260200160002060030160006101000a81548160ff021916908360ff160217905550877f2406bb451705c8be83194cf2d0a2dd0e3647d9ea2308183dbbd3b66ffe271e6b868686868c8d88604051611bac97969594939291906134a3565b60405180910390a25050505050505050565b611bc6612441565b73ffffffffffffffffffffffffffffffffffffffff16611be461158b565b73ffffffffffffffffffffffffffffffffffffffff1614611c3a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c3190613648565b60405180910390fd5b60008060146101000a81548160ff021916908315150217905550565b606060046000838152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b82821015611f5d57838290600052602060002090600602016040518060c00160405290816000820154815260200160018201805480602002602001604051908101604052809291908181526020018280548015611d3d57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611cf3575b50505050508152602001600282018054611d5690613a5e565b80601f0160208091040260200160405190810160405280929190818152602001828054611d8290613a5e565b8015611dcf5780601f10611da457610100808354040283529160200191611dcf565b820191906000526020600020905b815481529060010190602001808311611db257829003601f168201915b50505050508152602001600382018054611de890613a5e565b80601f0160208091040260200160405190810160405280929190818152602001828054611e1490613a5e565b8015611e615780601f10611e3657610100808354040283529160200191611e61565b820191906000526020600020905b815481529060010190602001808311611e4457829003601f168201915b5050505050815260200160048201805480602002602001604051908101604052809291908181526020018280548015611eef57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611ea5575b505050505081526020016005820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152505081526020019060010190611c8b565b505050509050919050565b611f70612441565b73ffffffffffffffffffffffffffffffffffffffff16611f8e61158b565b73ffffffffffffffffffffffffffffffffffffffff1614611fe4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611fdb90613648565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415612054576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161204b90613528565b60405180910390fd5b61205d81612449565b50565b6004602052816000526040600020818154811061207c57600080fd5b9060005260206000209060060201600091509150508060000154908060020180546120a690613a5e565b80601f01602080910402602001604051908101604052809291908181526020018280546120d290613a5e565b801561211f5780601f106120f45761010080835404028352916020019161211f565b820191906000526020600020905b81548152906001019060200180831161210257829003601f168201915b50505050509080600301805461213490613a5e565b80601f016020809104026020016040519081016040528092919081815260200182805461216090613a5e565b80156121ad5780601f10612182576101008083540402835291602001916121ad565b820191906000526020600020905b81548152906001019060200180831161219057829003601f168201915b5050505050908060050160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905084565b817f0e84e0666f369b5893de172e41bbc8d6e160ab211eb9765214e1939732144f066003600085815260200190815260200160002060030160019054906101000a900460ff168360405161223292919061347a565b60405180910390a2806003600084815260200190815260200160002060030160016101000a81548160ff0219169083600381111561227357612272613b08565b5b02179055505050565b62015180868661228c919061395f565b116122cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016122c390613668565b60405180910390fd5b6201518081876122dc919061395f565b101561231d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612314906136e8565b60405180910390fd5b60018260ff161015612364576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161235b906136a8565b60405180910390fd5b601f8260ff1611156123ab576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016123a290613508565b60405180910390fd5b60088484905010156123f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016123e990613708565b60405180910390fd5b6064848490501115612439576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612430906135e8565b60405180910390fd5b505050505050565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b604051806101000160405280600073ffffffffffffffffffffffffffffffffffffffff1681526020016000815260200160008152602001600060ff1681526020016000600381111561256257612561613b08565b5b81526020016060815260200160608152602001600081525090565b6040518060c001604052806000815260200160608152602001606081526020016060815260200160608152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b828054828255906000526020600020908101928215612642579160200282015b828111156126415782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906125e9565b5b50905061264f919061275f565b5090565b82805461265f90613a5e565b90600052602060002090601f01602090048101928261268157600085556126c8565b82601f1061269a57805160ff19168380011785556126c8565b828001600101855582156126c8579182015b828111156126c75782518255916020019190600101906126ac565b5b5090506126d5919061275f565b5090565b8280546126e590613a5e565b90600052602060002090601f016020900481019282612707576000855561274e565b82601f1061272057803560ff191683800117855561274e565b8280016001018555821561274e579182015b8281111561274d578235825591602001919060010190612732565b5b50905061275b919061275f565b5090565b5b80821115612778576000816000905550600101612760565b5090565b60008135905061278b816140ef565b92915050565b6000815190506127a081614106565b92915050565b60008083601f8401126127bc576127bb613b9a565b5b8235905067ffffffffffffffff8111156127d9576127d8613b95565b5b6020830191508360018202830111156127f5576127f4613b9f565b5b9250929050565b60008083601f84011261281257612811613b9a565b5b8235905067ffffffffffffffff81111561282f5761282e613b95565b5b60208301915083600182028301111561284b5761284a613b9f565b5b9250929050565b6000813590506128618161411d565b92915050565b6000815190506128768161411d565b92915050565b60008135905061288b81614134565b92915050565b6000602082840312156128a7576128a6613ba9565b5b60006128b58482850161277c565b91505092915050565b600080604083850312156128d5576128d4613ba9565b5b60006128e38582860161277c565b92505060206128f485828601612852565b9150509250929050565b60006020828403121561291457612913613ba9565b5b600061292284828501612791565b91505092915050565b6000806020838503121561294257612941613ba9565b5b600083013567ffffffffffffffff8111156129605761295f613ba4565b5b61296c858286016127a6565b92509250509250929050565b60006020828403121561298e5761298d613ba9565b5b600061299c84828501612852565b91505092915050565b6000602082840312156129bb576129ba613ba9565b5b60006129c984828501612867565b91505092915050565b600080604083850312156129e9576129e8613ba9565b5b60006129f785828601612852565b9250506020612a0885828601612852565b9150509250929050565b600080600060608486031215612a2b57612a2a613ba9565b5b6000612a3986828701612852565b9350506020612a4a86828701612852565b9250506040612a5b8682870161277c565b9150509250925092565b60008060008060008060808789031215612a8257612a81613ba9565b5b6000612a9089828a01612852565b9650506020612aa189828a01612852565b955050604087013567ffffffffffffffff811115612ac257612ac1613ba4565b5b612ace89828a016127fc565b9450945050606087013567ffffffffffffffff811115612af157612af0613ba4565b5b612afd89828a016127fc565b92509250509295509295509295565b600080600080600080600060a0888a031215612b2b57612b2a613ba9565b5b6000612b398a828b01612852565b9750506020612b4a8a828b01612852565b965050604088013567ffffffffffffffff811115612b6b57612b6a613ba4565b5b612b778a828b016127fc565b9550955050606088013567ffffffffffffffff811115612b9a57612b99613ba4565b5b612ba68a828b016127fc565b93509350506080612bb98a828b0161287c565b91505092959891949750929550565b60008060008060008060008060c0898b031215612be857612be7613ba9565b5b6000612bf68b828c01612852565b9850506020612c078b828c01612852565b9750506040612c188b828c01612852565b965050606089013567ffffffffffffffff811115612c3957612c38613ba4565b5b612c458b828c016127fc565b9550955050608089013567ffffffffffffffff811115612c6857612c67613ba4565b5b612c748b828c016127fc565b935093505060a0612c878b828c0161287c565b9150509295985092959890939650565b6000612ca38383612cdb565b60208301905092915050565b6000612cbb838361325c565b905092915050565b6000612ccf83836132fa565b60208301905092915050565b612ce481613993565b82525050565b612cf381613993565b82525050565b6000612d0482613808565b612d0e8185613866565b9350612d19836137d8565b8060005b83811015612d4a578151612d318882612c97565b9750612d3c8361383f565b925050600181019050612d1d565b5085935050505092915050565b6000612d6282613813565b612d6c8185613877565b935083602082028501612d7e856137e8565b8060005b85811015612dba5784840389528151612d9b8582612caf565b9450612da68361384c565b925060208a01995050600181019050612d82565b50829750879550505050505092915050565b6000612dd78261381e565b612de18185613888565b9350612dec836137f8565b8060005b83811015612e1d578151612e048882612cc3565b9750612e0f83613859565b925050600181019050612df0565b5085935050505092915050565b612e33816139a5565b82525050565b6000612e4482613829565b612e4e8185613899565b9350612e5e818560208601613a2b565b612e6781613bae565b840191505092915050565b612e7b81613a0a565b82525050565b612e8a81613a0a565b82525050565b6000612e9c83856138bb565b9350612ea9838584613a1c565b612eb283613bae565b840190509392505050565b6000612ec882613834565b612ed281856138aa565b9350612ee2818560208601613a2b565b612eeb81613bae565b840191505092915050565b6000612f0182613834565b612f0b81856138bb565b9350612f1b818560208601613a2b565b612f2481613bae565b840191505092915050565b6000612f3c602e836138bb565b9150612f4782613bbf565b604082019050919050565b6000612f5f6026836138bb565b9150612f6a82613c0e565b604082019050919050565b6000612f82602a836138bb565b9150612f8d82613c5d565b604082019050919050565b6000612fa5602a836138bb565b9150612fb082613cac565b604082019050919050565b6000612fc86034836138bb565b9150612fd382613cfb565b604082019050919050565b6000612feb600f836138bb565b9150612ff682613d4a565b602082019050919050565b600061300e6022836138bb565b915061301982613d73565b604082019050919050565b6000613031602d836138bb565b915061303c82613dc2565b604082019050919050565b60006130546012836138bb565b915061305f82613e11565b602082019050919050565b60006130776032836138bb565b915061308282613e3a565b604082019050919050565b600061309a6020836138bb565b91506130a582613e89565b602082019050919050565b60006130bd6025836138bb565b91506130c882613eb2565b604082019050919050565b60006130e0603e836138bb565b91506130eb82613f01565b604082019050919050565b60006131036025836138bb565b915061310e82613f50565b604082019050919050565b60006131266035836138bb565b915061313182613f9f565b604082019050919050565b60006131496039836138bb565b915061315482613fee565b604082019050919050565b600061316c602c836138bb565b91506131778261403d565b604082019050919050565b600061318f6028836138bb565b915061319a8261408c565b604082019050919050565b6000610100830160008301516131be6000860182612cdb565b5060208301516131d160208601826132fa565b5060408301516131e460408601826132fa565b5060608301516131f76060860182613318565b50608083015161320a6080860182612e72565b5060a083015184820360a08601526132228282612ebd565b91505060c083015184820360c086015261323c8282612ebd565b91505060e083015161325160e08601826132fa565b508091505092915050565b600060c08301600083015161327460008601826132fa565b506020830151848203602086015261328c8282612cf9565b915050604083015184820360408601526132a68282612ebd565b915050606083015184820360608601526132c08282612ebd565b915050608083015184820360808601526132da8282612cf9565b91505060a08301516132ef60a0860182612cdb565b508091505092915050565b613303816139f3565b82525050565b613312816139f3565b82525050565b613321816139fd565b82525050565b613330816139fd565b82525050565b600060208201905061334b6000830184612cea565b92915050565b60006040820190506133666000830185612cea565b6133736020830184613309565b9392505050565b600061010082019050613390600083018b612cea565b61339d602083018a613309565b6133aa6040830189613309565b6133b76060830188613327565b6133c46080830187612e81565b81810360a08301526133d68186612ef6565b905081810360c08301526133ea8185612ef6565b90506133f960e0830184613309565b9998505050505050505050565b600060208201905081810360008301526134208184612d57565b905092915050565b600060208201905081810360008301526134428184612dcc565b905092915050565b600060408201905061345f6000830185612e2a565b81810360208301526134718184612e39565b90509392505050565b600060408201905061348f6000830185612e81565b61349c6020830184612e81565b9392505050565b600060a08201905081810360008301526134be81898b612e90565b905081810360208301526134d3818789612e90565b90506134e26040830186613309565b6134ef6060830185613309565b6134fc6080830184613327565b98975050505050505050565b6000602082019050818103600083015261352181612f2f565b9050919050565b6000602082019050818103600083015261354181612f52565b9050919050565b6000602082019050818103600083015261356181612f75565b9050919050565b6000602082019050818103600083015261358181612f98565b9050919050565b600060208201905081810360008301526135a181612fbb565b9050919050565b600060208201905081810360008301526135c181612fde565b9050919050565b600060208201905081810360008301526135e181613001565b9050919050565b6000602082019050818103600083015261360181613024565b9050919050565b6000602082019050818103600083015261362181613047565b9050919050565b600060208201905081810360008301526136418161306a565b9050919050565b600060208201905081810360008301526136618161308d565b9050919050565b60006020820190508181036000830152613681816130b0565b9050919050565b600060208201905081810360008301526136a1816130d3565b9050919050565b600060208201905081810360008301526136c1816130f6565b9050919050565b600060208201905081810360008301526136e181613119565b9050919050565b600060208201905081810360008301526137018161313c565b9050919050565b600060208201905081810360008301526137218161315f565b9050919050565b6000602082019050818103600083015261374181613182565b9050919050565b6000602082019050818103600083015261376281846131a5565b905092915050565b600060208201905061377f6000830184613309565b92915050565b600060808201905061379a6000830187613309565b81810360208301526137ac8186612ef6565b905081810360408301526137c08185612ef6565b90506137cf6060830184612cea565b95945050505050565b6000819050602082019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b60006138d7826139f3565b91506138e2836139f3565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561391757613916613ad9565b5b828201905092915050565b600061392d826139e4565b9150613938836139e4565b92508162ffffff048311821515161561395457613953613ad9565b5b828202905092915050565b600061396a826139f3565b9150613975836139f3565b92508282101561398857613987613ad9565b5b828203905092915050565b600061399e826139c4565b9050919050565b60008115159050919050565b60008190506139bf826140db565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062ffffff82169050919050565b6000819050919050565b600060ff82169050919050565b6000613a15826139b1565b9050919050565b82818337600083830152505050565b60005b83811015613a49578082015181840152602081019050613a2e565b83811115613a58576000848401525b50505050565b60006002820490506001821680613a7657607f821691505b60208210811415613a8a57613a89613b37565b5b50919050565b6000613a9b826139f3565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415613ace57613acd613ad9565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4a756467696e6720706572696f64206d757374206e6f74206265206c6f6e676560008201527f72207468616e2033312064617973000000000000000000000000000000000000602082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4f6e6c79206861636b6174686f6e2773206f7267616e697a65722063616e206160008201527f64642061207072697a6500000000000000000000000000000000000000000000602082015250565b7f4f6e6c79206861636b6174686f6e2773206f7267616e697a65722063616e206160008201527f64642061206a7564676500000000000000000000000000000000000000000000602082015250565b7f4861636b6174686f6e206d657461646174612063616e2774206368616e67652060008201527f6166746572206974206861732073746172746564000000000000000000000000602082015250565b7f5072697a65206e6f7420666f756e640000000000000000000000000000000000600082015250565b7f4d696e696d756d207072697a652072657761726420697320302e30303031204560008201527f5448000000000000000000000000000000000000000000000000000000000000602082015250565b7f4861636b6174686f6e206e616d65206d757374206265206174206d6f7374203160008201527f3030206368617261637465727300000000000000000000000000000000000000602082015250565b7f556e61626c6520746f207472616e736665720000000000000000000000000000600082015250565b7f4f6e6c79206861636b6174686f6e2773206f7267616e697a65722063616e206360008201527f68616e676520697473206d657461646174610000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f4861636b6174686f6e206d757374206265206174206c6561737420312064617960008201527f206c6f6e67000000000000000000000000000000000000000000000000000000602082015250565b7f4861636b6174686f6e206d657461646174612063616e206265206368616e676560008201527f6420757020756e74696c203120686f7572206265666f72652073746172740000602082015250565b7f4a756467696e6720706572696f64206d757374206265206174206c656173742060008201527f3120646179000000000000000000000000000000000000000000000000000000602082015250565b7f43616e2774206164642061207072697a6520746f20616e206f6e676f696e672060008201527f6f722066696e6973686564206861636b6174686f6e0000000000000000000000602082015250565b7f4861636b6174686f6e2073746172742064617465206d7573742062652061742060008201527f6c6561737420312064617920696e207468652066757475726500000000000000602082015250565b7f4861636b6174686f6e206e616d65206d757374206265206174206c656173742060008201527f3820636861726163746572730000000000000000000000000000000000000000602082015250565b7f5072697a65206e616d65206d757374206265206174206c65617374203820636860008201527f6172616374657273000000000000000000000000000000000000000000000000602082015250565b600481106140ec576140eb613b08565b5b50565b6140f881613993565b811461410357600080fd5b50565b61410f816139a5565b811461411a57600080fd5b50565b614126816139f3565b811461413157600080fd5b50565b61413d816139fd565b811461414857600080fd5b5056fea264697066735822122032ff9a186863f6825ae76ec7e42e061f8831e8af9f16c1b583374b2aee75961f64736f6c63430008070033",
  "deployedBytecode": "0x60806040526004361061011f5760003560e01c80638da5cb5b116100a0578063d738c38f11610064578063d738c38f146103e2578063dad39e7b1461040b578063dc499a0214610422578063f2fde38b1461045f578063fb39df8e146104885761011f565b80638da5cb5b146103215780638dc654a21461034c578063adb622db14610363578063c03846211461037a578063cc9b2ea3146103b75761011f565b8063492c7c0d116100e7578063492c7c0d146102225780636e04ff0d14610266578063715018a6146102a45780637dc0cae4146102bb57806389e1037c146102f85761011f565b8063042054f414610124578063337057791461016157806334854043146101915780634585e33b146101bc5780634651efb5146101e5575b600080fd5b34801561013057600080fd5b5061014b60048036038101906101469190612978565b6104c8565b6040516101589190613748565b60405180910390f35b61017b60048036038101906101769190612a65565b6106e6565b604051610188919061376a565b60405180910390f35b34801561019d57600080fd5b506101a6610ab2565b6040516101b3919061376a565b60405180910390f35b3480156101c857600080fd5b506101e360048036038101906101de919061292b565b610ab8565b005b3480156101f157600080fd5b5061020c60048036038101906102079190612b0c565b610ca8565b604051610219919061376a565b60405180910390f35b34801561022e57600080fd5b5061024960048036038101906102449190612978565b610efe565b60405161025d98979695949392919061337a565b60405180910390f35b34801561027257600080fd5b5061028d6004803603810190610288919061292b565b611090565b60405161029b92919061344a565b60405180910390f35b3480156102b057600080fd5b506102b9611319565b005b3480156102c757600080fd5b506102e260048036038101906102dd91906128be565b6113a1565b6040516102ef919061376a565b60405180910390f35b34801561030457600080fd5b5061031f600480360381019061031a9190612a12565b6113d2565b005b34801561032d57600080fd5b5061033661158b565b6040516103439190613336565b60405180910390f35b34801561035857600080fd5b506103616115b4565b005b34801561036f57600080fd5b506103786117ca565b005b34801561038657600080fd5b506103a1600480360381019061039c9190612891565b611863565b6040516103ae9190613428565b60405180910390f35b3480156103c357600080fd5b506103cc6118fa565b6040516103d9919061376a565b60405180910390f35b3480156103ee57600080fd5b5061040960048036038101906104049190612bc8565b61191e565b005b34801561041757600080fd5b50610420611bbe565b005b34801561042e57600080fd5b5061044960048036038101906104449190612978565b611c56565b6040516104569190613406565b60405180910390f35b34801561046b57600080fd5b5061048660048036038101906104819190612891565b611f68565b005b34801561049457600080fd5b506104af60048036038101906104aa91906129d2565b612060565b6040516104bf9493929190613785565b60405180910390f35b6104d061250d565b60036000838152602001908152602001600020604051806101000160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201548152602001600282015481526020016003820160009054906101000a900460ff1660ff1660ff1681526020016003820160019054906101000a900460ff16600381111561059b5761059a613b08565b5b60038111156105ad576105ac613b08565b5b81526020016004820180546105c190613a5e565b80601f01602080910402602001604051908101604052809291908181526020018280546105ed90613a5e565b801561063a5780601f1061060f5761010080835404028352916020019161063a565b820191906000526020600020905b81548152906001019060200180831161061d57829003601f168201915b5050505050815260200160058201805461065390613a5e565b80601f016020809104026020016040519081016040528092919081815260200182805461067f90613a5e565b80156106cc5780601f106106a1576101008083540402835291602001916106cc565b820191906000526020600020905b8154815290600101906020018083116106af57829003601f168201915b505050505081526020016006820154815250509050919050565b60008634146106f457600080fd5b6000600381111561070857610707613b08565b5b6003600088815260200190815260200160002060030160019054906101000a900460ff16600381111561073e5761073d613b08565b5b1461077e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610775906136c8565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166003600088815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610822576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161081990613548565b60405180910390fd5b60088585905011610868576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161085f90613728565b60405180910390fd5b655af3107a40003410156108b1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108a8906135c8565b60405180910390fd5b346003600088815260200190815260200160002060060160008282546108d791906138cc565b925050819055506108e661257d565b3481600001818152505085858080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050816040018190525083838080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505081606001819052506004600088815260200190815260200160002080549050915060046000888152602001908152602001600020819080600181540180825580915050600190039060005260206000209060060201600090919091909150600082015181600001556020820151816001019080519060200190610a069291906125c9565b506040820151816002019080519060200190610a23929190612653565b506060820151816003019080519060200190610a40929190612653565b506080820151816004019080519060200190610a5d9291906125c9565b5060a08201518160050160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050509695505050505050565b60065481565b4260068190555060005b600154811015610ca35760006003811115610ae057610adf613b08565b5b6003600083815260200190815260200160002060030160019054906101000a900460ff166003811115610b1657610b15613b08565b5b148015610b385750600360008281526020019081526020016000206001015442115b15610b4d57610b488160016121dd565b610c90565b60016003811115610b6157610b60613b08565b5b6003600083815260200190815260200160002060030160019054906101000a900460ff166003811115610b9757610b96613b08565b5b148015610bb95750600360008281526020019081526020016000206002015442115b15610bce57610bc98160026121dd565b610c90565b60026003811115610be257610be1613b08565b5b6003600083815260200190815260200160002060030160019054906101000a900460ff166003811115610c1857610c17613b08565b5b148015610c7e5750620151806003600083815260200190815260200160002060030160009054906101000a900460ff1660ff16610c559190613922565b62ffffff166003600083815260200190815260200160002060020154610c7b91906138cc565b42115b15610c8f57610c8e8160036121dd565b5b5b8080610c9b90613a90565b915050610ac2565b505050565b6000801515600060149054906101000a900460ff1615151415610cd457610cd388888888864261227c565b5b600154905060018054610ce791906138cc565b600181905550336003600083815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550876003600083815260200190815260200160002060010181905550866003600083815260200190815260200160002060020181905550816003600083815260200190815260200160002060030160006101000a81548160ff021916908360ff16021790555060006003600083815260200190815260200160002060030160016101000a81548160ff02191690836003811115610de157610de0613b08565b5b02179055508585600360008481526020019081526020016000206004019190610e0b9291906126d9565b508383600360008481526020019081526020016000206005019190610e319291906126d9565b50600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150506001900390600052602060002001600090919091909150553373ffffffffffffffffffffffffffffffffffffffff16817ff7c823cc2845ab92ea0ff85b83d01c97d1d94c431bd5608443620134b45f6ddb888888888e8e8a604051610eeb97969594939291906134a3565b60405180910390a3979650505050505050565b60036020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020154908060030160009054906101000a900460ff16908060030160019054906101000a900460ff1690806004018054610f7990613a5e565b80601f0160208091040260200160405190810160405280929190818152602001828054610fa590613a5e565b8015610ff25780601f10610fc757610100808354040283529160200191610ff2565b820191906000526020600020905b815481529060010190602001808311610fd557829003601f168201915b50505050509080600501805461100790613a5e565b80601f016020809104026020016040519081016040528092919081815260200182805461103390613a5e565b80156110805780601f1061105557610100808354040283529160200191611080565b820191906000526020600020905b81548152906001019060200180831161106357829003601f168201915b5050505050908060060154905088565b6000606060007f0000000000000000000000000000000000000000000000000000000000000000600654426110c5919061395f565b1190506000806001541190506000805b6001548110156112f9576003808111156110f2576110f1613b08565b5b6003600083815260200190815260200160002060030160019054906101000a900460ff16600381111561112857611127613b08565b5b1415611133576112e6565b6000600381111561114757611146613b08565b5b6003600083815260200190815260200160002060030160019054906101000a900460ff16600381111561117d5761117c613b08565b5b14801561119f5750600360008281526020019081526020016000206001015442115b156111ad57600191506112f9565b600160038111156111c1576111c0613b08565b5b6003600083815260200190815260200160002060030160019054906101000a900460ff1660038111156111f7576111f6613b08565b5b1480156112195750600360008281526020019081526020016000206002015442115b1561122757600191506112f9565b6002600381111561123b5761123a613b08565b5b6003600083815260200190815260200160002060030160019054906101000a900460ff16600381111561127157611270613b08565b5b1480156112d75750620151806003600083815260200190815260200160002060030160009054906101000a900460ff1660ff166112ae9190613922565b62ffffff1660036000838152602001908152602001600020600201546112d491906138cc565b42115b156112e557600191506112f9565b5b80806112f190613a90565b9150506110d5565b508280156113045750815b801561130d5750805b94505050509250929050565b611321612441565b73ffffffffffffffffffffffffffffffffffffffff1661133f61158b565b73ffffffffffffffffffffffffffffffffffffffff1614611395576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161138c90613648565b60405180910390fd5b61139f6000612449565b565b600560205281600052604060002081815481106113bd57600080fd5b90600052602060002001600091509150505481565b3373ffffffffffffffffffffffffffffffffffffffff166003600085815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611476576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161146d90613568565b60405180910390fd5b600060046000858152602001908152602001600020838154811061149d5761149c613b66565b5b906000526020600020906006020160000154116114ef576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114e6906135a8565b60405180910390fd5b60046000848152602001908152602001600020828154811061151457611513613b66565b5b9060005260206000209060060201600101819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6115bc612441565b73ffffffffffffffffffffffffffffffffffffffff166115da61158b565b73ffffffffffffffffffffffffffffffffffffffff1614611630576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161162790613648565b60405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016116ca9190613336565b60206040518083038186803b1580156116e257600080fd5b505afa1580156116f6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061171a91906129a5565b6040518363ffffffff1660e01b8152600401611737929190613351565b602060405180830381600087803b15801561175157600080fd5b505af1158015611765573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061178991906128fe565b6117c8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117bf90613608565b60405180910390fd5b565b6117d2612441565b73ffffffffffffffffffffffffffffffffffffffff166117f061158b565b73ffffffffffffffffffffffffffffffffffffffff1614611846576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161183d90613648565b60405180910390fd5b6001600060146101000a81548160ff021916908315150217905550565b6060600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054806020026020016040519081016040528092919081815260200182805480156118ee57602002820191906000526020600020905b8154815260200190600101908083116118da575b50505050509050919050565b7f000000000000000000000000000000000000000000000000000000000000000081565b3373ffffffffffffffffffffffffffffffffffffffff16600360008a815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146119c2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119b990613628565b60405180910390fd5b610e1042600360008b8152602001908152602001600020600101546119e7919061395f565b11611a27576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a1e90613688565b60405180910390fd5b60006003811115611a3b57611a3a613b08565b5b600360008a815260200190815260200160002060030160019054906101000a900460ff166003811115611a7157611a70613b08565b5b14611ab1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611aa890613588565b60405180910390fd5b611abf87878787854261227c565b86600360008a81526020019081526020016000206001018190555085600360008a8152602001908152602001600020600201819055508484600360008b81526020019081526020016000206004019190611b1a9291906126d9565b508282600360008b81526020019081526020016000206005019190611b409291906126d9565b5080600360008a815260200190815260200160002060030160006101000a81548160ff021916908360ff160217905550877f2406bb451705c8be83194cf2d0a2dd0e3647d9ea2308183dbbd3b66ffe271e6b868686868c8d88604051611bac97969594939291906134a3565b60405180910390a25050505050505050565b611bc6612441565b73ffffffffffffffffffffffffffffffffffffffff16611be461158b565b73ffffffffffffffffffffffffffffffffffffffff1614611c3a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c3190613648565b60405180910390fd5b60008060146101000a81548160ff021916908315150217905550565b606060046000838152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b82821015611f5d57838290600052602060002090600602016040518060c00160405290816000820154815260200160018201805480602002602001604051908101604052809291908181526020018280548015611d3d57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611cf3575b50505050508152602001600282018054611d5690613a5e565b80601f0160208091040260200160405190810160405280929190818152602001828054611d8290613a5e565b8015611dcf5780601f10611da457610100808354040283529160200191611dcf565b820191906000526020600020905b815481529060010190602001808311611db257829003601f168201915b50505050508152602001600382018054611de890613a5e565b80601f0160208091040260200160405190810160405280929190818152602001828054611e1490613a5e565b8015611e615780601f10611e3657610100808354040283529160200191611e61565b820191906000526020600020905b815481529060010190602001808311611e4457829003601f168201915b5050505050815260200160048201805480602002602001604051908101604052809291908181526020018280548015611eef57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611ea5575b505050505081526020016005820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152505081526020019060010190611c8b565b505050509050919050565b611f70612441565b73ffffffffffffffffffffffffffffffffffffffff16611f8e61158b565b73ffffffffffffffffffffffffffffffffffffffff1614611fe4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611fdb90613648565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415612054576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161204b90613528565b60405180910390fd5b61205d81612449565b50565b6004602052816000526040600020818154811061207c57600080fd5b9060005260206000209060060201600091509150508060000154908060020180546120a690613a5e565b80601f01602080910402602001604051908101604052809291908181526020018280546120d290613a5e565b801561211f5780601f106120f45761010080835404028352916020019161211f565b820191906000526020600020905b81548152906001019060200180831161210257829003601f168201915b50505050509080600301805461213490613a5e565b80601f016020809104026020016040519081016040528092919081815260200182805461216090613a5e565b80156121ad5780601f10612182576101008083540402835291602001916121ad565b820191906000526020600020905b81548152906001019060200180831161219057829003601f168201915b5050505050908060050160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905084565b817f0e84e0666f369b5893de172e41bbc8d6e160ab211eb9765214e1939732144f066003600085815260200190815260200160002060030160019054906101000a900460ff168360405161223292919061347a565b60405180910390a2806003600084815260200190815260200160002060030160016101000a81548160ff0219169083600381111561227357612272613b08565b5b02179055505050565b62015180868661228c919061395f565b116122cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016122c390613668565b60405180910390fd5b6201518081876122dc919061395f565b101561231d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612314906136e8565b60405180910390fd5b60018260ff161015612364576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161235b906136a8565b60405180910390fd5b601f8260ff1611156123ab576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016123a290613508565b60405180910390fd5b60088484905010156123f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016123e990613708565b60405180910390fd5b6064848490501115612439576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612430906135e8565b60405180910390fd5b505050505050565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b604051806101000160405280600073ffffffffffffffffffffffffffffffffffffffff1681526020016000815260200160008152602001600060ff1681526020016000600381111561256257612561613b08565b5b81526020016060815260200160608152602001600081525090565b6040518060c001604052806000815260200160608152602001606081526020016060815260200160608152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b828054828255906000526020600020908101928215612642579160200282015b828111156126415782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906125e9565b5b50905061264f919061275f565b5090565b82805461265f90613a5e565b90600052602060002090601f01602090048101928261268157600085556126c8565b82601f1061269a57805160ff19168380011785556126c8565b828001600101855582156126c8579182015b828111156126c75782518255916020019190600101906126ac565b5b5090506126d5919061275f565b5090565b8280546126e590613a5e565b90600052602060002090601f016020900481019282612707576000855561274e565b82601f1061272057803560ff191683800117855561274e565b8280016001018555821561274e579182015b8281111561274d578235825591602001919060010190612732565b5b50905061275b919061275f565b5090565b5b80821115612778576000816000905550600101612760565b5090565b60008135905061278b816140ef565b92915050565b6000815190506127a081614106565b92915050565b60008083601f8401126127bc576127bb613b9a565b5b8235905067ffffffffffffffff8111156127d9576127d8613b95565b5b6020830191508360018202830111156127f5576127f4613b9f565b5b9250929050565b60008083601f84011261281257612811613b9a565b5b8235905067ffffffffffffffff81111561282f5761282e613b95565b5b60208301915083600182028301111561284b5761284a613b9f565b5b9250929050565b6000813590506128618161411d565b92915050565b6000815190506128768161411d565b92915050565b60008135905061288b81614134565b92915050565b6000602082840312156128a7576128a6613ba9565b5b60006128b58482850161277c565b91505092915050565b600080604083850312156128d5576128d4613ba9565b5b60006128e38582860161277c565b92505060206128f485828601612852565b9150509250929050565b60006020828403121561291457612913613ba9565b5b600061292284828501612791565b91505092915050565b6000806020838503121561294257612941613ba9565b5b600083013567ffffffffffffffff8111156129605761295f613ba4565b5b61296c858286016127a6565b92509250509250929050565b60006020828403121561298e5761298d613ba9565b5b600061299c84828501612852565b91505092915050565b6000602082840312156129bb576129ba613ba9565b5b60006129c984828501612867565b91505092915050565b600080604083850312156129e9576129e8613ba9565b5b60006129f785828601612852565b9250506020612a0885828601612852565b9150509250929050565b600080600060608486031215612a2b57612a2a613ba9565b5b6000612a3986828701612852565b9350506020612a4a86828701612852565b9250506040612a5b8682870161277c565b9150509250925092565b60008060008060008060808789031215612a8257612a81613ba9565b5b6000612a9089828a01612852565b9650506020612aa189828a01612852565b955050604087013567ffffffffffffffff811115612ac257612ac1613ba4565b5b612ace89828a016127fc565b9450945050606087013567ffffffffffffffff811115612af157612af0613ba4565b5b612afd89828a016127fc565b92509250509295509295509295565b600080600080600080600060a0888a031215612b2b57612b2a613ba9565b5b6000612b398a828b01612852565b9750506020612b4a8a828b01612852565b965050604088013567ffffffffffffffff811115612b6b57612b6a613ba4565b5b612b778a828b016127fc565b9550955050606088013567ffffffffffffffff811115612b9a57612b99613ba4565b5b612ba68a828b016127fc565b93509350506080612bb98a828b0161287c565b91505092959891949750929550565b60008060008060008060008060c0898b031215612be857612be7613ba9565b5b6000612bf68b828c01612852565b9850506020612c078b828c01612852565b9750506040612c188b828c01612852565b965050606089013567ffffffffffffffff811115612c3957612c38613ba4565b5b612c458b828c016127fc565b9550955050608089013567ffffffffffffffff811115612c6857612c67613ba4565b5b612c748b828c016127fc565b935093505060a0612c878b828c0161287c565b9150509295985092959890939650565b6000612ca38383612cdb565b60208301905092915050565b6000612cbb838361325c565b905092915050565b6000612ccf83836132fa565b60208301905092915050565b612ce481613993565b82525050565b612cf381613993565b82525050565b6000612d0482613808565b612d0e8185613866565b9350612d19836137d8565b8060005b83811015612d4a578151612d318882612c97565b9750612d3c8361383f565b925050600181019050612d1d565b5085935050505092915050565b6000612d6282613813565b612d6c8185613877565b935083602082028501612d7e856137e8565b8060005b85811015612dba5784840389528151612d9b8582612caf565b9450612da68361384c565b925060208a01995050600181019050612d82565b50829750879550505050505092915050565b6000612dd78261381e565b612de18185613888565b9350612dec836137f8565b8060005b83811015612e1d578151612e048882612cc3565b9750612e0f83613859565b925050600181019050612df0565b5085935050505092915050565b612e33816139a5565b82525050565b6000612e4482613829565b612e4e8185613899565b9350612e5e818560208601613a2b565b612e6781613bae565b840191505092915050565b612e7b81613a0a565b82525050565b612e8a81613a0a565b82525050565b6000612e9c83856138bb565b9350612ea9838584613a1c565b612eb283613bae565b840190509392505050565b6000612ec882613834565b612ed281856138aa565b9350612ee2818560208601613a2b565b612eeb81613bae565b840191505092915050565b6000612f0182613834565b612f0b81856138bb565b9350612f1b818560208601613a2b565b612f2481613bae565b840191505092915050565b6000612f3c602e836138bb565b9150612f4782613bbf565b604082019050919050565b6000612f5f6026836138bb565b9150612f6a82613c0e565b604082019050919050565b6000612f82602a836138bb565b9150612f8d82613c5d565b604082019050919050565b6000612fa5602a836138bb565b9150612fb082613cac565b604082019050919050565b6000612fc86034836138bb565b9150612fd382613cfb565b604082019050919050565b6000612feb600f836138bb565b9150612ff682613d4a565b602082019050919050565b600061300e6022836138bb565b915061301982613d73565b604082019050919050565b6000613031602d836138bb565b915061303c82613dc2565b604082019050919050565b60006130546012836138bb565b915061305f82613e11565b602082019050919050565b60006130776032836138bb565b915061308282613e3a565b604082019050919050565b600061309a6020836138bb565b91506130a582613e89565b602082019050919050565b60006130bd6025836138bb565b91506130c882613eb2565b604082019050919050565b60006130e0603e836138bb565b91506130eb82613f01565b604082019050919050565b60006131036025836138bb565b915061310e82613f50565b604082019050919050565b60006131266035836138bb565b915061313182613f9f565b604082019050919050565b60006131496039836138bb565b915061315482613fee565b604082019050919050565b600061316c602c836138bb565b91506131778261403d565b604082019050919050565b600061318f6028836138bb565b915061319a8261408c565b604082019050919050565b6000610100830160008301516131be6000860182612cdb565b5060208301516131d160208601826132fa565b5060408301516131e460408601826132fa565b5060608301516131f76060860182613318565b50608083015161320a6080860182612e72565b5060a083015184820360a08601526132228282612ebd565b91505060c083015184820360c086015261323c8282612ebd565b91505060e083015161325160e08601826132fa565b508091505092915050565b600060c08301600083015161327460008601826132fa565b506020830151848203602086015261328c8282612cf9565b915050604083015184820360408601526132a68282612ebd565b915050606083015184820360608601526132c08282612ebd565b915050608083015184820360808601526132da8282612cf9565b91505060a08301516132ef60a0860182612cdb565b508091505092915050565b613303816139f3565b82525050565b613312816139f3565b82525050565b613321816139fd565b82525050565b613330816139fd565b82525050565b600060208201905061334b6000830184612cea565b92915050565b60006040820190506133666000830185612cea565b6133736020830184613309565b9392505050565b600061010082019050613390600083018b612cea565b61339d602083018a613309565b6133aa6040830189613309565b6133b76060830188613327565b6133c46080830187612e81565b81810360a08301526133d68186612ef6565b905081810360c08301526133ea8185612ef6565b90506133f960e0830184613309565b9998505050505050505050565b600060208201905081810360008301526134208184612d57565b905092915050565b600060208201905081810360008301526134428184612dcc565b905092915050565b600060408201905061345f6000830185612e2a565b81810360208301526134718184612e39565b90509392505050565b600060408201905061348f6000830185612e81565b61349c6020830184612e81565b9392505050565b600060a08201905081810360008301526134be81898b612e90565b905081810360208301526134d3818789612e90565b90506134e26040830186613309565b6134ef6060830185613309565b6134fc6080830184613327565b98975050505050505050565b6000602082019050818103600083015261352181612f2f565b9050919050565b6000602082019050818103600083015261354181612f52565b9050919050565b6000602082019050818103600083015261356181612f75565b9050919050565b6000602082019050818103600083015261358181612f98565b9050919050565b600060208201905081810360008301526135a181612fbb565b9050919050565b600060208201905081810360008301526135c181612fde565b9050919050565b600060208201905081810360008301526135e181613001565b9050919050565b6000602082019050818103600083015261360181613024565b9050919050565b6000602082019050818103600083015261362181613047565b9050919050565b600060208201905081810360008301526136418161306a565b9050919050565b600060208201905081810360008301526136618161308d565b9050919050565b60006020820190508181036000830152613681816130b0565b9050919050565b600060208201905081810360008301526136a1816130d3565b9050919050565b600060208201905081810360008301526136c1816130f6565b9050919050565b600060208201905081810360008301526136e181613119565b9050919050565b600060208201905081810360008301526137018161313c565b9050919050565b600060208201905081810360008301526137218161315f565b9050919050565b6000602082019050818103600083015261374181613182565b9050919050565b6000602082019050818103600083015261376281846131a5565b905092915050565b600060208201905061377f6000830184613309565b92915050565b600060808201905061379a6000830187613309565b81810360208301526137ac8186612ef6565b905081810360408301526137c08185612ef6565b90506137cf6060830184612cea565b95945050505050565b6000819050602082019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b60006138d7826139f3565b91506138e2836139f3565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561391757613916613ad9565b5b828201905092915050565b600061392d826139e4565b9150613938836139e4565b92508162ffffff048311821515161561395457613953613ad9565b5b828202905092915050565b600061396a826139f3565b9150613975836139f3565b92508282101561398857613987613ad9565b5b828203905092915050565b600061399e826139c4565b9050919050565b60008115159050919050565b60008190506139bf826140db565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062ffffff82169050919050565b6000819050919050565b600060ff82169050919050565b6000613a15826139b1565b9050919050565b82818337600083830152505050565b60005b83811015613a49578082015181840152602081019050613a2e565b83811115613a58576000848401525b50505050565b60006002820490506001821680613a7657607f821691505b60208210811415613a8a57613a89613b37565b5b50919050565b6000613a9b826139f3565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415613ace57613acd613ad9565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4a756467696e6720706572696f64206d757374206e6f74206265206c6f6e676560008201527f72207468616e2033312064617973000000000000000000000000000000000000602082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4f6e6c79206861636b6174686f6e2773206f7267616e697a65722063616e206160008201527f64642061207072697a6500000000000000000000000000000000000000000000602082015250565b7f4f6e6c79206861636b6174686f6e2773206f7267616e697a65722063616e206160008201527f64642061206a7564676500000000000000000000000000000000000000000000602082015250565b7f4861636b6174686f6e206d657461646174612063616e2774206368616e67652060008201527f6166746572206974206861732073746172746564000000000000000000000000602082015250565b7f5072697a65206e6f7420666f756e640000000000000000000000000000000000600082015250565b7f4d696e696d756d207072697a652072657761726420697320302e30303031204560008201527f5448000000000000000000000000000000000000000000000000000000000000602082015250565b7f4861636b6174686f6e206e616d65206d757374206265206174206d6f7374203160008201527f3030206368617261637465727300000000000000000000000000000000000000602082015250565b7f556e61626c6520746f207472616e736665720000000000000000000000000000600082015250565b7f4f6e6c79206861636b6174686f6e2773206f7267616e697a65722063616e206360008201527f68616e676520697473206d657461646174610000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f4861636b6174686f6e206d757374206265206174206c6561737420312064617960008201527f206c6f6e67000000000000000000000000000000000000000000000000000000602082015250565b7f4861636b6174686f6e206d657461646174612063616e206265206368616e676560008201527f6420757020756e74696c203120686f7572206265666f72652073746172740000602082015250565b7f4a756467696e6720706572696f64206d757374206265206174206c656173742060008201527f3120646179000000000000000000000000000000000000000000000000000000602082015250565b7f43616e2774206164642061207072697a6520746f20616e206f6e676f696e672060008201527f6f722066696e6973686564206861636b6174686f6e0000000000000000000000602082015250565b7f4861636b6174686f6e2073746172742064617465206d7573742062652061742060008201527f6c6561737420312064617920696e207468652066757475726500000000000000602082015250565b7f4861636b6174686f6e206e616d65206d757374206265206174206c656173742060008201527f3820636861726163746572730000000000000000000000000000000000000000602082015250565b7f5072697a65206e616d65206d757374206265206174206c65617374203820636860008201527f6172616374657273000000000000000000000000000000000000000000000000602082015250565b600481106140ec576140eb613b08565b5b50565b6140f881613993565b811461410357600080fd5b50565b61410f816139a5565b811461411a57600080fd5b50565b614126816139f3565b811461413157600080fd5b50565b61413d816139fd565b811461414857600080fd5b5056fea264697066735822122032ff9a186863f6825ae76ec7e42e061f8831e8af9f16c1b583374b2aee75961f64736f6c63430008070033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "constructor": {
        "notice": "Deploy with the address of the LINK token@param _link The address of the LINK token"
      },
      "withdrawLink()": {
        "notice": "Allows the owner to withdraw any LINK balance on the contract"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 102,
        "contract": "contracts/Hacka.sol:Hacka",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 246,
        "contract": "contracts/Hacka.sol:Hacka",
        "label": "s_demoMode",
        "offset": 20,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 249,
        "contract": "contracts/Hacka.sol:Hacka",
        "label": "s_counter",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 252,
        "contract": "contracts/Hacka.sol:Hacka",
        "label": "LinkToken",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(LinkTokenInterface)94"
      },
      {
        "astId": 305,
        "contract": "contracts/Hacka.sol:Hacka",
        "label": "s_hackathons",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_uint256,t_struct(HackathonMetadata)275_storage)"
      },
      {
        "astId": 311,
        "contract": "contracts/Hacka.sol:Hacka",
        "label": "s_prizes",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_uint256,t_array(t_struct(HackathonPrize)300_storage)dyn_storage)"
      },
      {
        "astId": 316,
        "contract": "contracts/Hacka.sol:Hacka",
        "label": "s_organizerHackathons",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)"
      },
      {
        "astId": 374,
        "contract": "contracts/Hacka.sol:Hacka",
        "label": "s_lastTimeStamp",
        "offset": 0,
        "slot": "6",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_array(t_struct(HackathonPrize)300_storage)dyn_storage": {
        "base": "t_struct(HackathonPrize)300_storage",
        "encoding": "dynamic_array",
        "label": "struct Hacka.HackathonPrize[]",
        "numberOfBytes": "32"
      },
      "t_array(t_uint256)dyn_storage": {
        "base": "t_uint256",
        "encoding": "dynamic_array",
        "label": "uint256[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(LinkTokenInterface)94": {
        "encoding": "inplace",
        "label": "contract LinkTokenInterface",
        "numberOfBytes": "20"
      },
      "t_enum(HackathonStage)257": {
        "encoding": "inplace",
        "label": "enum Hacka.HackathonStage",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256[])",
        "numberOfBytes": "32",
        "value": "t_array(t_uint256)dyn_storage"
      },
      "t_mapping(t_uint256,t_array(t_struct(HackathonPrize)300_storage)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct Hacka.HackathonPrize[])",
        "numberOfBytes": "32",
        "value": "t_array(t_struct(HackathonPrize)300_storage)dyn_storage"
      },
      "t_mapping(t_uint256,t_struct(HackathonMetadata)275_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct Hacka.HackathonMetadata)",
        "numberOfBytes": "32",
        "value": "t_struct(HackathonMetadata)275_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(HackathonMetadata)275_storage": {
        "encoding": "inplace",
        "label": "struct Hacka.HackathonMetadata",
        "members": [
          {
            "astId": 259,
            "contract": "contracts/Hacka.sol:Hacka",
            "label": "organizer",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 261,
            "contract": "contracts/Hacka.sol:Hacka",
            "label": "timestampStart",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 263,
            "contract": "contracts/Hacka.sol:Hacka",
            "label": "timestampEnd",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 265,
            "contract": "contracts/Hacka.sol:Hacka",
            "label": "judgingPeriod",
            "offset": 0,
            "slot": "3",
            "type": "t_uint8"
          },
          {
            "astId": 268,
            "contract": "contracts/Hacka.sol:Hacka",
            "label": "stage",
            "offset": 1,
            "slot": "3",
            "type": "t_enum(HackathonStage)257"
          },
          {
            "astId": 270,
            "contract": "contracts/Hacka.sol:Hacka",
            "label": "name",
            "offset": 0,
            "slot": "4",
            "type": "t_string_storage"
          },
          {
            "astId": 272,
            "contract": "contracts/Hacka.sol:Hacka",
            "label": "url",
            "offset": 0,
            "slot": "5",
            "type": "t_string_storage"
          },
          {
            "astId": 274,
            "contract": "contracts/Hacka.sol:Hacka",
            "label": "balance",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "224"
      },
      "t_struct(HackathonPrize)300_storage": {
        "encoding": "inplace",
        "label": "struct Hacka.HackathonPrize",
        "members": [
          {
            "astId": 287,
            "contract": "contracts/Hacka.sol:Hacka",
            "label": "reward",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 290,
            "contract": "contracts/Hacka.sol:Hacka",
            "label": "judges",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_address)dyn_storage"
          },
          {
            "astId": 292,
            "contract": "contracts/Hacka.sol:Hacka",
            "label": "name",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          },
          {
            "astId": 294,
            "contract": "contracts/Hacka.sol:Hacka",
            "label": "description",
            "offset": 0,
            "slot": "3",
            "type": "t_string_storage"
          },
          {
            "astId": 297,
            "contract": "contracts/Hacka.sol:Hacka",
            "label": "submissions",
            "offset": 0,
            "slot": "4",
            "type": "t_array(t_address)dyn_storage"
          },
          {
            "astId": 299,
            "contract": "contracts/Hacka.sol:Hacka",
            "label": "winner",
            "offset": 0,
            "slot": "5",
            "type": "t_address"
          }
        ],
        "numberOfBytes": "192"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  }
}