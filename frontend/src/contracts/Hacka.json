{
  "address": "0x7aD9974F00c78f0C3f139419904bbF661253cdcA",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "hackathonId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "url",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestampStart",
          "type": "uint256"
        }
      ],
      "name": "HackathonChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "hackathonId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "organizer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "url",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestampStart",
          "type": "uint256"
        }
      ],
      "name": "HackathonCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_hackathonId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_prizeId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_judge",
          "type": "address"
        }
      ],
      "name": "addJudge",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_hackathonId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        }
      ],
      "name": "addPrize",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "prizeId",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_timestampStart",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_timestampEnd",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_url",
          "type": "string"
        },
        {
          "internalType": "uint8",
          "name": "_judgingPeriod",
          "type": "uint8"
        }
      ],
      "name": "createHackathon",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "hackathonId",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_hackathonId",
          "type": "uint256"
        }
      ],
      "name": "getHackathonMetadata",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "organizer",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "timestampStart",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "timestampEnd",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "judgingPeriod",
              "type": "uint8"
            },
            {
              "internalType": "enum Hacka.HackathonStage",
              "name": "stage",
              "type": "uint8"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "url",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "balance",
              "type": "uint256"
            }
          ],
          "internalType": "struct Hacka.HackathonMetadata",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_hackathonId",
          "type": "uint256"
        }
      ],
      "name": "getHackathonPrizes",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "reward",
              "type": "uint256"
            },
            {
              "internalType": "address[]",
              "name": "judges",
              "type": "address[]"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "address[]",
              "name": "submissions",
              "type": "address[]"
            },
            {
              "internalType": "address",
              "name": "winner",
              "type": "address"
            }
          ],
          "internalType": "struct Hacka.HackathonPrize[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_organizer",
          "type": "address"
        }
      ],
      "name": "getHackathonsByOrganizer",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "s_hackathons",
      "outputs": [
        {
          "internalType": "address",
          "name": "organizer",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "timestampStart",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "timestampEnd",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "judgingPeriod",
          "type": "uint8"
        },
        {
          "internalType": "enum Hacka.HackathonStage",
          "name": "stage",
          "type": "uint8"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "url",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "s_organizerHackathons",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "s_prizes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "reward",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "winner",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_hackathonId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_timestampStart",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_timestampEnd",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_url",
          "type": "string"
        },
        {
          "internalType": "uint8",
          "name": "_judgingPeriod",
          "type": "uint8"
        }
      ],
      "name": "updateHackathonMetadata",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawLink",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x697fc1a79afa3af099ac95271fd0d496d8f343039018188939d2a6f871e4d493",
  "receipt": {
    "to": null,
    "from": "0x6E51d5c51872f97caab78E8e3cA9a23C4945474A",
    "contractAddress": "0xe23a7AB2D3308723FCb5e7370107E09cC237d734",
    "transactionIndex": 2,
    "gasUsed": "3163648",
    "logsBloom": "0x
    "blockHash": "0x07508f0bbca0443c64391c0dae4939c319bd3e09448004991cb2dc444e6ce873",
    "transactionHash": "0x697fc1a79afa3af099ac95271fd0d496d8f343039018188939d2a6f871e4d493",
    "logs": [
      {
        "transactionIndex": 2,
        "blockNumber": 28465205,
        "transactionHash": "0x697fc1a79afa3af099ac95271fd0d496d8f343039018188939d2a6f871e4d493",
        "address": "0xe23a7AB2D3308723FCb5e7370107E09cC237d734",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000006e51d5c51872f97caab78e8e3ca9a23c4945474a"
        ],
        "data": "0x",
        "logIndex": 5,
        "blockHash": "0x07508f0bbca0443c64391c0dae4939c319bd3e09448004991cb2dc444e6ce873"
      }
    ],
    "blockNumber": 28465205,
    "cumulativeGasUsed": "3394566",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "79f34571ddddaa0608318d817d5fad61",
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"hackathonId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"url\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestampStart\",\"type\":\"uint256\"}],\"name\":\"HackathonChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"hackathonId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"organizer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"url\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestampStart\",\"type\":\"uint256\"}],\"name\":\"HackathonCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_hackathonId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_prizeId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_judge\",\"type\":\"address\"}],\"name\":\"addJudge\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_hackathonId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_description\",\"type\":\"string\"}],\"name\":\"addPrize\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"prizeId\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_timestampStart\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_timestampEnd\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_url\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"_judgingPeriod\",\"type\":\"uint8\"}],\"name\":\"createHackathon\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"hackathonId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_hackathonId\",\"type\":\"uint256\"}],\"name\":\"getHackathonMetadata\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"organizer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestampStart\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestampEnd\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"judgingPeriod\",\"type\":\"uint8\"},{\"internalType\":\"enum Hacka.HackathonStage\",\"name\":\"stage\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"url\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"internalType\":\"struct Hacka.HackathonMetadata\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_hackathonId\",\"type\":\"uint256\"}],\"name\":\"getHackathonPrizes\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"judges\",\"type\":\"address[]\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"address[]\",\"name\":\"submissions\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"}],\"internalType\":\"struct Hacka.HackathonPrize[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_organizer\",\"type\":\"address\"}],\"name\":\"getHackathonsByOrganizer\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"s_hackathons\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"organizer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestampStart\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestampEnd\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"judgingPeriod\",\"type\":\"uint8\"},{\"internalType\":\"enum Hacka.HackathonStage\",\"name\":\"stage\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"url\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"s_organizerHackathons\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"s_prizes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_hackathonId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_timestampStart\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_timestampEnd\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_url\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"_judgingPeriod\",\"type\":\"uint8\"}],\"name\":\"updateHackathonMetadata\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawLink\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"Deploy with the address of the LINK token@param _link The address of the LINK token\"},\"withdrawLink()\":{\"notice\":\"Allows the owner to withdraw any LINK balance on the contract\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Hacka.sol\":\"Hacka\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface LinkTokenInterface {\\n\\n  function allowance(\\n    address owner,\\n    address spender\\n  )\\n    external\\n    view\\n    returns (\\n      uint256 remaining\\n    );\\n\\n  function approve(\\n    address spender,\\n    uint256 value\\n  )\\n    external\\n    returns (\\n      bool success\\n    );\\n\\n  function balanceOf(\\n    address owner\\n  )\\n    external\\n    view\\n    returns (\\n      uint256 balance\\n    );\\n\\n  function decimals()\\n    external\\n    view\\n    returns (\\n      uint8 decimalPlaces\\n    );\\n\\n  function decreaseApproval(\\n    address spender,\\n    uint256 addedValue\\n  )\\n    external\\n    returns (\\n      bool success\\n    );\\n\\n  function increaseApproval(\\n    address spender,\\n    uint256 subtractedValue\\n  ) external;\\n\\n  function name()\\n    external\\n    view\\n    returns (\\n      string memory tokenName\\n    );\\n\\n  function symbol()\\n    external\\n    view\\n    returns (\\n      string memory tokenSymbol\\n    );\\n\\n  function totalSupply()\\n    external\\n    view\\n    returns (\\n      uint256 totalTokensIssued\\n    );\\n\\n  function transfer(\\n    address to,\\n    uint256 value\\n  )\\n    external\\n    returns (\\n      bool success\\n    );\\n\\n  function transferAndCall(\\n    address to,\\n    uint256 value,\\n    bytes calldata data\\n  )\\n    external\\n    returns (\\n      bool success\\n    );\\n\\n  function transferFrom(\\n    address from,\\n    address to,\\n    uint256 value\\n  )\\n    external\\n    returns (\\n      bool success\\n    );\\n\\n}\\n\",\"keccak256\":\"0x50528c237386c55ff122d047f91b32be7abe24e9dfdc609de21cd605aae83b9a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _setOwner(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _setOwner(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _setOwner(newOwner);\\n    }\\n\\n    function _setOwner(address newOwner) private {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x6bb804a310218875e89d12c053e94a13a4607cdf7cc2052f3e52bd32a0dc50a1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x90565a39ae45c80f0468dc96c7b20d0afc3055f344c8203a0c9258239f350b9f\",\"license\":\"MIT\"},\"contracts/Hacka.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.7;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol\\\";\\n\\ncontract Hacka is Ownable {\\n    uint private s_counter = 0;\\n    LinkTokenInterface internal LinkToken;\\n\\n    enum HackathonStage { NEW, STARTED, JUDGING, FINALIZED }\\n\\n    struct HackathonMetadata {\\n        address organizer;\\n        uint timestampStart;\\n        uint timestampEnd;\\n        uint8 judgingPeriod;\\n        HackathonStage stage;\\n        string name;\\n        string url;\\n        uint balance;\\n        // TODO cid for description\\n    }\\n\\n    struct HackathonPrize {\\n        uint reward;\\n        address[] judges;\\n        string name;\\n        string description;\\n        address[] submissions;\\n        address winner;\\n    }\\n\\n    mapping(uint => HackathonMetadata) public s_hackathons;\\n    mapping(uint => HackathonPrize[]) public s_prizes;\\n    mapping(address => uint[]) public s_organizerHackathons;\\n\\n    event HackathonCreated(uint indexed hackathonId, address indexed organizer, string name, string url, uint timestampStart);\\n    event HackathonChanged(uint indexed hackathonId, string name, string url, uint timestampStart);\\n\\n    /**\\n     * @notice Deploy with the address of the LINK token\\n     * @notice @param _link The address of the LINK token\\n     */\\n    constructor(/*address _link*/) {\\n        // LinkToken = LinkTokenInterface(_link);\\n        // TODO should not be hardcoded\\n        // TODO add hackathon ERC20 as well?\\n        LinkToken = LinkTokenInterface(0xa36085F69e2889c224210F603D836748e7dC0088);\\n    }\\n\\n    function createHackathon(\\n        uint _timestampStart,\\n        uint _timestampEnd,\\n        string calldata _name,\\n        string calldata _url,\\n        uint8 _judgingPeriod\\n    ) external returns (uint hackathonId) {\\n        validateMetadata(\\n            _timestampStart,\\n            _timestampEnd,\\n            _name,\\n            _judgingPeriod,\\n            block.timestamp\\n        );\\n\\n        hackathonId = s_counter;\\n        s_counter = s_counter + 1;\\n\\n        s_hackathons[hackathonId].organizer = msg.sender;\\n        s_hackathons[hackathonId].timestampStart = _timestampStart;\\n        s_hackathons[hackathonId].timestampEnd = _timestampEnd;\\n        s_hackathons[hackathonId].judgingPeriod = _judgingPeriod;\\n        s_hackathons[hackathonId].stage = HackathonStage.NEW;\\n        s_hackathons[hackathonId].name = _name;\\n        s_hackathons[hackathonId].url = _url;\\n\\n        s_organizerHackathons[msg.sender].push(hackathonId);\\n\\n        emit HackathonCreated(hackathonId, msg.sender, _name, _url, _timestampStart);\\n\\n        return hackathonId;\\n    }\\n\\n    function updateHackathonMetadata(\\n        uint _hackathonId,\\n        uint _timestampStart,\\n        uint _timestampEnd,\\n        string calldata _name,\\n        string calldata _url,\\n        uint8 _judgingPeriod\\n    ) external {\\n        require(s_hackathons[_hackathonId].organizer == msg.sender, \\\"Only hackathon's organizer can change its metadata\\\");\\n        require(s_hackathons[_hackathonId].timestampStart - block.timestamp > 1 hours, \\\"Hackathon metadata can be changed up until 1 hour before start\\\");\\n        require(s_hackathons[_hackathonId].stage == HackathonStage.NEW, \\\"Hackathon metadata can't change after it has started\\\");\\n        validateMetadata(\\n            _timestampStart,\\n            _timestampEnd,\\n            _name,\\n            _judgingPeriod,\\n            block.timestamp\\n        );\\n\\n        s_hackathons[_hackathonId].timestampStart = _timestampStart;\\n        s_hackathons[_hackathonId].timestampEnd = _timestampEnd;\\n        s_hackathons[_hackathonId].name = _name;\\n        s_hackathons[_hackathonId].url = _url;\\n        s_hackathons[_hackathonId].judgingPeriod = _judgingPeriod;\\n\\n        emit HackathonChanged(_hackathonId, _name, _url, _timestampStart);\\n    }\\n\\n    // TODO method to transfer hackathon ownership to another address (change organizer)\\n\\n    function validateMetadata(\\n        uint _timestampStart,\\n        uint _timestampEnd,\\n        string calldata _name,\\n        uint8 _judgingPeriod,\\n        uint _currentTimestamp\\n    ) pure internal {\\n        require(_timestampEnd - _timestampStart > 1 days, \\\"Hackathon must be at least 1 day long\\\");\\n        require(_timestampStart - _currentTimestamp >= 1 days, \\\"Hackathon start date must be at least 1 day in the future\\\");\\n        require(_judgingPeriod >= 1, \\\"Judging period must be at least 1 day\\\");\\n        require(_judgingPeriod <= 31, \\\"Judging period must not be longer than 31 days\\\");\\n        require(bytes(_name).length >= 8, \\\"Hackathon name must be at least 8 characters\\\");\\n        require(bytes(_name).length <= 100, \\\"Hackathon name must be at most 100 characters\\\");\\n    }\\n\\n    // TODO should use LINK or our own \\\"Hackathon Token\\\" ERC20, for now just use ETH\\n    function addPrize(\\n        uint256 _amount,\\n        uint _hackathonId,\\n        string calldata _name,\\n        string calldata _description\\n    ) external payable returns (uint prizeId) {\\n        require(msg.value == _amount);\\n        require(s_hackathons[_hackathonId].stage == HackathonStage.NEW, \\\"Can't add a prize to an ongoing or finished hackathon\\\");\\n        require(s_hackathons[_hackathonId].organizer == msg.sender, \\\"Only hackathon's organizer can add a prize\\\");\\n        require(bytes(_name).length > 8, \\\"Prize name must be at least 8 characters\\\");\\n        require(msg.value > 1 ether, \\\"Minimum prize reward is 1 ETH\\\"); // TODO why so much????\\n\\n        s_hackathons[_hackathonId].balance += msg.value;\\n\\n        HackathonPrize memory prize;\\n        prize.reward = msg.value;\\n        prize.name = _name;\\n        prize.description = _description;\\n\\n        prizeId = s_prizes[_hackathonId].length;\\n        s_prizes[_hackathonId].push(prize);\\n\\n        // TODO emit event about prize being created\\n\\n        return prizeId;\\n    }\\n\\n    function addJudge(\\n        uint _hackathonId,\\n        uint _prizeId,\\n        address _judge\\n    ) external {\\n        require(s_hackathons[_hackathonId].organizer == msg.sender, \\\"Only hackathon's organizer can add a judge\\\");\\n        require(s_prizes[_hackathonId][_prizeId].reward > 0, \\\"Prize not found\\\");\\n\\n        s_prizes[_hackathonId][_prizeId].judges.push(_judge);\\n        // TODO emit event about judge being added\\n    }\\n\\n    function getHackathonsByOrganizer(\\n        address _organizer\\n    ) external view returns (uint[] memory) {\\n        return s_organizerHackathons[_organizer];\\n    }\\n\\n    function getHackathonMetadata(uint _hackathonId) external view returns (HackathonMetadata memory) {\\n        return s_hackathons[_hackathonId];\\n    }\\n\\n    function getHackathonPrizes(uint _hackathonId) external view returns (HackathonPrize[] memory) {\\n        return s_prizes[_hackathonId];\\n    }\\n\\n    /**\\n     * @notice Allows the owner to withdraw any LINK balance on the contract\\n     */\\n    function withdrawLink() public onlyOwner {\\n        require(LinkToken.transfer(msg.sender, LinkToken.balanceOf(address(this))), \\\"Unable to transfer\\\");\\n    }\\n}\\n\",\"keccak256\":\"0x021e6d9d83c3e27d1859ba5e360a4ccb1a4a7edf655a46ae9f61b0b5e7b168ca\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x6080604052600436106100dd5760003560e01c80638da5cb5b1161007f578063d738c38f11610059578063d738c38f146102cc578063dc499a02146102f5578063f2fde38b14610332578063fb39df8e1461035b576100dd565b80638da5cb5b1461024d5780638dc654a214610278578063c03846211461028f576100dd565b8063492c7c0d116100bb578063492c7c0d1461018c578063715018a6146101d05780637dc0cae4146101e757806389e1037c14610224576100dd565b8063042054f4146100e2578063337057791461011f5780634651efb51461014f575b600080fd5b3480156100ee57600080fd5b5061010960048036038101906101049190612112565b61039b565b6040516101169190612e25565b60405180910390f35b610139600480360381019061013491906121ff565b6105b9565b6040516101469190612e47565b60405180910390f35b34801561015b57600080fd5b50610176600480360381019061017191906122a6565b610986565b6040516101839190612e47565b60405180910390f35b34801561019857600080fd5b506101b360048036038101906101ae9190612112565b610bbc565b6040516101c7989796959493929190612acc565b60405180910390f35b3480156101dc57600080fd5b506101e5610d4e565b005b3480156101f357600080fd5b5061020e600480360381019061020991906120a5565b610dd6565b60405161021b9190612e47565b60405180910390f35b34801561023057600080fd5b5061024b600480360381019061024691906121ac565b610e07565b005b34801561025957600080fd5b50610262610fc0565b60405161026f9190612a88565b60405180910390f35b34801561028457600080fd5b5061028d610fe9565b005b34801561029b57600080fd5b506102b660048036038101906102b19190612078565b6111ff565b6040516102c39190612b7a565b60405180910390f35b3480156102d857600080fd5b506102f360048036038101906102ee9190612362565b611296565b005b34801561030157600080fd5b5061031c60048036038101906103179190612112565b611532565b6040516103299190612b58565b60405180910390f35b34801561033e57600080fd5b5061035960048036038101906103549190612078565b611844565b005b34801561036757600080fd5b50610382600480360381019061037d919061216c565b61193c565b6040516103929493929190612e62565b60405180910390f35b6103a3611d4a565b60036000838152602001908152602001600020604051806101000160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201548152602001600282015481526020016003820160009054906101000a900460ff1660ff1660ff1681526020016003820160019054906101000a900460ff16600381111561046e5761046d613134565b5b60038111156104805761047f613134565b5b8152602001600482018054610494906130d3565b80601f01602080910402602001604051908101604052809291908181526020018280546104c0906130d3565b801561050d5780601f106104e25761010080835404028352916020019161050d565b820191906000526020600020905b8154815290600101906020018083116104f057829003601f168201915b50505050508152602001600582018054610526906130d3565b80601f0160208091040260200160405190810160405280929190818152602001828054610552906130d3565b801561059f5780601f106105745761010080835404028352916020019161059f565b820191906000526020600020905b81548152906001019060200180831161058257829003601f168201915b505050505081526020016006820154815250509050919050565b60008634146105c757600080fd5b600060038111156105db576105da613134565b5b6003600088815260200190815260200160002060030160019054906101000a900460ff16600381111561061157610610613134565b5b14610651576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064890612d85565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166003600088815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146106f5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106ec90612c25565b60405180910390fd5b6008858590501161073b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161073290612e05565b60405180910390fd5b670de0b6b3a76400003411610785576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161077c90612dc5565b60405180910390fd5b346003600088815260200190815260200160002060060160008282546107ab9190612f8d565b925050819055506107ba611dba565b3481600001818152505085858080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050816040018190525083838080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050816060018190525060046000888152602001908152602001600020805490509150600460008881526020019081526020016000208190806001815401808255809150506001900390600052602060002090600602016000909190919091506000820151816000015560208201518160010190805190602001906108da929190611e06565b5060408201518160020190805190602001906108f7929190611e90565b506060820151816003019080519060200190610914929190611e90565b506080820151816004019080519060200190610931929190611e06565b5060a08201518160050160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050509695505050505050565b6000610996888888888642611ab9565b6001549050600180546109a99190612f8d565b600181905550336003600083815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550876003600083815260200190815260200160002060010181905550866003600083815260200190815260200160002060020181905550816003600083815260200190815260200160002060030160006101000a81548160ff021916908360ff16021790555060006003600083815260200190815260200160002060030160016101000a81548160ff02191690836003811115610aa357610aa2613134565b5b02179055508585600360008481526020019081526020016000206004019190610acd929190611f16565b508383600360008481526020019081526020016000206005019190610af3929190611f16565b50600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150506001900390600052602060002001600090919091909150553373ffffffffffffffffffffffffffffffffffffffff16817faf8a61bb02f5ea4ba781ab6746e3e7ab13b29d17e89e2233e4819934813ac167888888888e604051610ba9959493929190612b9c565b60405180910390a3979650505050505050565b60036020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020154908060030160009054906101000a900460ff16908060030160019054906101000a900460ff1690806004018054610c37906130d3565b80601f0160208091040260200160405190810160405280929190818152602001828054610c63906130d3565b8015610cb05780601f10610c8557610100808354040283529160200191610cb0565b820191906000526020600020905b815481529060010190602001808311610c9357829003601f168201915b505050505090806005018054610cc5906130d3565b80601f0160208091040260200160405190810160405280929190818152602001828054610cf1906130d3565b8015610d3e5780601f10610d1357610100808354040283529160200191610d3e565b820191906000526020600020905b815481529060010190602001808311610d2157829003601f168201915b5050505050908060060154905088565b610d56611c7e565b73ffffffffffffffffffffffffffffffffffffffff16610d74610fc0565b73ffffffffffffffffffffffffffffffffffffffff1614610dca576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dc190612d05565b60405180910390fd5b610dd46000611c86565b565b60056020528160005260406000208181548110610df257600080fd5b90600052602060002001600091509150505481565b3373ffffffffffffffffffffffffffffffffffffffff166003600085815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610eab576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ea290612c45565b60405180910390fd5b6000600460008581526020019081526020016000208381548110610ed257610ed1613192565b5b90600052602060002090600602016000015411610f24576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f1b90612c85565b60405180910390fd5b600460008481526020019081526020016000208281548110610f4957610f48613192565b5b9060005260206000209060060201600101819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610ff1611c7e565b73ffffffffffffffffffffffffffffffffffffffff1661100f610fc0565b73ffffffffffffffffffffffffffffffffffffffff1614611065576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161105c90612d05565b60405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016110ff9190612a88565b60206040518083038186803b15801561111757600080fd5b505afa15801561112b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061114f919061213f565b6040518363ffffffff1660e01b815260040161116c929190612aa3565b602060405180830381600087803b15801561118657600080fd5b505af115801561119a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111be91906120e5565b6111fd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111f490612cc5565b60405180910390fd5b565b6060600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080548060200260200160405190810160405280929190818152602001828054801561128a57602002820191906000526020600020905b815481526020019060010190808311611276575b50505050509050919050565b3373ffffffffffffffffffffffffffffffffffffffff16600360008a815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461133a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161133190612ce5565b60405180910390fd5b610e1042600360008b81526020019081526020016000206001015461135f9190612fe3565b1161139f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161139690612d45565b60405180910390fd5b600060038111156113b3576113b2613134565b5b600360008a815260200190815260200160002060030160019054906101000a900460ff1660038111156113e9576113e8613134565b5b14611429576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161142090612c65565b60405180910390fd5b611437878787878542611ab9565b86600360008a81526020019081526020016000206001018190555085600360008a8152602001908152602001600020600201819055508484600360008b81526020019081526020016000206004019190611492929190611f16565b508282600360008b815260200190815260200160002060050191906114b8929190611f16565b5080600360008a815260200190815260200160002060030160006101000a81548160ff021916908360ff160217905550877f86057f7ef3d6af6158e18db712016e366a45ff9ab04ba3df426a087d63262cf2868686868c604051611520959493929190612b9c565b60405180910390a25050505050505050565b606060046000838152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b8282101561183957838290600052602060002090600602016040518060c0016040529081600082015481526020016001820180548060200260200160405190810160405280929190818152602001828054801561161957602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116115cf575b50505050508152602001600282018054611632906130d3565b80601f016020809104026020016040519081016040528092919081815260200182805461165e906130d3565b80156116ab5780601f10611680576101008083540402835291602001916116ab565b820191906000526020600020905b81548152906001019060200180831161168e57829003601f168201915b505050505081526020016003820180546116c4906130d3565b80601f01602080910402602001604051908101604052809291908181526020018280546116f0906130d3565b801561173d5780601f106117125761010080835404028352916020019161173d565b820191906000526020600020905b81548152906001019060200180831161172057829003601f168201915b50505050508152602001600482018054806020026020016040519081016040528092919081815260200182805480156117cb57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611781575b505050505081526020016005820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152505081526020019060010190611567565b505050509050919050565b61184c611c7e565b73ffffffffffffffffffffffffffffffffffffffff1661186a610fc0565b73ffffffffffffffffffffffffffffffffffffffff16146118c0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118b790612d05565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611930576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161192790612c05565b60405180910390fd5b61193981611c86565b50565b6004602052816000526040600020818154811061195857600080fd5b906000526020600020906006020160009150915050806000015490806002018054611982906130d3565b80601f01602080910402602001604051908101604052809291908181526020018280546119ae906130d3565b80156119fb5780601f106119d0576101008083540402835291602001916119fb565b820191906000526020600020905b8154815290600101906020018083116119de57829003601f168201915b505050505090806003018054611a10906130d3565b80601f0160208091040260200160405190810160405280929190818152602001828054611a3c906130d3565b8015611a895780601f10611a5e57610100808354040283529160200191611a89565b820191906000526020600020905b815481529060010190602001808311611a6c57829003601f168201915b5050505050908060050160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905084565b620151808686611ac99190612fe3565b11611b09576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b0090612d25565b60405180910390fd5b620151808187611b199190612fe3565b1015611b5a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b5190612da5565b60405180910390fd5b60018260ff161015611ba1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b9890612d65565b60405180910390fd5b601f8260ff161115611be8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611bdf90612be5565b60405180910390fd5b6008848490501015611c2f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c2690612de5565b60405180910390fd5b6064848490501115611c76576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c6d90612ca5565b60405180910390fd5b505050505050565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b604051806101000160405280600073ffffffffffffffffffffffffffffffffffffffff1681526020016000815260200160008152602001600060ff16815260200160006003811115611d9f57611d9e613134565b5b81526020016060815260200160608152602001600081525090565b6040518060c001604052806000815260200160608152602001606081526020016060815260200160608152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b828054828255906000526020600020908101928215611e7f579160200282015b82811115611e7e5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190611e26565b5b509050611e8c9190611f9c565b5090565b828054611e9c906130d3565b90600052602060002090601f016020900481019282611ebe5760008555611f05565b82601f10611ed757805160ff1916838001178555611f05565b82800160010185558215611f05579182015b82811115611f04578251825591602001919060010190611ee9565b5b509050611f129190611f9c565b5090565b828054611f22906130d3565b90600052602060002090601f016020900481019282611f445760008555611f8b565b82601f10611f5d57803560ff1916838001178555611f8b565b82800160010185558215611f8b579182015b82811115611f8a578235825591602001919060010190611f6f565b5b509050611f989190611f9c565b5090565b5b80821115611fb5576000816000905550600101611f9d565b5090565b600081359050611fc8816136f5565b92915050565b600081519050611fdd8161370c565b92915050565b60008083601f840112611ff957611ff86131c6565b5b8235905067ffffffffffffffff811115612016576120156131c1565b5b602083019150836001820283011115612032576120316131cb565b5b9250929050565b60008135905061204881613723565b92915050565b60008151905061205d81613723565b92915050565b6000813590506120728161373a565b92915050565b60006020828403121561208e5761208d6131d5565b5b600061209c84828501611fb9565b91505092915050565b600080604083850312156120bc576120bb6131d5565b5b60006120ca85828601611fb9565b92505060206120db85828601612039565b9150509250929050565b6000602082840312156120fb576120fa6131d5565b5b600061210984828501611fce565b91505092915050565b600060208284031215612128576121276131d5565b5b600061213684828501612039565b91505092915050565b600060208284031215612155576121546131d5565b5b60006121638482850161204e565b91505092915050565b60008060408385031215612183576121826131d5565b5b600061219185828601612039565b92505060206121a285828601612039565b9150509250929050565b6000806000606084860312156121c5576121c46131d5565b5b60006121d386828701612039565b93505060206121e486828701612039565b92505060406121f586828701611fb9565b9150509250925092565b6000806000806000806080878903121561221c5761221b6131d5565b5b600061222a89828a01612039565b965050602061223b89828a01612039565b955050604087013567ffffffffffffffff81111561225c5761225b6131d0565b5b61226889828a01611fe3565b9450945050606087013567ffffffffffffffff81111561228b5761228a6131d0565b5b61229789828a01611fe3565b92509250509295509295509295565b600080600080600080600060a0888a0312156122c5576122c46131d5565b5b60006122d38a828b01612039565b97505060206122e48a828b01612039565b965050604088013567ffffffffffffffff811115612305576123046131d0565b5b6123118a828b01611fe3565b9550955050606088013567ffffffffffffffff811115612334576123336131d0565b5b6123408a828b01611fe3565b935093505060806123538a828b01612063565b91505092959891949750929550565b60008060008060008060008060c0898b031215612382576123816131d5565b5b60006123908b828c01612039565b98505060206123a18b828c01612039565b97505060406123b28b828c01612039565b965050606089013567ffffffffffffffff8111156123d3576123d26131d0565b5b6123df8b828c01611fe3565b9550955050608089013567ffffffffffffffff811115612402576124016131d0565b5b61240e8b828c01611fe3565b935093505060a06124218b828c01612063565b9150509295985092959890939650565b600061243d8383612475565b60208301905092915050565b600061245583836129ae565b905092915050565b60006124698383612a4c565b60208301905092915050565b61247e81613017565b82525050565b61248d81613017565b82525050565b600061249e82612ee5565b6124a88185612f38565b93506124b383612eb5565b8060005b838110156124e45781516124cb8882612431565b97506124d683612f11565b9250506001810190506124b7565b5085935050505092915050565b60006124fc82612ef0565b6125068185612f49565b93508360208202850161251885612ec5565b8060005b8581101561255457848403895281516125358582612449565b945061254083612f1e565b925060208a0199505060018101905061251c565b50829750879550505050505092915050565b600061257182612efb565b61257b8185612f5a565b935061258683612ed5565b8060005b838110156125b757815161259e888261245d565b97506125a983612f2b565b92505060018101905061258a565b5085935050505092915050565b6125cd8161307f565b82525050565b6125dc8161307f565b82525050565b60006125ee8385612f7c565b93506125fb838584613091565b612604836131da565b840190509392505050565b600061261a82612f06565b6126248185612f6b565b93506126348185602086016130a0565b61263d816131da565b840191505092915050565b600061265382612f06565b61265d8185612f7c565b935061266d8185602086016130a0565b612676816131da565b840191505092915050565b600061268e602e83612f7c565b9150612699826131eb565b604082019050919050565b60006126b1602683612f7c565b91506126bc8261323a565b604082019050919050565b60006126d4602a83612f7c565b91506126df82613289565b604082019050919050565b60006126f7602a83612f7c565b9150612702826132d8565b604082019050919050565b600061271a603483612f7c565b915061272582613327565b604082019050919050565b600061273d600f83612f7c565b915061274882613376565b602082019050919050565b6000612760602d83612f7c565b915061276b8261339f565b604082019050919050565b6000612783601283612f7c565b915061278e826133ee565b602082019050919050565b60006127a6603283612f7c565b91506127b182613417565b604082019050919050565b60006127c9602083612f7c565b91506127d482613466565b602082019050919050565b60006127ec602583612f7c565b91506127f78261348f565b604082019050919050565b600061280f603e83612f7c565b915061281a826134de565b604082019050919050565b6000612832602583612f7c565b915061283d8261352d565b604082019050919050565b6000612855603583612f7c565b91506128608261357c565b604082019050919050565b6000612878603983612f7c565b9150612883826135cb565b604082019050919050565b600061289b601d83612f7c565b91506128a68261361a565b602082019050919050565b60006128be602c83612f7c565b91506128c982613643565b604082019050919050565b60006128e1602883612f7c565b91506128ec82613692565b604082019050919050565b6000610100830160008301516129106000860182612475565b5060208301516129236020860182612a4c565b5060408301516129366040860182612a4c565b5060608301516129496060860182612a6a565b50608083015161295c60808601826125c4565b5060a083015184820360a0860152612974828261260f565b91505060c083015184820360c086015261298e828261260f565b91505060e08301516129a360e0860182612a4c565b508091505092915050565b600060c0830160008301516129c66000860182612a4c565b50602083015184820360208601526129de8282612493565b915050604083015184820360408601526129f8828261260f565b91505060608301518482036060860152612a12828261260f565b91505060808301518482036080860152612a2c8282612493565b91505060a0830151612a4160a0860182612475565b508091505092915050565b612a5581613068565b82525050565b612a6481613068565b82525050565b612a7381613072565b82525050565b612a8281613072565b82525050565b6000602082019050612a9d6000830184612484565b92915050565b6000604082019050612ab86000830185612484565b612ac56020830184612a5b565b9392505050565b600061010082019050612ae2600083018b612484565b612aef602083018a612a5b565b612afc6040830189612a5b565b612b096060830188612a79565b612b1660808301876125d3565b81810360a0830152612b288186612648565b905081810360c0830152612b3c8185612648565b9050612b4b60e0830184612a5b565b9998505050505050505050565b60006020820190508181036000830152612b7281846124f1565b905092915050565b60006020820190508181036000830152612b948184612566565b905092915050565b60006060820190508181036000830152612bb78187896125e2565b90508181036020830152612bcc8185876125e2565b9050612bdb6040830184612a5b565b9695505050505050565b60006020820190508181036000830152612bfe81612681565b9050919050565b60006020820190508181036000830152612c1e816126a4565b9050919050565b60006020820190508181036000830152612c3e816126c7565b9050919050565b60006020820190508181036000830152612c5e816126ea565b9050919050565b60006020820190508181036000830152612c7e8161270d565b9050919050565b60006020820190508181036000830152612c9e81612730565b9050919050565b60006020820190508181036000830152612cbe81612753565b9050919050565b60006020820190508181036000830152612cde81612776565b9050919050565b60006020820190508181036000830152612cfe81612799565b9050919050565b60006020820190508181036000830152612d1e816127bc565b9050919050565b60006020820190508181036000830152612d3e816127df565b9050919050565b60006020820190508181036000830152612d5e81612802565b9050919050565b60006020820190508181036000830152612d7e81612825565b9050919050565b60006020820190508181036000830152612d9e81612848565b9050919050565b60006020820190508181036000830152612dbe8161286b565b9050919050565b60006020820190508181036000830152612dde8161288e565b9050919050565b60006020820190508181036000830152612dfe816128b1565b9050919050565b60006020820190508181036000830152612e1e816128d4565b9050919050565b60006020820190508181036000830152612e3f81846128f7565b905092915050565b6000602082019050612e5c6000830184612a5b565b92915050565b6000608082019050612e776000830187612a5b565b8181036020830152612e898186612648565b90508181036040830152612e9d8185612648565b9050612eac6060830184612484565b95945050505050565b6000819050602082019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b6000612f9882613068565b9150612fa383613068565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115612fd857612fd7613105565b5b828201905092915050565b6000612fee82613068565b9150612ff983613068565b92508282101561300c5761300b613105565b5b828203905092915050565b600061302282613048565b9050919050565b60008115159050919050565b6000819050613043826136e1565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b600061308a82613035565b9050919050565b82818337600083830152505050565b60005b838110156130be5780820151818401526020810190506130a3565b838111156130cd576000848401525b50505050565b600060028204905060018216806130eb57607f821691505b602082108114156130ff576130fe613163565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4a756467696e6720706572696f64206d757374206e6f74206265206c6f6e676560008201527f72207468616e2033312064617973000000000000000000000000000000000000602082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4f6e6c79206861636b6174686f6e2773206f7267616e697a65722063616e206160008201527f64642061207072697a6500000000000000000000000000000000000000000000602082015250565b7f4f6e6c79206861636b6174686f6e2773206f7267616e697a65722063616e206160008201527f64642061206a7564676500000000000000000000000000000000000000000000602082015250565b7f4861636b6174686f6e206d657461646174612063616e2774206368616e67652060008201527f6166746572206974206861732073746172746564000000000000000000000000602082015250565b7f5072697a65206e6f7420666f756e640000000000000000000000000000000000600082015250565b7f4861636b6174686f6e206e616d65206d757374206265206174206d6f7374203160008201527f3030206368617261637465727300000000000000000000000000000000000000602082015250565b7f556e61626c6520746f207472616e736665720000000000000000000000000000600082015250565b7f4f6e6c79206861636b6174686f6e2773206f7267616e697a65722063616e206360008201527f68616e676520697473206d657461646174610000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f4861636b6174686f6e206d757374206265206174206c6561737420312064617960008201527f206c6f6e67000000000000000000000000000000000000000000000000000000602082015250565b7f4861636b6174686f6e206d657461646174612063616e206265206368616e676560008201527f6420757020756e74696c203120686f7572206265666f72652073746172740000602082015250565b7f4a756467696e6720706572696f64206d757374206265206174206c656173742060008201527f3120646179000000000000000000000000000000000000000000000000000000602082015250565b7f43616e2774206164642061207072697a6520746f20616e206f6e676f696e672060008201527f6f722066696e6973686564206861636b6174686f6e0000000000000000000000602082015250565b7f4861636b6174686f6e2073746172742064617465206d7573742062652061742060008201527f6c6561737420312064617920696e207468652066757475726500000000000000602082015250565b7f4d696e696d756d207072697a6520726577617264206973203120455448000000600082015250565b7f4861636b6174686f6e206e616d65206d757374206265206174206c656173742060008201527f3820636861726163746572730000000000000000000000000000000000000000602082015250565b7f5072697a65206e616d65206d757374206265206174206c65617374203820636860008201527f6172616374657273000000000000000000000000000000000000000000000000602082015250565b600481106136f2576136f1613134565b5b50565b6136fe81613017565b811461370957600080fd5b50565b61371581613029565b811461372057600080fd5b50565b61372c81613068565b811461373757600080fd5b50565b61374381613072565b811461374e57600080fd5b5056fea264697066735822122027fb5233bf27c6984250438e8ee402fd6d427020e253a0fe55f688f6c22c4a6c64736f6c63430008070033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "constructor": {
        "notice": "Deploy with the address of the LINK token@param _link The address of the LINK token"
      },
      "withdrawLink()": {
        "notice": "Allows the owner to withdraw any LINK balance on the contract"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 102,
        "contract": "contracts/Hacka.sol:Hacka",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 229,
        "contract": "contracts/Hacka.sol:Hacka",
        "label": "s_counter",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 232,
        "contract": "contracts/Hacka.sol:Hacka",
        "label": "LinkToken",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(LinkTokenInterface)94"
      },
      {
        "astId": 275,
        "contract": "contracts/Hacka.sol:Hacka",
        "label": "s_hackathons",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_uint256,t_struct(HackathonMetadata)255_storage)"
      },
      {
        "astId": 281,
        "contract": "contracts/Hacka.sol:Hacka",
        "label": "s_prizes",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_uint256,t_array(t_struct(HackathonPrize)270_storage)dyn_storage)"
      },
      {
        "astId": 286,
        "contract": "contracts/Hacka.sol:Hacka",
        "label": "s_organizerHackathons",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_array(t_struct(HackathonPrize)270_storage)dyn_storage": {
        "base": "t_struct(HackathonPrize)270_storage",
        "encoding": "dynamic_array",
        "label": "struct Hacka.HackathonPrize[]",
        "numberOfBytes": "32"
      },
      "t_array(t_uint256)dyn_storage": {
        "base": "t_uint256",
        "encoding": "dynamic_array",
        "label": "uint256[]",
        "numberOfBytes": "32"
      },
      "t_contract(LinkTokenInterface)94": {
        "encoding": "inplace",
        "label": "contract LinkTokenInterface",
        "numberOfBytes": "20"
      },
      "t_enum(HackathonStage)237": {
        "encoding": "inplace",
        "label": "enum Hacka.HackathonStage",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256[])",
        "numberOfBytes": "32",
        "value": "t_array(t_uint256)dyn_storage"
      },
      "t_mapping(t_uint256,t_array(t_struct(HackathonPrize)270_storage)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct Hacka.HackathonPrize[])",
        "numberOfBytes": "32",
        "value": "t_array(t_struct(HackathonPrize)270_storage)dyn_storage"
      },
      "t_mapping(t_uint256,t_struct(HackathonMetadata)255_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct Hacka.HackathonMetadata)",
        "numberOfBytes": "32",
        "value": "t_struct(HackathonMetadata)255_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(HackathonMetadata)255_storage": {
        "encoding": "inplace",
        "label": "struct Hacka.HackathonMetadata",
        "members": [
          {
            "astId": 239,
            "contract": "contracts/Hacka.sol:Hacka",
            "label": "organizer",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 241,
            "contract": "contracts/Hacka.sol:Hacka",
            "label": "timestampStart",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 243,
            "contract": "contracts/Hacka.sol:Hacka",
            "label": "timestampEnd",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 245,
            "contract": "contracts/Hacka.sol:Hacka",
            "label": "judgingPeriod",
            "offset": 0,
            "slot": "3",
            "type": "t_uint8"
          },
          {
            "astId": 248,
            "contract": "contracts/Hacka.sol:Hacka",
            "label": "stage",
            "offset": 1,
            "slot": "3",
            "type": "t_enum(HackathonStage)237"
          },
          {
            "astId": 250,
            "contract": "contracts/Hacka.sol:Hacka",
            "label": "name",
            "offset": 0,
            "slot": "4",
            "type": "t_string_storage"
          },
          {
            "astId": 252,
            "contract": "contracts/Hacka.sol:Hacka",
            "label": "url",
            "offset": 0,
            "slot": "5",
            "type": "t_string_storage"
          },
          {
            "astId": 254,
            "contract": "contracts/Hacka.sol:Hacka",
            "label": "balance",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "224"
      },
      "t_struct(HackathonPrize)270_storage": {
        "encoding": "inplace",
        "label": "struct Hacka.HackathonPrize",
        "members": [
          {
            "astId": 257,
            "contract": "contracts/Hacka.sol:Hacka",
            "label": "reward",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 260,
            "contract": "contracts/Hacka.sol:Hacka",
            "label": "judges",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_address)dyn_storage"
          },
          {
            "astId": 262,
            "contract": "contracts/Hacka.sol:Hacka",
            "label": "name",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          },
          {
            "astId": 264,
            "contract": "contracts/Hacka.sol:Hacka",
            "label": "description",
            "offset": 0,
            "slot": "3",
            "type": "t_string_storage"
          },
          {
            "astId": 267,
            "contract": "contracts/Hacka.sol:Hacka",
            "label": "submissions",
            "offset": 0,
            "slot": "4",
            "type": "t_array(t_address)dyn_storage"
          },
          {
            "astId": 269,
            "contract": "contracts/Hacka.sol:Hacka",
            "label": "winner",
            "offset": 0,
            "slot": "5",
            "type": "t_address"
          }
        ],
        "numberOfBytes": "192"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  }
}