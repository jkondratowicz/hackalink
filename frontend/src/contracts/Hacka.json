{
  "address": "0xd7bb4b0c1Ae3DdaaB06a0d05B4bf9E60ceE1182B",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "hackathonId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "organizer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "url",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestampStart",
          "type": "uint256"
        }
      ],
      "name": "HackathonCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_hackathonId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_prizeId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_judge",
          "type": "address"
        }
      ],
      "name": "addJudge",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_hackathonId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        }
      ],
      "name": "addPrize",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "prizeId",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_timestampStart",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_timestampEnd",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_url",
          "type": "string"
        },
        {
          "internalType": "uint8",
          "name": "_judgingPeriod",
          "type": "uint8"
        }
      ],
      "name": "createHackathon",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "hackathonId",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "s_hackathons",
      "outputs": [
        {
          "internalType": "address",
          "name": "organizer",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "timestampStart",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "timestampEnd",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "judgingPeriod",
          "type": "uint8"
        },
        {
          "internalType": "enum Hacka.HackathonStage",
          "name": "stage",
          "type": "uint8"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "url",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "s_organizerHackathons",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "s_prizes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "reward",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "winner",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_hackathonId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_timestampStart",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_timestampEnd",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_url",
          "type": "string"
        },
        {
          "internalType": "uint8",
          "name": "_judgingPeriod",
          "type": "uint8"
        }
      ],
      "name": "updateHackathonMetadata",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawLink",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xbe7061c96106ee17270c0ce1e8ac8462c20bef946cac507f688cd374484c07c3",
  "receipt": {
    "to": null,
    "from": "0x6E51d5c51872f97caab78E8e3cA9a23C4945474A",
    "contractAddress": "0xd7bb4b0c1Ae3DdaaB06a0d05B4bf9E60ceE1182B",
    "transactionIndex": 3,
    "gasUsed": "2443217",
    "logsBloom": "0x
    "blockHash": "0xb63d0a20686458543cbffecef8791ee0c458ab07fd4199aeb34ce8686339079d",
    "transactionHash": "0xbe7061c96106ee17270c0ce1e8ac8462c20bef946cac507f688cd374484c07c3",
    "logs": [
      {
        "transactionIndex": 3,
        "blockNumber": 28329658,
        "transactionHash": "0xbe7061c96106ee17270c0ce1e8ac8462c20bef946cac507f688cd374484c07c3",
        "address": "0xd7bb4b0c1Ae3DdaaB06a0d05B4bf9E60ceE1182B",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000006e51d5c51872f97caab78e8e3ca9a23c4945474a"
        ],
        "data": "0x",
        "logIndex": 15,
        "blockHash": "0xb63d0a20686458543cbffecef8791ee0c458ab07fd4199aeb34ce8686339079d"
      }
    ],
    "blockNumber": 28329658,
    "cumulativeGasUsed": "2992759",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "d4de2b2e00b65c075de05d77a69c48ec",
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"hackathonId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"organizer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"url\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestampStart\",\"type\":\"uint256\"}],\"name\":\"HackathonCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_hackathonId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_prizeId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_judge\",\"type\":\"address\"}],\"name\":\"addJudge\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_hackathonId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_description\",\"type\":\"string\"}],\"name\":\"addPrize\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"prizeId\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_timestampStart\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_timestampEnd\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_url\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"_judgingPeriod\",\"type\":\"uint8\"}],\"name\":\"createHackathon\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"hackathonId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"s_hackathons\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"organizer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestampStart\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestampEnd\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"judgingPeriod\",\"type\":\"uint8\"},{\"internalType\":\"enum Hacka.HackathonStage\",\"name\":\"stage\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"url\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"s_organizerHackathons\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"s_prizes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_hackathonId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_timestampStart\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_timestampEnd\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_url\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"_judgingPeriod\",\"type\":\"uint8\"}],\"name\":\"updateHackathonMetadata\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawLink\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"Deploy with the address of the LINK token@param _link The address of the LINK token\"},\"withdrawLink()\":{\"notice\":\"Allows the owner to withdraw any LINK balance on the contract\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Hacka.sol\":\"Hacka\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface LinkTokenInterface {\\n\\n  function allowance(\\n    address owner,\\n    address spender\\n  )\\n    external\\n    view\\n    returns (\\n      uint256 remaining\\n    );\\n\\n  function approve(\\n    address spender,\\n    uint256 value\\n  )\\n    external\\n    returns (\\n      bool success\\n    );\\n\\n  function balanceOf(\\n    address owner\\n  )\\n    external\\n    view\\n    returns (\\n      uint256 balance\\n    );\\n\\n  function decimals()\\n    external\\n    view\\n    returns (\\n      uint8 decimalPlaces\\n    );\\n\\n  function decreaseApproval(\\n    address spender,\\n    uint256 addedValue\\n  )\\n    external\\n    returns (\\n      bool success\\n    );\\n\\n  function increaseApproval(\\n    address spender,\\n    uint256 subtractedValue\\n  ) external;\\n\\n  function name()\\n    external\\n    view\\n    returns (\\n      string memory tokenName\\n    );\\n\\n  function symbol()\\n    external\\n    view\\n    returns (\\n      string memory tokenSymbol\\n    );\\n\\n  function totalSupply()\\n    external\\n    view\\n    returns (\\n      uint256 totalTokensIssued\\n    );\\n\\n  function transfer(\\n    address to,\\n    uint256 value\\n  )\\n    external\\n    returns (\\n      bool success\\n    );\\n\\n  function transferAndCall(\\n    address to,\\n    uint256 value,\\n    bytes calldata data\\n  )\\n    external\\n    returns (\\n      bool success\\n    );\\n\\n  function transferFrom(\\n    address from,\\n    address to,\\n    uint256 value\\n  )\\n    external\\n    returns (\\n      bool success\\n    );\\n\\n}\\n\",\"keccak256\":\"0x50528c237386c55ff122d047f91b32be7abe24e9dfdc609de21cd605aae83b9a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _setOwner(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _setOwner(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _setOwner(newOwner);\\n    }\\n\\n    function _setOwner(address newOwner) private {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x6bb804a310218875e89d12c053e94a13a4607cdf7cc2052f3e52bd32a0dc50a1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x90565a39ae45c80f0468dc96c7b20d0afc3055f344c8203a0c9258239f350b9f\",\"license\":\"MIT\"},\"contracts/Hacka.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.7;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol\\\";\\n\\ncontract Hacka is Ownable {\\n    uint private s_counter = 0;\\n    LinkTokenInterface internal LinkToken;\\n\\n    enum HackathonStage { NEW, STARTED, JUDGING, FINALIZED }\\n\\n    struct HackathonMetadata {\\n        address organizer;\\n        uint timestampStart;\\n        uint timestampEnd;\\n        uint8 judgingPeriod;\\n        HackathonStage stage;\\n        string name;\\n        string url;\\n        uint balance;\\n        // TODO cid for description\\n    }\\n\\n    struct HackathonPrize {\\n        uint reward;\\n        address[] judges;\\n        string name;\\n        string description;\\n        address[] submissions;\\n        address winner;\\n    }\\n\\n    mapping(uint => HackathonMetadata) public s_hackathons;\\n    mapping(uint => HackathonPrize[]) public s_prizes;\\n    mapping(address => uint[]) public s_organizerHackathons;\\n\\n    event HackathonCreated(uint indexed hackathonId, address indexed organizer, string name, string url, uint timestampStart);\\n\\n    /**\\n     * @notice Deploy with the address of the LINK token\\n     * @notice @param _link The address of the LINK token\\n     */\\n    constructor(/*address _link*/) {\\n        // LinkToken = LinkTokenInterface(_link);\\n        // TODO should not be hardcoded\\n        // TODO add hackathon ERC20 as well?\\n        LinkToken = LinkTokenInterface(0xa36085F69e2889c224210F603D836748e7dC0088);\\n    }\\n\\n    function createHackathon(\\n        uint _timestampStart,\\n        uint _timestampEnd,\\n        string calldata _name,\\n        string calldata _url,\\n        uint8 _judgingPeriod\\n    ) external returns (uint hackathonId) {\\n        validateMetadata(\\n            _timestampStart,\\n            _timestampEnd,\\n            _name,\\n            _judgingPeriod,\\n            block.timestamp\\n        );\\n\\n        hackathonId = s_counter;\\n        s_counter = s_counter + 1;\\n\\n        s_hackathons[hackathonId].organizer = msg.sender;\\n        s_hackathons[hackathonId].timestampStart = _timestampStart;\\n        s_hackathons[hackathonId].timestampEnd = _timestampEnd;\\n        s_hackathons[hackathonId].judgingPeriod = _judgingPeriod;\\n        s_hackathons[hackathonId].stage = HackathonStage.NEW;\\n        s_hackathons[hackathonId].name = _name;\\n        s_hackathons[hackathonId].url = _url;\\n\\n        s_organizerHackathons[msg.sender].push(hackathonId);\\n\\n        emit HackathonCreated(hackathonId, msg.sender, _name, _url, _timestampStart);\\n\\n        return hackathonId;\\n    }\\n\\n    function updateHackathonMetadata(\\n        uint _hackathonId,\\n        uint _timestampStart,\\n        uint _timestampEnd,\\n        string calldata _name,\\n        string calldata _url,\\n        uint8 _judgingPeriod\\n    ) external {\\n        require(s_hackathons[_hackathonId].organizer == msg.sender, \\\"Only hackathon's organizer can change its metadata\\\");\\n        require(s_hackathons[_hackathonId].timestampStart - block.timestamp > 1 hours, \\\"Hackathon metadata can be changed up until 1 hour before start\\\");\\n        require(s_hackathons[_hackathonId].stage == HackathonStage.NEW, \\\"Hackathon metadata can't change after it has started\\\");\\n        validateMetadata(\\n            _timestampStart,\\n            _timestampEnd,\\n            _name,\\n            _judgingPeriod,\\n            block.timestamp\\n        );\\n\\n        s_hackathons[_hackathonId].timestampStart = _timestampStart;\\n        s_hackathons[_hackathonId].timestampEnd = _timestampEnd;\\n        s_hackathons[_hackathonId].name = _name;\\n        s_hackathons[_hackathonId].url = _url;\\n        s_hackathons[_hackathonId].judgingPeriod = _judgingPeriod;\\n\\n        // TODO emit event about hackathon being updated\\n    }\\n\\n    // TODO method to transfer hackathon ownership to another address (change organizer)\\n\\n    function validateMetadata(\\n        uint _timestampStart,\\n        uint _timestampEnd,\\n        string calldata _name,\\n        uint8 _judgingPeriod,\\n        uint _currentTimestamp\\n    ) pure internal {\\n        require(_timestampEnd - _timestampStart > 1 days, \\\"Hackathon must be at least 1 day long\\\");\\n        require(_timestampStart - _currentTimestamp >= 1 days, \\\"Hackathon start date must be at least 1 day in the future\\\");\\n        require(_judgingPeriod >= 1, \\\"Judging period must be at least 1 day\\\");\\n        require(_judgingPeriod <= 31, \\\"Judging period must not be longer than 31 days\\\");\\n        require(bytes(_name).length >= 8, \\\"Hackathon name must be at least 8 characters\\\");\\n        require(bytes(_name).length <= 100, \\\"Hackathon name must be at most 100 characters\\\");\\n    }\\n\\n    // TODO should use LINK or our own \\\"Hackathon Token\\\" ERC20, for now just use ETH\\n    function addPrize(\\n        uint _hackathonId,\\n        string calldata _name,\\n        string calldata _description\\n    ) external payable returns (uint prizeId) {\\n        require(s_hackathons[_hackathonId].organizer == msg.sender, \\\"Only hackathon's organizer can add a prize\\\");\\n        require(bytes(_name).length > 8, \\\"Prize name must be at least 8 characters\\\");\\n        require(msg.value > 1 ether, \\\"Minimum prize reward is 1 ETH\\\");\\n\\n        s_hackathons[_hackathonId].balance += msg.value;\\n\\n        HackathonPrize memory prize;\\n        prize.reward = msg.value;\\n        prize.name = _name;\\n        prize.description = _description;\\n\\n        prizeId = s_prizes[_hackathonId].length;\\n        s_prizes[_hackathonId].push(prize);\\n\\n        // TODO emit event about prize being created\\n\\n        return prizeId;\\n    }\\n\\n    function addJudge(\\n        uint _hackathonId,\\n        uint _prizeId,\\n        address _judge\\n    ) external {\\n        require(s_hackathons[_hackathonId].organizer == msg.sender, \\\"Only hackathon's organizer can add a judge\\\");\\n        require(s_prizes[_hackathonId][_prizeId].reward > 0, \\\"Prize not found\\\");\\n\\n        s_prizes[_hackathonId][_prizeId].judges.push(_judge);\\n        // TODO emit event about judge being added\\n    }\\n\\n    /**\\n     * @notice Allows the owner to withdraw any LINK balance on the contract\\n     */\\n    function withdrawLink() public onlyOwner {\\n        require(LinkToken.transfer(msg.sender, LinkToken.balanceOf(address(this))), \\\"Unable to transfer\\\");\\n    }\\n}\\n\",\"keccak256\":\"0x6b2c95f1a62a518706a993326a8bfbef02e4c806d0bca8f4a9ee9c6e049e3818\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x60806040526004361061009c5760003560e01c80638da5cb5b116100645780638da5cb5b1461019f5780638dc654a2146101ca578063aa04f10e146101e1578063d738c38f14610211578063f2fde38b1461023a578063fb39df8e146102635761009c565b80634651efb5146100a1578063492c7c0d146100de578063715018a6146101225780637dc0cae41461013957806389e1037c14610176575b600080fd5b3480156100ad57600080fd5b506100c860048036038101906100c39190611a8e565b6102a3565b6040516100d59190612247565b60405180910390f35b3480156100ea57600080fd5b506101056004803603810190610100919061190c565b6104d9565b604051610119989796959493929190611f52565b60405180910390f35b34801561012e57600080fd5b5061013761066b565b005b34801561014557600080fd5b50610160600480360381019061015b919061189f565b6106f3565b60405161016d9190612247565b60405180910390f35b34801561018257600080fd5b5061019d60048036038101906101989190611a3b565b610724565b005b3480156101ab57600080fd5b506101b46108dd565b6040516101c19190611f0e565b60405180910390f35b3480156101d657600080fd5b506101df610906565b005b6101fb60048036038101906101f69190611966565b610b1c565b6040516102089190612247565b60405180910390f35b34801561021d57600080fd5b5061023860048036038101906102339190611b4a565b610e52565b005b34801561024657600080fd5b50610261600480360381019061025c9190611872565b6110ae565b005b34801561026f57600080fd5b5061028a600480360381019061028591906119fb565b6111a6565b60405161029a9493929190612262565b60405180910390f35b60006102b3888888888642611323565b6001549050600180546102c691906122d1565b600181905550336003600083815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550876003600083815260200190815260200160002060010181905550866003600083815260200190815260200160002060020181905550816003600083815260200190815260200160002060030160006101000a81548160ff021916908360ff16021790555060006003600083815260200190815260200160002060030160016101000a81548160ff021916908360038111156103c0576103bf612478565b5b021790555085856003600084815260200190815260200160002060040191906103ea9291906115b4565b5083836003600084815260200190815260200160002060050191906104109291906115b4565b50600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150506001900390600052602060002001600090919091909150553373ffffffffffffffffffffffffffffffffffffffff16817faf8a61bb02f5ea4ba781ab6746e3e7ab13b29d17e89e2233e4819934813ac167888888888e6040516104c6959493929190611fde565b60405180910390a3979650505050505050565b60036020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020154908060030160009054906101000a900460ff16908060030160019054906101000a900460ff169080600401805461055490612417565b80601f016020809104026020016040519081016040528092919081815260200182805461058090612417565b80156105cd5780601f106105a2576101008083540402835291602001916105cd565b820191906000526020600020905b8154815290600101906020018083116105b057829003601f168201915b5050505050908060050180546105e290612417565b80601f016020809104026020016040519081016040528092919081815260200182805461060e90612417565b801561065b5780601f106106305761010080835404028352916020019161065b565b820191906000526020600020905b81548152906001019060200180831161063e57829003601f168201915b5050505050908060060154905088565b6106736114e8565b73ffffffffffffffffffffffffffffffffffffffff166106916108dd565b73ffffffffffffffffffffffffffffffffffffffff16146106e7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106de90612147565b60405180910390fd5b6106f160006114f0565b565b6005602052816000526040600020818154811061070f57600080fd5b90600052602060002001600091509150505481565b3373ffffffffffffffffffffffffffffffffffffffff166003600085815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146107c8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107bf90612087565b60405180910390fd5b60006004600085815260200190815260200160002083815481106107ef576107ee6124d6565b5b90600052602060002090600602016000015411610841576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610838906120c7565b60405180910390fd5b600460008481526020019081526020016000208281548110610866576108656124d6565b5b9060005260206000209060060201600101819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61090e6114e8565b73ffffffffffffffffffffffffffffffffffffffff1661092c6108dd565b73ffffffffffffffffffffffffffffffffffffffff1614610982576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097990612147565b60405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610a1c9190611f0e565b60206040518083038186803b158015610a3457600080fd5b505afa158015610a48573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a6c9190611939565b6040518363ffffffff1660e01b8152600401610a89929190611f29565b602060405180830381600087803b158015610aa357600080fd5b505af1158015610ab7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610adb91906118df565b610b1a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b1190612107565b60405180910390fd5b565b60003373ffffffffffffffffffffffffffffffffffffffff166003600088815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610bc2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bb990612067565b60405180910390fd5b60088585905011610c08576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bff90612227565b60405180910390fd5b670de0b6b3a76400003411610c52576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c49906121e7565b60405180910390fd5b34600360008881526020019081526020016000206006016000828254610c7891906122d1565b92505081905550610c8761163a565b3481600001818152505085858080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050816040018190525083838080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505081606001819052506004600088815260200190815260200160002080549050915060046000888152602001908152602001600020819080600181540180825580915050600190039060005260206000209060060201600090919091909150600082015181600001556020820151816001019080519060200190610da7929190611686565b506040820151816002019080519060200190610dc4929190611710565b506060820151816003019080519060200190610de1929190611710565b506080820151816004019080519060200190610dfe929190611686565b5060a08201518160050160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505095945050505050565b3373ffffffffffffffffffffffffffffffffffffffff16600360008a815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610ef6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610eed90612127565b60405180910390fd5b610e1042600360008b815260200190815260200160002060010154610f1b9190612327565b11610f5b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f5290612187565b60405180910390fd5b60006003811115610f6f57610f6e612478565b5b600360008a815260200190815260200160002060030160019054906101000a900460ff166003811115610fa557610fa4612478565b5b14610fe5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fdc906120a7565b60405180910390fd5b610ff3878787878542611323565b86600360008a81526020019081526020016000206001018190555085600360008a8152602001908152602001600020600201819055508484600360008b8152602001908152602001600020600401919061104e9291906115b4565b508282600360008b815260200190815260200160002060050191906110749291906115b4565b5080600360008a815260200190815260200160002060030160006101000a81548160ff021916908360ff1602179055505050505050505050565b6110b66114e8565b73ffffffffffffffffffffffffffffffffffffffff166110d46108dd565b73ffffffffffffffffffffffffffffffffffffffff161461112a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161112190612147565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561119a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161119190612047565b60405180910390fd5b6111a3816114f0565b50565b600460205281600052604060002081815481106111c257600080fd5b9060005260206000209060060201600091509150508060000154908060020180546111ec90612417565b80601f016020809104026020016040519081016040528092919081815260200182805461121890612417565b80156112655780601f1061123a57610100808354040283529160200191611265565b820191906000526020600020905b81548152906001019060200180831161124857829003601f168201915b50505050509080600301805461127a90612417565b80601f01602080910402602001604051908101604052809291908181526020018280546112a690612417565b80156112f35780601f106112c8576101008083540402835291602001916112f3565b820191906000526020600020905b8154815290600101906020018083116112d657829003601f168201915b5050505050908060050160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905084565b6201518086866113339190612327565b11611373576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161136a90612167565b60405180910390fd5b6201518081876113839190612327565b10156113c4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113bb906121c7565b60405180910390fd5b60018260ff16101561140b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611402906121a7565b60405180910390fd5b601f8260ff161115611452576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161144990612027565b60405180910390fd5b6008848490501015611499576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161149090612207565b60405180910390fd5b60648484905011156114e0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114d7906120e7565b60405180910390fd5b505050505050565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b8280546115c090612417565b90600052602060002090601f0160209004810192826115e25760008555611629565b82601f106115fb57803560ff1916838001178555611629565b82800160010185558215611629579182015b8281111561162857823582559160200191906001019061160d565b5b5090506116369190611796565b5090565b6040518060c001604052806000815260200160608152602001606081526020016060815260200160608152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b8280548282559060005260206000209081019282156116ff579160200282015b828111156116fe5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906116a6565b5b50905061170c9190611796565b5090565b82805461171c90612417565b90600052602060002090601f01602090048101928261173e5760008555611785565b82601f1061175757805160ff1916838001178555611785565b82800160010185558215611785579182015b82811115611784578251825591602001919060010190611769565b5b5090506117929190611796565b5090565b5b808211156117af576000816000905550600101611797565b5090565b6000813590506117c2816129ea565b92915050565b6000815190506117d781612a01565b92915050565b60008083601f8401126117f3576117f261250a565b5b8235905067ffffffffffffffff8111156118105761180f612505565b5b60208301915083600182028301111561182c5761182b61250f565b5b9250929050565b60008135905061184281612a18565b92915050565b60008151905061185781612a18565b92915050565b60008135905061186c81612a2f565b92915050565b60006020828403121561188857611887612519565b5b6000611896848285016117b3565b91505092915050565b600080604083850312156118b6576118b5612519565b5b60006118c4858286016117b3565b92505060206118d585828601611833565b9150509250929050565b6000602082840312156118f5576118f4612519565b5b6000611903848285016117c8565b91505092915050565b60006020828403121561192257611921612519565b5b600061193084828501611833565b91505092915050565b60006020828403121561194f5761194e612519565b5b600061195d84828501611848565b91505092915050565b60008060008060006060868803121561198257611981612519565b5b600061199088828901611833565b955050602086013567ffffffffffffffff8111156119b1576119b0612514565b5b6119bd888289016117dd565b9450945050604086013567ffffffffffffffff8111156119e0576119df612514565b5b6119ec888289016117dd565b92509250509295509295909350565b60008060408385031215611a1257611a11612519565b5b6000611a2085828601611833565b9250506020611a3185828601611833565b9150509250929050565b600080600060608486031215611a5457611a53612519565b5b6000611a6286828701611833565b9350506020611a7386828701611833565b9250506040611a84868287016117b3565b9150509250925092565b600080600080600080600060a0888a031215611aad57611aac612519565b5b6000611abb8a828b01611833565b9750506020611acc8a828b01611833565b965050604088013567ffffffffffffffff811115611aed57611aec612514565b5b611af98a828b016117dd565b9550955050606088013567ffffffffffffffff811115611b1c57611b1b612514565b5b611b288a828b016117dd565b93509350506080611b3b8a828b0161185d565b91505092959891949750929550565b60008060008060008060008060c0898b031215611b6a57611b69612519565b5b6000611b788b828c01611833565b9850506020611b898b828c01611833565b9750506040611b9a8b828c01611833565b965050606089013567ffffffffffffffff811115611bbb57611bba612514565b5b611bc78b828c016117dd565b9550955050608089013567ffffffffffffffff811115611bea57611be9612514565b5b611bf68b828c016117dd565b935093505060a0611c098b828c0161185d565b9150509295985092959890939650565b611c228161235b565b82525050565b611c31816123c3565b82525050565b6000611c4383856122c0565b9350611c508385846123d5565b611c598361251e565b840190509392505050565b6000611c6f826122b5565b611c7981856122c0565b9350611c898185602086016123e4565b611c928161251e565b840191505092915050565b6000611caa602e836122c0565b9150611cb58261252f565b604082019050919050565b6000611ccd6026836122c0565b9150611cd88261257e565b604082019050919050565b6000611cf0602a836122c0565b9150611cfb826125cd565b604082019050919050565b6000611d13602a836122c0565b9150611d1e8261261c565b604082019050919050565b6000611d366034836122c0565b9150611d418261266b565b604082019050919050565b6000611d59600f836122c0565b9150611d64826126ba565b602082019050919050565b6000611d7c602d836122c0565b9150611d87826126e3565b604082019050919050565b6000611d9f6012836122c0565b9150611daa82612732565b602082019050919050565b6000611dc26032836122c0565b9150611dcd8261275b565b604082019050919050565b6000611de56020836122c0565b9150611df0826127aa565b602082019050919050565b6000611e086025836122c0565b9150611e13826127d3565b604082019050919050565b6000611e2b603e836122c0565b9150611e3682612822565b604082019050919050565b6000611e4e6025836122c0565b9150611e5982612871565b604082019050919050565b6000611e716039836122c0565b9150611e7c826128c0565b604082019050919050565b6000611e94601d836122c0565b9150611e9f8261290f565b602082019050919050565b6000611eb7602c836122c0565b9150611ec282612938565b604082019050919050565b6000611eda6028836122c0565b9150611ee582612987565b604082019050919050565b611ef9816123ac565b82525050565b611f08816123b6565b82525050565b6000602082019050611f236000830184611c19565b92915050565b6000604082019050611f3e6000830185611c19565b611f4b6020830184611ef0565b9392505050565b600061010082019050611f68600083018b611c19565b611f75602083018a611ef0565b611f826040830189611ef0565b611f8f6060830188611eff565b611f9c6080830187611c28565b81810360a0830152611fae8186611c64565b905081810360c0830152611fc28185611c64565b9050611fd160e0830184611ef0565b9998505050505050505050565b60006060820190508181036000830152611ff9818789611c37565b9050818103602083015261200e818587611c37565b905061201d6040830184611ef0565b9695505050505050565b6000602082019050818103600083015261204081611c9d565b9050919050565b6000602082019050818103600083015261206081611cc0565b9050919050565b6000602082019050818103600083015261208081611ce3565b9050919050565b600060208201905081810360008301526120a081611d06565b9050919050565b600060208201905081810360008301526120c081611d29565b9050919050565b600060208201905081810360008301526120e081611d4c565b9050919050565b6000602082019050818103600083015261210081611d6f565b9050919050565b6000602082019050818103600083015261212081611d92565b9050919050565b6000602082019050818103600083015261214081611db5565b9050919050565b6000602082019050818103600083015261216081611dd8565b9050919050565b6000602082019050818103600083015261218081611dfb565b9050919050565b600060208201905081810360008301526121a081611e1e565b9050919050565b600060208201905081810360008301526121c081611e41565b9050919050565b600060208201905081810360008301526121e081611e64565b9050919050565b6000602082019050818103600083015261220081611e87565b9050919050565b6000602082019050818103600083015261222081611eaa565b9050919050565b6000602082019050818103600083015261224081611ecd565b9050919050565b600060208201905061225c6000830184611ef0565b92915050565b60006080820190506122776000830187611ef0565b81810360208301526122898186611c64565b9050818103604083015261229d8185611c64565b90506122ac6060830184611c19565b95945050505050565b600081519050919050565b600082825260208201905092915050565b60006122dc826123ac565b91506122e7836123ac565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561231c5761231b612449565b5b828201905092915050565b6000612332826123ac565b915061233d836123ac565b9250828210156123505761234f612449565b5b828203905092915050565b60006123668261238c565b9050919050565b60008115159050919050565b6000819050612387826129d6565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60006123ce82612379565b9050919050565b82818337600083830152505050565b60005b838110156124025780820151818401526020810190506123e7565b83811115612411576000848401525b50505050565b6000600282049050600182168061242f57607f821691505b60208210811415612443576124426124a7565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4a756467696e6720706572696f64206d757374206e6f74206265206c6f6e676560008201527f72207468616e2033312064617973000000000000000000000000000000000000602082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4f6e6c79206861636b6174686f6e2773206f7267616e697a65722063616e206160008201527f64642061207072697a6500000000000000000000000000000000000000000000602082015250565b7f4f6e6c79206861636b6174686f6e2773206f7267616e697a65722063616e206160008201527f64642061206a7564676500000000000000000000000000000000000000000000602082015250565b7f4861636b6174686f6e206d657461646174612063616e2774206368616e67652060008201527f6166746572206974206861732073746172746564000000000000000000000000602082015250565b7f5072697a65206e6f7420666f756e640000000000000000000000000000000000600082015250565b7f4861636b6174686f6e206e616d65206d757374206265206174206d6f7374203160008201527f3030206368617261637465727300000000000000000000000000000000000000602082015250565b7f556e61626c6520746f207472616e736665720000000000000000000000000000600082015250565b7f4f6e6c79206861636b6174686f6e2773206f7267616e697a65722063616e206360008201527f68616e676520697473206d657461646174610000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f4861636b6174686f6e206d757374206265206174206c6561737420312064617960008201527f206c6f6e67000000000000000000000000000000000000000000000000000000602082015250565b7f4861636b6174686f6e206d657461646174612063616e206265206368616e676560008201527f6420757020756e74696c203120686f7572206265666f72652073746172740000602082015250565b7f4a756467696e6720706572696f64206d757374206265206174206c656173742060008201527f3120646179000000000000000000000000000000000000000000000000000000602082015250565b7f4861636b6174686f6e2073746172742064617465206d7573742062652061742060008201527f6c6561737420312064617920696e207468652066757475726500000000000000602082015250565b7f4d696e696d756d207072697a6520726577617264206973203120455448000000600082015250565b7f4861636b6174686f6e206e616d65206d757374206265206174206c656173742060008201527f3820636861726163746572730000000000000000000000000000000000000000602082015250565b7f5072697a65206e616d65206d757374206265206174206c65617374203820636860008201527f6172616374657273000000000000000000000000000000000000000000000000602082015250565b600481106129e7576129e6612478565b5b50565b6129f38161235b565b81146129fe57600080fd5b50565b612a0a8161236d565b8114612a1557600080fd5b50565b612a21816123ac565b8114612a2c57600080fd5b50565b612a38816123b6565b8114612a4357600080fd5b5056fea26469706673582212205d9750c082af657b6cea552fadce16d9f9b25dc78dbc317397f6e6aa370cdaae64736f6c63430008070033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "constructor": {
        "notice": "Deploy with the address of the LINK token@param _link The address of the LINK token"
      },
      "withdrawLink()": {
        "notice": "Allows the owner to withdraw any LINK balance on the contract"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 102,
        "contract": "contracts/Hacka.sol:Hacka",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 229,
        "contract": "contracts/Hacka.sol:Hacka",
        "label": "s_counter",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 232,
        "contract": "contracts/Hacka.sol:Hacka",
        "label": "LinkToken",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(LinkTokenInterface)94"
      },
      {
        "astId": 275,
        "contract": "contracts/Hacka.sol:Hacka",
        "label": "s_hackathons",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_uint256,t_struct(HackathonMetadata)255_storage)"
      },
      {
        "astId": 281,
        "contract": "contracts/Hacka.sol:Hacka",
        "label": "s_prizes",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_uint256,t_array(t_struct(HackathonPrize)270_storage)dyn_storage)"
      },
      {
        "astId": 286,
        "contract": "contracts/Hacka.sol:Hacka",
        "label": "s_organizerHackathons",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_array(t_struct(HackathonPrize)270_storage)dyn_storage": {
        "base": "t_struct(HackathonPrize)270_storage",
        "encoding": "dynamic_array",
        "label": "struct Hacka.HackathonPrize[]",
        "numberOfBytes": "32"
      },
      "t_array(t_uint256)dyn_storage": {
        "base": "t_uint256",
        "encoding": "dynamic_array",
        "label": "uint256[]",
        "numberOfBytes": "32"
      },
      "t_contract(LinkTokenInterface)94": {
        "encoding": "inplace",
        "label": "contract LinkTokenInterface",
        "numberOfBytes": "20"
      },
      "t_enum(HackathonStage)237": {
        "encoding": "inplace",
        "label": "enum Hacka.HackathonStage",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256[])",
        "numberOfBytes": "32",
        "value": "t_array(t_uint256)dyn_storage"
      },
      "t_mapping(t_uint256,t_array(t_struct(HackathonPrize)270_storage)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct Hacka.HackathonPrize[])",
        "numberOfBytes": "32",
        "value": "t_array(t_struct(HackathonPrize)270_storage)dyn_storage"
      },
      "t_mapping(t_uint256,t_struct(HackathonMetadata)255_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct Hacka.HackathonMetadata)",
        "numberOfBytes": "32",
        "value": "t_struct(HackathonMetadata)255_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(HackathonMetadata)255_storage": {
        "encoding": "inplace",
        "label": "struct Hacka.HackathonMetadata",
        "members": [
          {
            "astId": 239,
            "contract": "contracts/Hacka.sol:Hacka",
            "label": "organizer",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 241,
            "contract": "contracts/Hacka.sol:Hacka",
            "label": "timestampStart",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 243,
            "contract": "contracts/Hacka.sol:Hacka",
            "label": "timestampEnd",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 245,
            "contract": "contracts/Hacka.sol:Hacka",
            "label": "judgingPeriod",
            "offset": 0,
            "slot": "3",
            "type": "t_uint8"
          },
          {
            "astId": 248,
            "contract": "contracts/Hacka.sol:Hacka",
            "label": "stage",
            "offset": 1,
            "slot": "3",
            "type": "t_enum(HackathonStage)237"
          },
          {
            "astId": 250,
            "contract": "contracts/Hacka.sol:Hacka",
            "label": "name",
            "offset": 0,
            "slot": "4",
            "type": "t_string_storage"
          },
          {
            "astId": 252,
            "contract": "contracts/Hacka.sol:Hacka",
            "label": "url",
            "offset": 0,
            "slot": "5",
            "type": "t_string_storage"
          },
          {
            "astId": 254,
            "contract": "contracts/Hacka.sol:Hacka",
            "label": "balance",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "224"
      },
      "t_struct(HackathonPrize)270_storage": {
        "encoding": "inplace",
        "label": "struct Hacka.HackathonPrize",
        "members": [
          {
            "astId": 257,
            "contract": "contracts/Hacka.sol:Hacka",
            "label": "reward",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 260,
            "contract": "contracts/Hacka.sol:Hacka",
            "label": "judges",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_address)dyn_storage"
          },
          {
            "astId": 262,
            "contract": "contracts/Hacka.sol:Hacka",
            "label": "name",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          },
          {
            "astId": 264,
            "contract": "contracts/Hacka.sol:Hacka",
            "label": "description",
            "offset": 0,
            "slot": "3",
            "type": "t_string_storage"
          },
          {
            "astId": 267,
            "contract": "contracts/Hacka.sol:Hacka",
            "label": "submissions",
            "offset": 0,
            "slot": "4",
            "type": "t_array(t_address)dyn_storage"
          },
          {
            "astId": 269,
            "contract": "contracts/Hacka.sol:Hacka",
            "label": "winner",
            "offset": 0,
            "slot": "5",
            "type": "t_address"
          }
        ],
        "numberOfBytes": "192"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  }
}