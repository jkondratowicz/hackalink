{
  "address": "0x55C1Be7aFb2E3252F6019e5E476779Fc191ceEa9",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "hackathonId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "url",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestampStart",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestampEnd",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "judgingPeriod",
          "type": "uint8"
        }
      ],
      "name": "HackathonChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "hackathonId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "organizer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "url",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestampStart",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestampEnd",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "judgingPeriod",
          "type": "uint8"
        }
      ],
      "name": "HackathonCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "hackathonId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "prizeId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "reward",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "description",
          "type": "string"
        }
      ],
      "name": "HackathonPrizeCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "hackathonId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "prizeId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "judge",
          "type": "address"
        }
      ],
      "name": "HackathonPrizeJudgeAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "hackathonId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "enum Hacka.HackathonStage",
          "name": "previousStage",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "enum Hacka.HackathonStage",
          "name": "newStage",
          "type": "uint8"
        }
      ],
      "name": "HackathonStageChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "submissionId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "hackathonId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "prizeId",
          "type": "uint256"
        }
      ],
      "name": "HackathonSubmissionAddedPrize",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "submissionId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "hackathonId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "participant",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        }
      ],
      "name": "HackathonSubmissionCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_hackathonId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_prizeId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_judge",
          "type": "address"
        }
      ],
      "name": "addJudge",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_hackathonId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        }
      ],
      "name": "addPrize",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "prizeId",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "checkUpkeep",
      "outputs": [
        {
          "internalType": "bool",
          "name": "upkeepNeeded",
          "type": "bool"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_timestampStart",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_timestampEnd",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_url",
          "type": "string"
        },
        {
          "internalType": "uint8",
          "name": "_judgingPeriod",
          "type": "uint8"
        }
      ],
      "name": "createHackathon",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "hackathonId",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "disableDemoMode",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "enableDemoMode",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_hackathonId",
          "type": "uint256"
        }
      ],
      "name": "getHackathonMetadata",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "organizer",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "timestampStart",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "timestampEnd",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "judgingPeriod",
              "type": "uint8"
            },
            {
              "internalType": "enum Hacka.HackathonStage",
              "name": "stage",
              "type": "uint8"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "url",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "balance",
              "type": "uint256"
            }
          ],
          "internalType": "struct Hacka.HackathonMetadata",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_organizer",
          "type": "address"
        }
      ],
      "name": "getHackathonsByOrganizer",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "performUpkeep",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "s_hackathons",
      "outputs": [
        {
          "internalType": "address",
          "name": "organizer",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "timestampStart",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "timestampEnd",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "judgingPeriod",
          "type": "uint8"
        },
        {
          "internalType": "enum Hacka.HackathonStage",
          "name": "stage",
          "type": "uint8"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "url",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "s_interval",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "s_lastTimeStamp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "s_organizerHackathons",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "s_prizes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "reward",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        },
        {
          "internalType": "address payable",
          "name": "winner",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "finalized",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "s_submissions",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "participant",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "hackathonId",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_hackathonId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        },
        {
          "internalType": "uint256[]",
          "name": "_prizes",
          "type": "uint256[]"
        }
      ],
      "name": "submitProject",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_hackathonId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_timestampStart",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_timestampEnd",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_url",
          "type": "string"
        },
        {
          "internalType": "uint8",
          "name": "_judgingPeriod",
          "type": "uint8"
        }
      ],
      "name": "updateHackathonMetadata",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_hackathonId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_prizeId",
          "type": "uint256"
        },
        {
          "internalType": "uint8[]",
          "name": "_votes",
          "type": "uint8[]"
        }
      ],
      "name": "voteOnProjects",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xd6bd06a61d94bdca0aa6965484219f4acb24961d5405743d849c891c172582e9",
  "receipt": {
    "to": null,
    "from": "0x6E51d5c51872f97caab78E8e3cA9a23C4945474A",
    "contractAddress": "0x55C1Be7aFb2E3252F6019e5E476779Fc191ceEa9",
    "transactionIndex": 0,
    "gasUsed": "4409106",
    "logsBloom": "0x
    "blockHash": "0xcd5190a41e7fbea288134cf25e446bb84fad874ad147e41d793691c861e428e2",
    "transactionHash": "0xd6bd06a61d94bdca0aa6965484219f4acb24961d5405743d849c891c172582e9",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 28567899,
        "transactionHash": "0xd6bd06a61d94bdca0aa6965484219f4acb24961d5405743d849c891c172582e9",
        "address": "0x55C1Be7aFb2E3252F6019e5E476779Fc191ceEa9",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000006e51d5c51872f97caab78e8e3ca9a23c4945474a"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0xcd5190a41e7fbea288134cf25e446bb84fad874ad147e41d793691c861e428e2"
      }
    ],
    "blockNumber": 28567899,
    "cumulativeGasUsed": "4409106",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "649e596c96c6d27de7a46caa689be9f9",
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"hackathonId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"url\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestampStart\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestampEnd\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"judgingPeriod\",\"type\":\"uint8\"}],\"name\":\"HackathonChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"hackathonId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"organizer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"url\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestampStart\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestampEnd\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"judgingPeriod\",\"type\":\"uint8\"}],\"name\":\"HackathonCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"hackathonId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"prizeId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"name\":\"HackathonPrizeCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"hackathonId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"prizeId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"judge\",\"type\":\"address\"}],\"name\":\"HackathonPrizeJudgeAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"hackathonId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"enum Hacka.HackathonStage\",\"name\":\"previousStage\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"enum Hacka.HackathonStage\",\"name\":\"newStage\",\"type\":\"uint8\"}],\"name\":\"HackathonStageChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"submissionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"hackathonId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"prizeId\",\"type\":\"uint256\"}],\"name\":\"HackathonSubmissionAddedPrize\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"submissionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"hackathonId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"participant\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"HackathonSubmissionCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_hackathonId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_prizeId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_judge\",\"type\":\"address\"}],\"name\":\"addJudge\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_hackathonId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_description\",\"type\":\"string\"}],\"name\":\"addPrize\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"prizeId\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"checkUpkeep\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"upkeepNeeded\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_timestampStart\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_timestampEnd\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_url\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"_judgingPeriod\",\"type\":\"uint8\"}],\"name\":\"createHackathon\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"hackathonId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"disableDemoMode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enableDemoMode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_hackathonId\",\"type\":\"uint256\"}],\"name\":\"getHackathonMetadata\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"organizer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestampStart\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestampEnd\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"judgingPeriod\",\"type\":\"uint8\"},{\"internalType\":\"enum Hacka.HackathonStage\",\"name\":\"stage\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"url\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"internalType\":\"struct Hacka.HackathonMetadata\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_organizer\",\"type\":\"address\"}],\"name\":\"getHackathonsByOrganizer\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"performUpkeep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"s_hackathons\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"organizer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestampStart\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestampEnd\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"judgingPeriod\",\"type\":\"uint8\"},{\"internalType\":\"enum Hacka.HackathonStage\",\"name\":\"stage\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"url\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_interval\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_lastTimeStamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"s_organizerHackathons\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"s_prizes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"address payable\",\"name\":\"winner\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"finalized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"s_submissions\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"participant\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"hackathonId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_hackathonId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_description\",\"type\":\"string\"},{\"internalType\":\"uint256[]\",\"name\":\"_prizes\",\"type\":\"uint256[]\"}],\"name\":\"submitProject\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_hackathonId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_timestampStart\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_timestampEnd\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_url\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"_judgingPeriod\",\"type\":\"uint8\"}],\"name\":\"updateHackathonMetadata\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_hackathonId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_prizeId\",\"type\":\"uint256\"},{\"internalType\":\"uint8[]\",\"name\":\"_votes\",\"type\":\"uint8[]\"}],\"name\":\"voteOnProjects\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Hacka.sol\":\"Hacka\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _setOwner(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _setOwner(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _setOwner(newOwner);\\n    }\\n\\n    function _setOwner(address newOwner) private {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x6bb804a310218875e89d12c053e94a13a4607cdf7cc2052f3e52bd32a0dc50a1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x90565a39ae45c80f0468dc96c7b20d0afc3055f344c8203a0c9258239f350b9f\",\"license\":\"MIT\"},\"contracts/Hacka.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.7;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\ninterface KeeperCompatibleInterface {\\n    function checkUpkeep(bytes calldata checkData) external returns (bool upkeepNeeded, bytes memory performData);\\n\\n    function performUpkeep(bytes calldata performData) external;\\n}\\n\\n// TODO refactor the whole thing to have a Hackathon factory and one contract per Hackathon\\ncontract Hacka is Ownable, KeeperCompatibleInterface {\\n    bool private s_demoMode = false; // to be deleted\\n    uint private s_counter = 0;\\n\\n    enum HackathonStage {NEW, STARTED, JUDGING, FINALIZED}\\n\\n    struct HackathonMetadata {\\n        address organizer;\\n        uint timestampStart;\\n        uint timestampEnd;\\n        uint8 judgingPeriod;\\n        HackathonStage stage;\\n        string name;\\n        string url;\\n        uint balance;\\n        // TODO cid for description\\n    }\\n\\n    struct HackathonSubmission {\\n        address payable participant;\\n        string name;\\n        string description; // TODO cid for description...\\n        uint hackathonId;\\n        uint[] prizes;\\n    }\\n\\n    struct HackathonPrize {\\n        uint reward;\\n        address[] judges;\\n        string name;\\n        string description;\\n        uint[] submissions;\\n        mapping(uint => uint8) submissionScores;\\n        mapping(address => bool) isJudge;\\n        mapping(address => bool) alreadyVoted;\\n        address payable winner;\\n        bool finalized;\\n    }\\n\\n    mapping(uint => HackathonMetadata) public s_hackathons;\\n    mapping(uint => HackathonPrize[]) public s_prizes;\\n    mapping(uint => HackathonSubmission[]) public s_submissions;\\n    mapping(address => uint[]) public s_organizerHackathons;\\n\\n    event HackathonCreated(uint indexed hackathonId, address indexed organizer, string name, string url, uint timestampStart, uint timestampEnd, uint8 judgingPeriod);\\n    event HackathonChanged(uint indexed hackathonId, string name, string url, uint timestampStart, uint timestampEnd, uint8 judgingPeriod);\\n    event HackathonStageChanged(uint indexed hackathonId, HackathonStage previousStage, HackathonStage newStage);\\n    event HackathonSubmissionCreated(uint indexed submissionId, uint indexed hackathonId, address indexed participant, string name);\\n    event HackathonSubmissionAddedPrize(uint indexed submissionId, uint indexed hackathonId, uint indexed prizeId);\\n    event HackathonPrizeCreated(uint indexed hackathonId, uint indexed prizeId, uint reward, string name, string description);\\n    event HackathonPrizeJudgeAdded(uint indexed hackathonId, uint indexed prizeId, address judge);\\n\\n    uint public immutable s_interval = 1 hours;\\n    uint public s_lastTimeStamp;\\n\\n    function createHackathon(\\n        uint _timestampStart,\\n        uint _timestampEnd,\\n        string calldata _name,\\n        string calldata _url,\\n        uint8 _judgingPeriod\\n    ) external returns (uint hackathonId) {\\n        if (s_demoMode == false) {\\n            validateMetadata(\\n                _timestampStart,\\n                _timestampEnd,\\n                _name,\\n                _judgingPeriod,\\n                block.timestamp\\n            );\\n        }\\n\\n        hackathonId = s_counter;\\n        s_counter = s_counter + 1;\\n\\n        s_hackathons[hackathonId].organizer = msg.sender;\\n        s_hackathons[hackathonId].timestampStart = _timestampStart;\\n        s_hackathons[hackathonId].timestampEnd = _timestampEnd;\\n        s_hackathons[hackathonId].judgingPeriod = _judgingPeriod;\\n        s_hackathons[hackathonId].stage = HackathonStage.NEW;\\n        s_hackathons[hackathonId].name = _name;\\n        s_hackathons[hackathonId].url = _url;\\n\\n        s_organizerHackathons[msg.sender].push(hackathonId);\\n\\n        emit HackathonCreated(hackathonId, msg.sender, _name, _url, _timestampStart, _timestampEnd, _judgingPeriod);\\n\\n        return hackathonId;\\n    }\\n\\n    function updateHackathonMetadata(\\n        uint _hackathonId,\\n        uint _timestampStart,\\n        uint _timestampEnd,\\n        string calldata _name,\\n        string calldata _url,\\n        uint8 _judgingPeriod\\n    ) external {\\n        require(s_hackathons[_hackathonId].organizer == msg.sender, \\\"Only hackathon's organizer can change its metadata\\\");\\n        require(s_hackathons[_hackathonId].timestampStart - block.timestamp > 1 hours, \\\"Hackathon metadata can be changed up until 1 hour before start\\\");\\n        require(s_hackathons[_hackathonId].stage == HackathonStage.NEW, \\\"Hackathon metadata can't change after it has started\\\");\\n        validateMetadata(\\n            _timestampStart,\\n            _timestampEnd,\\n            _name,\\n            _judgingPeriod,\\n            block.timestamp\\n        );\\n\\n        s_hackathons[_hackathonId].timestampStart = _timestampStart;\\n        s_hackathons[_hackathonId].timestampEnd = _timestampEnd;\\n        s_hackathons[_hackathonId].name = _name;\\n        s_hackathons[_hackathonId].url = _url;\\n        s_hackathons[_hackathonId].judgingPeriod = _judgingPeriod;\\n\\n        emit HackathonChanged(_hackathonId, _name, _url, _timestampStart, _timestampStart, _judgingPeriod);\\n    }\\n\\n    function updateHackathonStage(\\n        uint _hackathonId,\\n        HackathonStage _newStage\\n    ) internal {\\n        emit HackathonStageChanged(_hackathonId, s_hackathons[_hackathonId].stage, _newStage);\\n        s_hackathons[_hackathonId].stage = _newStage;\\n    }\\n\\n    // TODO method to transfer hackathon ownership to another address (change organizer)\\n\\n    function validateMetadata(\\n        uint _timestampStart,\\n        uint _timestampEnd,\\n        string calldata _name,\\n        uint8 _judgingPeriod,\\n        uint _currentTimestamp\\n    ) pure internal {\\n        require(_timestampEnd - _timestampStart > 1 days, \\\"Hackathon must be at least 1 day long\\\");\\n        require(_timestampStart - _currentTimestamp >= 1 days, \\\"Hackathon start date must be at least 1 day in the future\\\");\\n        require(_judgingPeriod >= 24, \\\"Judging period must be at least 1 day (24 hours)\\\");\\n        require(_judgingPeriod <= 168, \\\"Judging period must not be longer than 7 days (168 hours)\\\");\\n        require(bytes(_name).length >= 8, \\\"Hackathon name must be at least 8 characters\\\");\\n        require(bytes(_name).length <= 100, \\\"Hackathon name must be at most 100 characters\\\");\\n    }\\n\\n    // TODO should accept other tokens, or more specifically - \\\"Hackathon Token\\\" ERC20, for now just use ETH\\n    function addPrize(\\n        uint256 _amount,\\n        uint _hackathonId,\\n        string calldata _name,\\n        string calldata _description\\n    ) external payable returns (uint prizeId) {\\n        require(msg.value == _amount);\\n        require(s_hackathons[_hackathonId].stage == HackathonStage.NEW, \\\"Can't add a prize to an ongoing or finished hackathon\\\");\\n        require(s_hackathons[_hackathonId].organizer == msg.sender, \\\"Only hackathon's organizer can add a prize\\\");\\n        require(bytes(_name).length > 8, \\\"Prize name must be at least 8 characters\\\");\\n        require(msg.value >= 0.0001 ether, \\\"Minimum prize reward is 0.0001 ETH\\\");\\n\\n        s_hackathons[_hackathonId].balance += msg.value;\\n\\n        uint prizeIdx = s_prizes[_hackathonId].length;\\n        s_prizes[_hackathonId].push();\\n\\n        HackathonPrize storage prize = s_prizes[_hackathonId][prizeIdx];\\n        prize.reward = msg.value;\\n        prize.name = _name;\\n        prize.description = _description;\\n\\n        emit HackathonPrizeCreated(_hackathonId, prizeIdx, _amount, _name, _description);\\n\\n        return prizeIdx;\\n    }\\n\\n    function addJudge(\\n        uint _hackathonId,\\n        uint _prizeId,\\n        address _judge\\n    ) external {\\n        require(s_hackathons[_hackathonId].organizer == msg.sender, \\\"Only hackathon's organizer can add a judge\\\");\\n        require(s_prizes[_hackathonId][_prizeId].reward > 0, \\\"Prize not found\\\");\\n\\n        s_prizes[_hackathonId][_prizeId].judges.push(_judge);\\n        s_prizes[_hackathonId][_prizeId].isJudge[_judge] = true;\\n        emit HackathonPrizeJudgeAdded(_hackathonId, _prizeId, _judge);\\n    }\\n\\n    function getHackathonsByOrganizer(\\n        address _organizer\\n    ) external view returns (uint[] memory) {\\n        return s_organizerHackathons[_organizer];\\n    }\\n\\n    function getHackathonMetadata(uint _hackathonId) external view returns (HackathonMetadata memory) {\\n        return s_hackathons[_hackathonId];\\n    }\\n\\n    // TODO delete for actual use! demo mode is to be able to skip date checks to create a demo hackathon\\n    function enableDemoMode() public onlyOwner {\\n        s_demoMode = true;\\n    }\\n\\n    // TODO delete for actual use! demo mode is to be able to skip date checks to create a demo hackathon\\n    function disableDemoMode() public onlyOwner {\\n        s_demoMode = false;\\n    }\\n\\n    function checkUpkeep(bytes calldata /* checkData */) external view override returns (bool upkeepNeeded, bytes memory /* performData */) {\\n        bool intervalPassed = s_demoMode || (block.timestamp - s_lastTimeStamp) > s_interval;\\n        bool hasHackathons = s_counter > 0;\\n\\n        // TODO optimize - return IDs of hackathons that need to have their status changed! this way performUpkeep won't have to iterate all hackathons\\n        bool hasHackathonsPendingChange = false;\\n        for (uint id = 0; id < s_counter; id++) {\\n            if (s_hackathons[id].stage == HackathonStage.FINALIZED) {\\n                continue;\\n            }\\n\\n            if (s_hackathons[id].stage == HackathonStage.NEW && block.timestamp > s_hackathons[id].timestampStart) {\\n                hasHackathonsPendingChange = true;\\n                break;\\n            }\\n\\n            if (s_hackathons[id].stage == HackathonStage.STARTED && block.timestamp > s_hackathons[id].timestampEnd) {\\n                hasHackathonsPendingChange = true;\\n                break;\\n            }\\n\\n            if (s_hackathons[id].stage == HackathonStage.JUDGING && block.timestamp > s_hackathons[id].timestampEnd + (s_hackathons[id].judgingPeriod * 1 hours)) {\\n                hasHackathonsPendingChange = true;\\n                break;\\n            }\\n        }\\n\\n        upkeepNeeded = intervalPassed && hasHackathons && hasHackathonsPendingChange;\\n    }\\n\\n    function performUpkeep(bytes calldata /* performData */) external override {\\n        s_lastTimeStamp = block.timestamp;\\n        for (uint id = 0; id < s_counter; id++) {\\n            if (s_hackathons[id].stage == HackathonStage.NEW && block.timestamp > s_hackathons[id].timestampStart) {\\n                updateHackathonStage(id, HackathonStage.STARTED);\\n                continue;\\n            }\\n\\n            if (s_hackathons[id].stage == HackathonStage.STARTED && block.timestamp > s_hackathons[id].timestampEnd) {\\n                updateHackathonStage(id, HackathonStage.JUDGING);\\n                continue;\\n            }\\n\\n            if (s_hackathons[id].stage == HackathonStage.JUDGING && block.timestamp > s_hackathons[id].timestampEnd + (s_hackathons[id].judgingPeriod * 1 hours)) {\\n                finalizeHackathon(id);\\n            }\\n        }\\n    }\\n\\n    function finalizeHackathon(uint hackathonId) internal {\\n        for (uint prizeIdx = 0; prizeIdx < s_prizes[hackathonId].length; prizeIdx++) {\\n            uint maxScore = 0;\\n            uint winningSubmissionIdx = 0;\\n            for (uint submissionIdx = 0; submissionIdx < s_prizes[hackathonId][prizeIdx].submissions.length; submissionIdx++) {\\n                if (s_prizes[hackathonId][prizeIdx].submissionScores[submissionIdx] > maxScore) {\\n                    winningSubmissionIdx = submissionIdx;\\n                    maxScore = s_prizes[hackathonId][prizeIdx].submissionScores[submissionIdx];\\n                }\\n            }\\n\\n            s_prizes[hackathonId][prizeIdx].finalized = true;\\n\\n            // Clean, self-documenting code right here\\n            s_prizes[hackathonId][prizeIdx].winner = s_submissions[hackathonId][s_prizes[hackathonId][prizeIdx].submissions[winningSubmissionIdx]].participant;\\n\\n            // TODO should not pay out directly, but rather have a \\\"redeem\\\" external function\\n            s_prizes[hackathonId][prizeIdx].winner.transfer(s_prizes[hackathonId][prizeIdx].reward);\\n            s_hackathons[hackathonId].balance -= s_prizes[hackathonId][prizeIdx].reward;\\n        }\\n\\n        updateHackathonStage(hackathonId, HackathonStage.FINALIZED);\\n    }\\n\\n    function submitProject(\\n        uint _hackathonId,\\n        string calldata _name,\\n        string calldata _description,\\n        uint[] calldata _prizes // add cid\\n    ) external {\\n        require(s_hackathons[_hackathonId].stage == HackathonStage.STARTED, \\\"Hackathon doesn't accept submissions at this stage\\\");\\n        require(bytes(_name).length >= 4, \\\"Submission name must be at least 4 characters\\\");\\n        require(_prizes.length >= 1, \\\"You must apply for at least one prize\\\");\\n        for (uint prizeIdx = 0; prizeIdx < _prizes.length; prizeIdx++) {\\n            require(_prizes[prizeIdx] < s_prizes[_hackathonId].length, \\\"One of the prizes you applied for does not exist\\\");\\n        }\\n\\n        uint submissionId = s_submissions[_hackathonId].length;\\n        s_submissions[_hackathonId].push();\\n\\n        HackathonSubmission storage submission = s_submissions[_hackathonId][submissionId];\\n        submission.participant = payable(msg.sender);\\n        submission.name = _name;\\n        submission.description = _description;\\n        submission.hackathonId = _hackathonId;\\n        for (uint prizeIdx = 0; prizeIdx < _prizes.length; prizeIdx++) {\\n            submission.prizes.push(_prizes[prizeIdx]);\\n            s_prizes[_hackathonId][_prizes[prizeIdx]].submissions.push(submissionId);\\n            emit HackathonSubmissionAddedPrize(submissionId, _hackathonId, _prizes[prizeIdx]);\\n        }\\n\\n        emit HackathonSubmissionCreated(submissionId, _hackathonId, msg.sender, _name);\\n    }\\n\\n    function voteOnProjects(\\n        uint _hackathonId,\\n        uint _prizeId,\\n        uint8[] calldata _votes\\n    ) external {\\n        require(s_hackathons[_hackathonId].stage == HackathonStage.JUDGING, \\\"Hackathon is not in a judging stage\\\");\\n        require(s_prizes[_hackathonId][_prizeId].isJudge[msg.sender] == true, \\\"You are not this hackathon's judge\\\");\\n        require(s_prizes[_hackathonId][_prizeId].alreadyVoted[msg.sender] == false, \\\"You have already voted for this prize\\\");\\n        require(_votes.length == s_prizes[_hackathonId][_prizeId].submissions.length, \\\"You must provide a score for each submission\\\");\\n        for (uint scoreIdx = 0; scoreIdx < _votes.length; scoreIdx++) {\\n            require(_votes[scoreIdx] >= 0, \\\"Scores must be between 0 and 5\\\");\\n            require(_votes[scoreIdx] <= 5, \\\"Scores must be between 0 and 5\\\");\\n            s_prizes[_hackathonId][_prizeId].submissionScores[scoreIdx] += _votes[scoreIdx];\\n        }\\n\\n        s_prizes[_hackathonId][_prizeId].alreadyVoted[msg.sender] = true;\\n    }\\n}\\n\",\"keccak256\":\"0xb5bb21fcccc9bea1ad92a25944cd2c1f9b116e41a2d4be8f7b067abbad8e6440\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7,
        "contract": "contracts/Hacka.sol:Hacka",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 150,
        "contract": "contracts/Hacka.sol:Hacka",
        "label": "s_demoMode",
        "offset": 20,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 153,
        "contract": "contracts/Hacka.sol:Hacka",
        "label": "s_counter",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 222,
        "contract": "contracts/Hacka.sol:Hacka",
        "label": "s_hackathons",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_uint256,t_struct(HackathonMetadata)176_storage)"
      },
      {
        "astId": 228,
        "contract": "contracts/Hacka.sol:Hacka",
        "label": "s_prizes",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_uint256,t_array(t_struct(HackathonPrize)217_storage)dyn_storage)"
      },
      {
        "astId": 234,
        "contract": "contracts/Hacka.sol:Hacka",
        "label": "s_submissions",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_uint256,t_array(t_struct(HackathonSubmission)188_storage)dyn_storage)"
      },
      {
        "astId": 239,
        "contract": "contracts/Hacka.sol:Hacka",
        "label": "s_organizerHackathons",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)"
      },
      {
        "astId": 322,
        "contract": "contracts/Hacka.sol:Hacka",
        "label": "s_lastTimeStamp",
        "offset": 0,
        "slot": "6",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_address_payable": {
        "encoding": "inplace",
        "label": "address payable",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_array(t_struct(HackathonPrize)217_storage)dyn_storage": {
        "base": "t_struct(HackathonPrize)217_storage",
        "encoding": "dynamic_array",
        "label": "struct Hacka.HackathonPrize[]",
        "numberOfBytes": "32"
      },
      "t_array(t_struct(HackathonSubmission)188_storage)dyn_storage": {
        "base": "t_struct(HackathonSubmission)188_storage",
        "encoding": "dynamic_array",
        "label": "struct Hacka.HackathonSubmission[]",
        "numberOfBytes": "32"
      },
      "t_array(t_uint256)dyn_storage": {
        "base": "t_uint256",
        "encoding": "dynamic_array",
        "label": "uint256[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_enum(HackathonStage)158": {
        "encoding": "inplace",
        "label": "enum Hacka.HackathonStage",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256[])",
        "numberOfBytes": "32",
        "value": "t_array(t_uint256)dyn_storage"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_uint256,t_array(t_struct(HackathonPrize)217_storage)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct Hacka.HackathonPrize[])",
        "numberOfBytes": "32",
        "value": "t_array(t_struct(HackathonPrize)217_storage)dyn_storage"
      },
      "t_mapping(t_uint256,t_array(t_struct(HackathonSubmission)188_storage)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct Hacka.HackathonSubmission[])",
        "numberOfBytes": "32",
        "value": "t_array(t_struct(HackathonSubmission)188_storage)dyn_storage"
      },
      "t_mapping(t_uint256,t_struct(HackathonMetadata)176_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct Hacka.HackathonMetadata)",
        "numberOfBytes": "32",
        "value": "t_struct(HackathonMetadata)176_storage"
      },
      "t_mapping(t_uint256,t_uint8)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => uint8)",
        "numberOfBytes": "32",
        "value": "t_uint8"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(HackathonMetadata)176_storage": {
        "encoding": "inplace",
        "label": "struct Hacka.HackathonMetadata",
        "members": [
          {
            "astId": 160,
            "contract": "contracts/Hacka.sol:Hacka",
            "label": "organizer",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 162,
            "contract": "contracts/Hacka.sol:Hacka",
            "label": "timestampStart",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 164,
            "contract": "contracts/Hacka.sol:Hacka",
            "label": "timestampEnd",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 166,
            "contract": "contracts/Hacka.sol:Hacka",
            "label": "judgingPeriod",
            "offset": 0,
            "slot": "3",
            "type": "t_uint8"
          },
          {
            "astId": 169,
            "contract": "contracts/Hacka.sol:Hacka",
            "label": "stage",
            "offset": 1,
            "slot": "3",
            "type": "t_enum(HackathonStage)158"
          },
          {
            "astId": 171,
            "contract": "contracts/Hacka.sol:Hacka",
            "label": "name",
            "offset": 0,
            "slot": "4",
            "type": "t_string_storage"
          },
          {
            "astId": 173,
            "contract": "contracts/Hacka.sol:Hacka",
            "label": "url",
            "offset": 0,
            "slot": "5",
            "type": "t_string_storage"
          },
          {
            "astId": 175,
            "contract": "contracts/Hacka.sol:Hacka",
            "label": "balance",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "224"
      },
      "t_struct(HackathonPrize)217_storage": {
        "encoding": "inplace",
        "label": "struct Hacka.HackathonPrize",
        "members": [
          {
            "astId": 190,
            "contract": "contracts/Hacka.sol:Hacka",
            "label": "reward",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 193,
            "contract": "contracts/Hacka.sol:Hacka",
            "label": "judges",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_address)dyn_storage"
          },
          {
            "astId": 195,
            "contract": "contracts/Hacka.sol:Hacka",
            "label": "name",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          },
          {
            "astId": 197,
            "contract": "contracts/Hacka.sol:Hacka",
            "label": "description",
            "offset": 0,
            "slot": "3",
            "type": "t_string_storage"
          },
          {
            "astId": 200,
            "contract": "contracts/Hacka.sol:Hacka",
            "label": "submissions",
            "offset": 0,
            "slot": "4",
            "type": "t_array(t_uint256)dyn_storage"
          },
          {
            "astId": 204,
            "contract": "contracts/Hacka.sol:Hacka",
            "label": "submissionScores",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_uint256,t_uint8)"
          },
          {
            "astId": 208,
            "contract": "contracts/Hacka.sol:Hacka",
            "label": "isJudge",
            "offset": 0,
            "slot": "6",
            "type": "t_mapping(t_address,t_bool)"
          },
          {
            "astId": 212,
            "contract": "contracts/Hacka.sol:Hacka",
            "label": "alreadyVoted",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_address,t_bool)"
          },
          {
            "astId": 214,
            "contract": "contracts/Hacka.sol:Hacka",
            "label": "winner",
            "offset": 0,
            "slot": "8",
            "type": "t_address_payable"
          },
          {
            "astId": 216,
            "contract": "contracts/Hacka.sol:Hacka",
            "label": "finalized",
            "offset": 20,
            "slot": "8",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "288"
      },
      "t_struct(HackathonSubmission)188_storage": {
        "encoding": "inplace",
        "label": "struct Hacka.HackathonSubmission",
        "members": [
          {
            "astId": 178,
            "contract": "contracts/Hacka.sol:Hacka",
            "label": "participant",
            "offset": 0,
            "slot": "0",
            "type": "t_address_payable"
          },
          {
            "astId": 180,
            "contract": "contracts/Hacka.sol:Hacka",
            "label": "name",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 182,
            "contract": "contracts/Hacka.sol:Hacka",
            "label": "description",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          },
          {
            "astId": 184,
            "contract": "contracts/Hacka.sol:Hacka",
            "label": "hackathonId",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 187,
            "contract": "contracts/Hacka.sol:Hacka",
            "label": "prizes",
            "offset": 0,
            "slot": "4",
            "type": "t_array(t_uint256)dyn_storage"
          }
        ],
        "numberOfBytes": "160"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  }
}